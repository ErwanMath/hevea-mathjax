"htmlMath.ml" 12 741 745 "htmlMath.ml" 12 741 751
type(
  string
)
ident(
  def header "htmlMath.ml" 15 817 817 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 12 741 754 "htmlMath.ml" 12 741 814
type(
  string
)
"htmlMath.ml" 22 875 879 "htmlMath.ml" 22 875 890
type(
  (int -> unit) MyStack.t
)
ident(
  def delay_stack "htmlMath.ml" 25 950 950 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 22 875 893 "htmlMath.ml" 22 875 907
type(
  string -> (int -> unit) MyStack.t
)
ident(
  ext_ref MyStack.create
)
"htmlMath.ml" 22 875 908 "htmlMath.ml" 22 875 921
type(
  string
)
"htmlMath.ml" 22 875 893 "htmlMath.ml" 22 875 921
call(
  stack
)
type(
  (int -> unit) MyStack.t
)
"htmlMath.ml" 25 950 954 "htmlMath.ml" 25 950 959
type(
  (int -> unit) -> unit
)
ident(
  def delay "htmlMath.ml" 33 1162 1162 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 25 950 960 "htmlMath.ml" 25 950 961
type(
  int -> unit
)
ident(
  def f "htmlMath.ml" 26 964 966 "htmlMath.ml" 31 1115 1160
)
"htmlMath.ml" 26 964 969 "htmlMath.ml" 26 964 970
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 26 964 970 "htmlMath.ml" 26 964 977
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 26 964 969 "htmlMath.ml" 26 964 977
type(
  int
)
"htmlMath.ml" 26 964 978 "htmlMath.ml" 26 964 979
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 26 964 980 "htmlMath.ml" 26 964 981
type(
  int
)
"htmlMath.ml" 26 964 969 "htmlMath.ml" 26 964 981
type(
  bool
)
"htmlMath.ml" 26 964 987 "htmlMath.ml" 26 964 998
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.prerr_flags
)
"htmlMath.ml" 26 964 999 "htmlMath.ml" 26 964 1009
type(
  string
)
"htmlMath.ml" 26 964 987 "htmlMath.ml" 26 964 1009
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 26 964 966 "htmlMath.ml" 26 964 1009
type(
  unit
)
"htmlMath.ml" 27 1012 1014 "htmlMath.ml" 27 1012 1018
type(
  int MyStack.t -> int -> unit
)
ident(
  ext_ref MyStack.push
)
"htmlMath.ml" 27 1012 1019 "htmlMath.ml" 27 1012 1025
type(
  HtmlCommon.stack_t
)
ident(
  ext_ref HtmlCommon.stacks
)
"htmlMath.ml" 27 1012 1019 "htmlMath.ml" 27 1012 1033
type(
  int MyStack.t
)
"htmlMath.ml" 27 1012 1034 "htmlMath.ml" 27 1012 1039
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 27 1012 1034 "htmlMath.ml" 27 1012 1045
type(
  int
)
"htmlMath.ml" 27 1012 1014 "htmlMath.ml" 27 1012 1045
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 28 1048 1050 "htmlMath.ml" 28 1048 1055
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 28 1048 1065 "htmlMath.ml" 28 1048 1066
type(
  int
)
"htmlMath.ml" 28 1048 1050 "htmlMath.ml" 28 1048 1066
type(
  unit
)
"htmlMath.ml" 29 1068 1070 "htmlMath.ml" 29 1068 1074
type(
  (int -> unit) MyStack.t -> (int -> unit) -> unit
)
ident(
  ext_ref MyStack.push
)
"htmlMath.ml" 29 1068 1075 "htmlMath.ml" 29 1068 1086
type(
  (int -> unit) MyStack.t
)
ident(
  int_ref delay_stack "htmlMath.ml" 22 875 879 "htmlMath.ml" 22 875 890
)
"htmlMath.ml" 29 1068 1087 "htmlMath.ml" 29 1068 1088
type(
  int -> unit
)
ident(
  int_ref f "htmlMath.ml" 25 950 960 "htmlMath.ml" 25 950 961
)
"htmlMath.ml" 29 1068 1070 "htmlMath.ml" 29 1068 1088
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 30 1091 1093 "htmlMath.ml" 30 1091 1103
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 30 1091 1104 "htmlMath.ml" 30 1091 1109
type(
  HtmlCommon.block
)
"htmlMath.ml" 30 1091 1110 "htmlMath.ml" 30 1091 1112
type(
  string
)
"htmlMath.ml" 30 1091 1093 "htmlMath.ml" 30 1091 1112
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 31 1115 1120 "htmlMath.ml" 31 1115 1121
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 31 1115 1121 "htmlMath.ml" 31 1115 1128
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 31 1115 1120 "htmlMath.ml" 31 1115 1128
type(
  int
)
"htmlMath.ml" 31 1115 1129 "htmlMath.ml" 31 1115 1130
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 31 1115 1131 "htmlMath.ml" 31 1115 1132
type(
  int
)
"htmlMath.ml" 31 1115 1120 "htmlMath.ml" 31 1115 1132
type(
  bool
)
"htmlMath.ml" 31 1115 1138 "htmlMath.ml" 31 1115 1149
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.prerr_flags
)
"htmlMath.ml" 31 1115 1150 "htmlMath.ml" 31 1115 1160
type(
  string
)
"htmlMath.ml" 31 1115 1138 "htmlMath.ml" 31 1115 1160
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 31 1115 1117 "htmlMath.ml" 31 1115 1160
type(
  unit
)
"htmlMath.ml" 30 1091 1093 "htmlMath.ml" 31 1115 1160
type(
  unit
)
"htmlMath.ml" 29 1068 1070 "htmlMath.ml" 31 1115 1160
type(
  unit
)
"htmlMath.ml" 28 1048 1050 "htmlMath.ml" 31 1115 1160
type(
  unit
)
"htmlMath.ml" 27 1012 1014 "htmlMath.ml" 31 1115 1160
type(
  unit
)
"htmlMath.ml" 26 964 966 "htmlMath.ml" 31 1115 1160
type(
  unit
)
"htmlMath.ml" 33 1162 1166 "htmlMath.ml" 33 1162 1171
type(
  int -> unit
)
ident(
  def flush "htmlMath.ml" 55 1826 1826 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 33 1162 1172 "htmlMath.ml" 33 1162 1173
type(
  int
)
ident(
  def x "htmlMath.ml" 34 1176 1178 "htmlMath.ml" 51 1777 1803
)
"htmlMath.ml" 34 1176 1181 "htmlMath.ml" 34 1176 1182
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 34 1176 1182 "htmlMath.ml" 34 1176 1189
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 34 1176 1181 "htmlMath.ml" 34 1176 1189
type(
  int
)
"htmlMath.ml" 34 1176 1190 "htmlMath.ml" 34 1176 1191
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 34 1176 1192 "htmlMath.ml" 34 1176 1193
type(
  int
)
"htmlMath.ml" 34 1176 1181 "htmlMath.ml" 34 1176 1193
type(
  bool
)
"htmlMath.ml" 35 1199 1203 "htmlMath.ml" 35 1199 1214
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.prerr_flags
)
"htmlMath.ml" 35 1199 1216 "htmlMath.ml" 35 1199 1236
type(
  string
)
"htmlMath.ml" 35 1199 1236 "htmlMath.ml" 35 1199 1237
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 35 1199 1237 "htmlMath.ml" 35 1199 1250
type(
  int -> string
)
ident(
  ext_ref Pervasives.string_of_int
)
"htmlMath.ml" 35 1199 1251 "htmlMath.ml" 35 1199 1252
type(
  int
)
ident(
  int_ref x "htmlMath.ml" 33 1162 1172 "htmlMath.ml" 33 1162 1173
)
"htmlMath.ml" 35 1199 1237 "htmlMath.ml" 35 1199 1252
call(
  stack
)
type(
  string
)
"htmlMath.ml" 35 1199 1252 "htmlMath.ml" 35 1199 1253
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 35 1199 1253 "htmlMath.ml" 35 1199 1257
type(
  string
)
"htmlMath.ml" 35 1199 1237 "htmlMath.ml" 35 1199 1257
call(
  stack
)
type(
  string
)
"htmlMath.ml" 35 1199 1215 "htmlMath.ml" 35 1199 1258
call(
  stack
)
type(
  string
)
"htmlMath.ml" 35 1199 1203 "htmlMath.ml" 35 1199 1258
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 34 1176 1178 "htmlMath.ml" 35 1199 1258
type(
  unit
)
"htmlMath.ml" 36 1260 1262 "htmlMath.ml" 36 1260 1277
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.try_close_block
)
"htmlMath.ml" 36 1260 1278 "htmlMath.ml" 36 1260 1283
type(
  HtmlCommon.block
)
"htmlMath.ml" 36 1260 1262 "htmlMath.ml" 36 1260 1283
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 37 1286 1292 "htmlMath.ml" 37 1286 1294
type(
  HtmlCommon.block
)
ident(
  def ps "htmlMath.ml" 38 1325 1327 "htmlMath.ml" 51 1777 1803
)
"htmlMath.ml" 37 1286 1295 "htmlMath.ml" 37 1286 1296
type(
  string
)
"htmlMath.ml" 37 1286 1297 "htmlMath.ml" 37 1286 1301
type(
  HtmlCommon.status
)
ident(
  def pout "htmlMath.ml" 38 1325 1327 "htmlMath.ml" 51 1777 1803
)
"htmlMath.ml" 37 1286 1292 "htmlMath.ml" 37 1286 1301
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 37 1286 1304 "htmlMath.ml" 37 1286 1311
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status
)
ident(
  ext_ref HtmlCommon.pop_out
)
"htmlMath.ml" 37 1286 1312 "htmlMath.ml" 37 1286 1321
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 37 1286 1304 "htmlMath.ml" 37 1286 1321
call(
  stack
)
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 38 1325 1330 "htmlMath.ml" 38 1325 1332
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 37 1286 1292 "htmlMath.ml" 37 1286 1294
)
"htmlMath.ml" 38 1325 1333 "htmlMath.ml" 38 1325 1335
type(
  HtmlCommon.block -> HtmlCommon.block -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"htmlMath.ml" 38 1325 1336 "htmlMath.ml" 38 1325 1341
type(
  HtmlCommon.block
)
"htmlMath.ml" 38 1325 1330 "htmlMath.ml" 38 1325 1341
type(
  bool
)
"htmlMath.ml" 39 1347 1351 "htmlMath.ml" 39 1347 1356
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"htmlMath.ml" 39 1347 1370 "htmlMath.ml" 39 1347 1396
type(
  string
)
"htmlMath.ml" 39 1347 1396 "htmlMath.ml" 39 1347 1397
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 39 1347 1397 "htmlMath.ml" 39 1347 1412
type(
  HtmlCommon.block -> string
)
ident(
  ext_ref HtmlCommon.string_of_block
)
"htmlMath.ml" 39 1347 1413 "htmlMath.ml" 39 1347 1415
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 37 1286 1292 "htmlMath.ml" 37 1286 1294
)
"htmlMath.ml" 39 1347 1397 "htmlMath.ml" 39 1347 1415
call(
  stack
)
type(
  string
)
"htmlMath.ml" 39 1347 1369 "htmlMath.ml" 39 1347 1416
call(
  stack
)
type(
  string
)
"htmlMath.ml" 39 1347 1357 "htmlMath.ml" 39 1347 1417
type(
  exn
)
"htmlMath.ml" 39 1347 1351 "htmlMath.ml" 39 1347 1417
type(
  unit
)
"htmlMath.ml" 38 1325 1327 "htmlMath.ml" 39 1347 1417
type(
  unit
)
"htmlMath.ml" 40 1420 1426 "htmlMath.ml" 40 1420 1430
type(
  Element.text list
)
ident(
  def mods "htmlMath.ml" 41 1477 1479 "htmlMath.ml" 51 1777 1803
)
"htmlMath.ml" 40 1420 1433 "htmlMath.ml" 40 1420 1440
type(
  HtmlCommon.t_env list -> Element.text list -> Element.text list
)
ident(
  ext_ref HtmlCommon.as_envs
)
"htmlMath.ml" 40 1420 1441 "htmlMath.ml" 40 1420 1442
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 40 1420 1442 "htmlMath.ml" 40 1420 1449
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 40 1420 1441 "htmlMath.ml" 40 1420 1449
type(
  HtmlCommon.status
)
"htmlMath.ml" 40 1420 1441 "htmlMath.ml" 40 1420 1456
type(
  HtmlCommon.t_env list
)
"htmlMath.ml" 40 1420 1457 "htmlMath.ml" 40 1420 1458
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 40 1420 1458 "htmlMath.ml" 40 1420 1465
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 40 1420 1457 "htmlMath.ml" 40 1420 1465
type(
  HtmlCommon.status
)
"htmlMath.ml" 40 1420 1457 "htmlMath.ml" 40 1420 1473
type(
  Element.text list
)
"htmlMath.ml" 40 1420 1433 "htmlMath.ml" 40 1420 1473
call(
  stack
)
type(
  Element.text list
)
"htmlMath.ml" 41 1477 1479 "htmlMath.ml" 41 1477 1492
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.do_close_mods
)
"htmlMath.ml" 41 1477 1493 "htmlMath.ml" 41 1477 1495
type(
  unit
)
"htmlMath.ml" 41 1477 1479 "htmlMath.ml" 41 1477 1495
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 42 1498 1504 "htmlMath.ml" 42 1498 1511
type(
  HtmlCommon.status
)
ident(
  def old_out "htmlMath.ml" 43 1526 1528 "htmlMath.ml" 51 1777 1803
)
"htmlMath.ml" 42 1498 1514 "htmlMath.ml" 42 1498 1515
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 42 1498 1515 "htmlMath.ml" 42 1498 1522
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 42 1498 1514 "htmlMath.ml" 42 1498 1522
type(
  HtmlCommon.status
)
"htmlMath.ml" 43 1526 1528 "htmlMath.ml" 43 1526 1535
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 43 1526 1536 "htmlMath.ml" 43 1526 1538
type(
  HtmlCommon.status ref -> HtmlCommon.status -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"htmlMath.ml" 43 1526 1539 "htmlMath.ml" 43 1526 1543
type(
  HtmlCommon.status
)
ident(
  int_ref pout "htmlMath.ml" 37 1286 1297 "htmlMath.ml" 37 1286 1301
)
"htmlMath.ml" 43 1526 1528 "htmlMath.ml" 43 1526 1543
type(
  unit
)
"htmlMath.ml" 44 1546 1552 "htmlMath.ml" 44 1546 1553
type(
  int -> unit
)
ident(
  def f "htmlMath.ml" 45 1575 1577 "htmlMath.ml" 51 1777 1803
)
"htmlMath.ml" 44 1546 1556 "htmlMath.ml" 44 1546 1559
type(
  (int -> unit) MyStack.t -> int -> unit
)
ident(
  ext_ref MyStack.pop
)
"htmlMath.ml" 44 1546 1560 "htmlMath.ml" 44 1546 1571
type(
  (int -> unit) MyStack.t
)
ident(
  int_ref delay_stack "htmlMath.ml" 22 875 879 "htmlMath.ml" 22 875 890
)
"htmlMath.ml" 44 1546 1556 "htmlMath.ml" 44 1546 1571
call(
  stack
)
type(
  int -> unit
)
"htmlMath.ml" 45 1575 1577 "htmlMath.ml" 45 1575 1578
type(
  int -> unit
)
ident(
  int_ref f "htmlMath.ml" 44 1546 1552 "htmlMath.ml" 44 1546 1553
)
"htmlMath.ml" 45 1575 1579 "htmlMath.ml" 45 1575 1580
type(
  int
)
ident(
  int_ref x "htmlMath.ml" 33 1162 1172 "htmlMath.ml" 33 1162 1173
)
"htmlMath.ml" 45 1575 1577 "htmlMath.ml" 45 1575 1580
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 46 1583 1585 "htmlMath.ml" 46 1583 1593
type(
  Out.t -> Out.t -> unit
)
ident(
  ext_ref Out.copy
)
"htmlMath.ml" 46 1583 1594 "htmlMath.ml" 46 1583 1601
type(
  HtmlCommon.status
)
ident(
  int_ref old_out "htmlMath.ml" 42 1498 1504 "htmlMath.ml" 42 1498 1511
)
"htmlMath.ml" 46 1583 1594 "htmlMath.ml" 46 1583 1605
type(
  Out.t
)
"htmlMath.ml" 46 1583 1606 "htmlMath.ml" 46 1583 1607
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 46 1583 1607 "htmlMath.ml" 46 1583 1614
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 46 1583 1606 "htmlMath.ml" 46 1583 1614
type(
  HtmlCommon.status
)
"htmlMath.ml" 46 1583 1606 "htmlMath.ml" 46 1583 1618
type(
  Out.t
)
"htmlMath.ml" 46 1583 1585 "htmlMath.ml" 46 1583 1618
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 47 1621 1623 "htmlMath.ml" 47 1621 1628
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 47 1621 1638 "htmlMath.ml" 47 1621 1643
type(
  bool
)
"htmlMath.ml" 47 1621 1623 "htmlMath.ml" 47 1621 1643
type(
  unit
)
"htmlMath.ml" 47 1621 1646 "htmlMath.ml" 47 1621 1651
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 47 1621 1661 "htmlMath.ml" 47 1621 1666
type(
  bool
)
"htmlMath.ml" 47 1621 1646 "htmlMath.ml" 47 1621 1666
type(
  unit
)
"htmlMath.ml" 48 1669 1671 "htmlMath.ml" 48 1669 1672
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 48 1669 1672 "htmlMath.ml" 48 1669 1679
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 48 1669 1671 "htmlMath.ml" 48 1669 1679
type(
  HtmlCommon.status
)
"htmlMath.ml" 48 1669 1691 "htmlMath.ml" 48 1669 1695
type(
  Element.text list
)
ident(
  int_ref mods "htmlMath.ml" 40 1420 1426 "htmlMath.ml" 40 1420 1430
)
"htmlMath.ml" 48 1669 1671 "htmlMath.ml" 48 1669 1695
type(
  unit
)
"htmlMath.ml" 49 1698 1700 "htmlMath.ml" 49 1698 1705
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 49 1698 1715 "htmlMath.ml" 49 1698 1718
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.max
)
"htmlMath.ml" 49 1698 1720 "htmlMath.ml" 49 1698 1723
type(
  int MyStack.t -> int
)
ident(
  ext_ref MyStack.pop
)
"htmlMath.ml" 49 1698 1724 "htmlMath.ml" 49 1698 1730
type(
  HtmlCommon.stack_t
)
ident(
  ext_ref HtmlCommon.stacks
)
"htmlMath.ml" 49 1698 1724 "htmlMath.ml" 49 1698 1738
type(
  int MyStack.t
)
"htmlMath.ml" 49 1698 1719 "htmlMath.ml" 49 1698 1739
call(
  stack
)
type(
  int
)
"htmlMath.ml" 49 1698 1740 "htmlMath.ml" 49 1698 1745
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 49 1698 1740 "htmlMath.ml" 49 1698 1751
type(
  int
)
"htmlMath.ml" 49 1698 1715 "htmlMath.ml" 49 1698 1751
call(
  stack
)
type(
  int
)
"htmlMath.ml" 49 1698 1700 "htmlMath.ml" 49 1698 1751
type(
  unit
)
"htmlMath.ml" 50 1754 1759 "htmlMath.ml" 50 1754 1760
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 50 1754 1760 "htmlMath.ml" 50 1754 1767
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 50 1754 1759 "htmlMath.ml" 50 1754 1767
type(
  int
)
"htmlMath.ml" 50 1754 1768 "htmlMath.ml" 50 1754 1769
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 50 1754 1770 "htmlMath.ml" 50 1754 1771
type(
  int
)
"htmlMath.ml" 50 1754 1759 "htmlMath.ml" 50 1754 1771
type(
  bool
)
"htmlMath.ml" 51 1777 1781 "htmlMath.ml" 51 1777 1792
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.prerr_flags
)
"htmlMath.ml" 51 1777 1793 "htmlMath.ml" 51 1777 1803
type(
  string
)
"htmlMath.ml" 51 1777 1781 "htmlMath.ml" 51 1777 1803
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 50 1754 1756 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 49 1698 1700 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 48 1669 1671 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 47 1621 1646 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 47 1621 1623 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 46 1583 1585 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 45 1575 1577 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 44 1546 1548 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 43 1526 1528 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 42 1498 1500 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 41 1477 1479 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 40 1420 1422 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 38 1325 1327 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 37 1286 1288 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 36 1260 1262 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 34 1176 1178 "htmlMath.ml" 51 1777 1803
type(
  unit
)
"htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
type(
  string -> unit
)
ident(
  def put "htmlMath.ml" 58 1888 1888 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 55 1826 1837 "htmlMath.ml" 55 1826 1851
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.put
)
"htmlMath.ml" 56 1852 1856 "htmlMath.ml" 56 1852 1864
type(
  char -> unit
)
ident(
  def put_char "htmlMath.ml" 58 1888 1888 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 56 1852 1867 "htmlMath.ml" 56 1852 1886
type(
  char -> unit
)
ident(
  ext_ref HtmlCommon.put_char
)
"htmlMath.ml" 58 1888 1892 "htmlMath.ml" 58 1888 1903
type(
  string -> unit
)
ident(
  def put_in_math "htmlMath.ml" 72 2110 2110 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 58 1888 1904 "htmlMath.ml" 58 1888 1905
type(
  string
)
ident(
  def s "htmlMath.ml" 59 1908 1910 "htmlMath.ml" 66 2057 2062
)
"htmlMath.ml" 59 1908 1913 "htmlMath.ml" 59 1908 1918
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 59 1908 1913 "htmlMath.ml" 59 1908 1925
type(
  bool
)
"htmlMath.ml" 59 1908 1926 "htmlMath.ml" 59 1908 1928
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 59 1908 1929 "htmlMath.ml" 59 1908 1930
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 59 1908 1930 "htmlMath.ml" 59 1908 1938
type(
  bool ref
)
ident(
  ext_ref Parse_opts.pedantic
)
"htmlMath.ml" 59 1908 1929 "htmlMath.ml" 59 1908 1938
type(
  bool
)
"htmlMath.ml" 59 1908 1913 "htmlMath.ml" 59 1908 1938
type(
  bool
)
"htmlMath.ml" 60 1944 1948 "htmlMath.ml" 60 1944 1951
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 60 1944 1952 "htmlMath.ml" 60 1944 1953
type(
  string
)
ident(
  int_ref s "htmlMath.ml" 58 1888 1904 "htmlMath.ml" 58 1888 1905
)
"htmlMath.ml" 60 1944 1948 "htmlMath.ml" 60 1944 1953
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 62 1967 1971 "htmlMath.ml" 62 1967 1974
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 62 1967 1975 "htmlMath.ml" 62 1967 1980
type(
  string
)
"htmlMath.ml" 62 1967 1971 "htmlMath.ml" 62 1967 1980
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 63 1982 1986 "htmlMath.ml" 63 1982 1989
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 63 1982 1990 "htmlMath.ml" 63 1982 1991
type(
  string
)
ident(
  int_ref s "htmlMath.ml" 58 1888 1904 "htmlMath.ml" 58 1888 1905
)
"htmlMath.ml" 63 1982 1986 "htmlMath.ml" 63 1982 1991
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 64 1993 1997 "htmlMath.ml" 64 1993 2000
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 64 1993 2001 "htmlMath.ml" 64 1993 2007
type(
  string
)
"htmlMath.ml" 64 1993 1997 "htmlMath.ml" 64 1993 2007
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 65 2009 2013 "htmlMath.ml" 65 2009 2018
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 65 2009 2028 "htmlMath.ml" 65 2009 2033
type(
  bool
)
"htmlMath.ml" 65 2009 2013 "htmlMath.ml" 65 2009 2033
type(
  unit
)
"htmlMath.ml" 65 2009 2035 "htmlMath.ml" 65 2009 2040
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 65 2009 2050 "htmlMath.ml" 65 2009 2055
type(
  bool
)
"htmlMath.ml" 65 2009 2035 "htmlMath.ml" 65 2009 2056
type(
  unit
)
"htmlMath.ml" 65 2009 2013 "htmlMath.ml" 65 2009 2056
type(
  unit
)
"htmlMath.ml" 64 1993 1997 "htmlMath.ml" 65 2009 2056
type(
  unit
)
"htmlMath.ml" 63 1982 1986 "htmlMath.ml" 65 2009 2056
type(
  unit
)
"htmlMath.ml" 61 1954 1961 "htmlMath.ml" 66 2057 2062
type(
  unit
)
"htmlMath.ml" 59 1908 1910 "htmlMath.ml" 66 2057 2062
type(
  unit
)
"htmlMath.ml" 72 2110 2114 "htmlMath.ml" 72 2110 2130
type(
  string -> string
)
ident(
  def display_cell_arg "htmlMath.ml" 82 2303 2303 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 72 2110 2131 "htmlMath.ml" 72 2110 2136
type(
  string
)
ident(
  def tdarg "htmlMath.ml" 73 2139 2141 "htmlMath.ml" 80 2272 2301
)
"htmlMath.ml" 73 2139 2145 "htmlMath.ml" 73 2139 2148
type(
  string
)
ident(
  def arg "htmlMath.ml" 78 2237 2239 "htmlMath.ml" 80 2272 2301
)
"htmlMath.ml" 74 2151 2158 "htmlMath.ml" 74 2151 2159
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 74 2151 2159 "htmlMath.ml" 74 2151 2170
type(
  bool ref
)
ident(
  ext_ref Misc.displayverb
)
"htmlMath.ml" 74 2151 2158 "htmlMath.ml" 74 2151 2170
type(
  bool
)
"htmlMath.ml" 75 2176 2182 "htmlMath.ml" 75 2176 2200
type(
  string
)
"htmlMath.ml" 77 2210 2216 "htmlMath.ml" 77 2210 2233
type(
  string
)
"htmlMath.ml" 74 2151 2155 "htmlMath.ml" 77 2210 2233
type(
  string
)
"htmlMath.ml" 78 2237 2245 "htmlMath.ml" 78 2237 2250
type(
  string
)
ident(
  int_ref tdarg "htmlMath.ml" 72 2110 2131 "htmlMath.ml" 72 2110 2136
)
"htmlMath.ml" 79 2256 2262 "htmlMath.ml" 79 2256 2264
type(
  string
)
"htmlMath.ml" 79 2256 2268 "htmlMath.ml" 79 2256 2271
type(
  string
)
ident(
  int_ref arg "htmlMath.ml" 73 2139 2145 "htmlMath.ml" 73 2139 2148
)
"htmlMath.ml" 80 2272 2278 "htmlMath.ml" 80 2272 2279
type(
  string
)
"htmlMath.ml" 80 2272 2284 "htmlMath.ml" 80 2272 2287
type(
  string
)
ident(
  int_ref arg "htmlMath.ml" 73 2139 2145 "htmlMath.ml" 73 2139 2148
)
"htmlMath.ml" 80 2272 2288 "htmlMath.ml" 80 2272 2289
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 80 2272 2290 "htmlMath.ml" 80 2272 2293
type(
  string
)
"htmlMath.ml" 80 2272 2294 "htmlMath.ml" 80 2272 2295
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 80 2272 2296 "htmlMath.ml" 80 2272 2301
type(
  string
)
ident(
  int_ref tdarg "htmlMath.ml" 72 2110 2131 "htmlMath.ml" 72 2110 2136
)
"htmlMath.ml" 80 2272 2290 "htmlMath.ml" 80 2272 2301
call(
  stack
)
type(
  string
)
"htmlMath.ml" 80 2272 2284 "htmlMath.ml" 80 2272 2301
call(
  tail
)
type(
  string
)
"htmlMath.ml" 78 2237 2239 "htmlMath.ml" 80 2272 2301
type(
  string
)
"htmlMath.ml" 73 2139 2141 "htmlMath.ml" 80 2272 2301
type(
  string
)
"htmlMath.ml" 82 2303 2307 "htmlMath.ml" 82 2303 2324
type(
  string -> unit
)
ident(
  def open_display_cell "htmlMath.ml" 84 2373 2373 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 82 2303 2325 "htmlMath.ml" 82 2303 2330
type(
  string
)
ident(
  def tdarg "htmlMath.ml" 82 2303 2333 "htmlMath.ml" 82 2303 2371
)
"htmlMath.ml" 82 2303 2333 "htmlMath.ml" 82 2303 2343
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 82 2303 2344 "htmlMath.ml" 82 2303 2346
type(
  HtmlCommon.block
)
"htmlMath.ml" 82 2303 2348 "htmlMath.ml" 82 2303 2364
type(
  string -> string
)
ident(
  int_ref display_cell_arg "htmlMath.ml" 72 2110 2114 "htmlMath.ml" 72 2110 2130
)
"htmlMath.ml" 82 2303 2365 "htmlMath.ml" 82 2303 2370
type(
  string
)
ident(
  int_ref tdarg "htmlMath.ml" 82 2303 2325 "htmlMath.ml" 82 2303 2330
)
"htmlMath.ml" 82 2303 2347 "htmlMath.ml" 82 2303 2371
call(
  stack
)
type(
  string
)
"htmlMath.ml" 82 2303 2333 "htmlMath.ml" 82 2303 2371
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 84 2373 2377 "htmlMath.ml" 84 2373 2395
type(
  (unit -> unit) -> bool -> unit
)
ident(
  def begin_item_display "htmlMath.ml" 111 3460 3460 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 84 2373 2396 "htmlMath.ml" 84 2373 2397
type(
  unit -> unit
)
ident(
  def f "htmlMath.ml" 84 2373 2398 "htmlMath.ml" 91 2617 2645
)
"htmlMath.ml" 84 2373 2398 "htmlMath.ml" 84 2373 2407
type(
  bool
)
ident(
  def is_freeze "htmlMath.ml" 85 2410 2412 "htmlMath.ml" 91 2617 2645
)
"htmlMath.ml" 85 2410 2415 "htmlMath.ml" 85 2410 2416
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 85 2410 2416 "htmlMath.ml" 85 2410 2423
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 85 2410 2415 "htmlMath.ml" 85 2410 2423
type(
  int
)
"htmlMath.ml" 85 2410 2424 "htmlMath.ml" 85 2410 2425
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 85 2410 2426 "htmlMath.ml" 85 2410 2427
type(
  int
)
"htmlMath.ml" 85 2410 2415 "htmlMath.ml" 85 2410 2427
type(
  bool
)
"htmlMath.ml" 86 2439 2443 "htmlMath.ml" 86 2439 2457
type(
  out_channel ->
  (int -> string -> unit, out_channel, unit) format -> int -> string -> unit
)
ident(
  ext_ref Printf.fprintf
)
"htmlMath.ml" 86 2439 2458 "htmlMath.ml" 86 2439 2464
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 86 2439 2465 "htmlMath.ml" 86 2439 2504
type(
  (int -> string -> unit, out_channel, unit) format
)
"htmlMath.ml" 86 2439 2505 "htmlMath.ml" 86 2439 2510
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 86 2439 2505 "htmlMath.ml" 86 2439 2516
type(
  int
)
"htmlMath.ml" 86 2439 2518 "htmlMath.ml" 86 2439 2523
type(
  bool -> string
)
ident(
  ext_ref HtmlCommon.sbool
)
"htmlMath.ml" 86 2439 2524 "htmlMath.ml" 86 2439 2529
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 86 2439 2524 "htmlMath.ml" 86 2439 2535
type(
  bool
)
"htmlMath.ml" 86 2439 2517 "htmlMath.ml" 86 2439 2536
call(
  stack
)
type(
  string
)
"htmlMath.ml" 86 2439 2443 "htmlMath.ml" 86 2439 2536
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 87 2539 2543 "htmlMath.ml" 87 2539 2556
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.prerr_newline
)
"htmlMath.ml" 87 2539 2557 "htmlMath.ml" 87 2539 2559
type(
  unit
)
"htmlMath.ml" 87 2539 2543 "htmlMath.ml" 87 2539 2559
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 85 2410 2433 "htmlMath.ml" 88 2560 2565
type(
  unit
)
"htmlMath.ml" 85 2410 2412 "htmlMath.ml" 88 2560 2565
type(
  unit
)
"htmlMath.ml" 89 2568 2570 "htmlMath.ml" 89 2568 2587
type(
  string -> unit
)
ident(
  int_ref open_display_cell "htmlMath.ml" 82 2303 2307 "htmlMath.ml" 82 2303 2324
)
"htmlMath.ml" 89 2568 2588 "htmlMath.ml" 89 2568 2590
type(
  string
)
"htmlMath.ml" 89 2568 2570 "htmlMath.ml" 89 2568 2590
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 90 2593 2595 "htmlMath.ml" 90 2593 2605
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 90 2593 2606 "htmlMath.ml" 90 2593 2611
type(
  HtmlCommon.block
)
"htmlMath.ml" 90 2593 2612 "htmlMath.ml" 90 2593 2614
type(
  string
)
"htmlMath.ml" 90 2593 2595 "htmlMath.ml" 90 2593 2614
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 91 2617 2622 "htmlMath.ml" 91 2617 2631
type(
  bool
)
ident(
  int_ref is_freeze "htmlMath.ml" 84 2373 2398 "htmlMath.ml" 84 2373 2407
)
"htmlMath.ml" 91 2617 2637 "htmlMath.ml" 91 2617 2643
type(
  (unit -> unit) -> unit
)
ident(
  ext_ref HtmlCommon.freeze
)
"htmlMath.ml" 91 2617 2644 "htmlMath.ml" 91 2617 2645
type(
  unit -> unit
)
ident(
  int_ref f "htmlMath.ml" 84 2373 2396 "htmlMath.ml" 84 2373 2397
)
"htmlMath.ml" 91 2617 2637 "htmlMath.ml" 91 2617 2645
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 91 2617 2619 "htmlMath.ml" 91 2617 2645
type(
  unit
)
"htmlMath.ml" 90 2593 2595 "htmlMath.ml" 91 2617 2645
type(
  unit
)
"htmlMath.ml" 89 2568 2570 "htmlMath.ml" 91 2617 2645
type(
  unit
)
"htmlMath.ml" 85 2410 2412 "htmlMath.ml" 91 2617 2645
type(
  unit
)
"htmlMath.ml" 94 2648 2652 "htmlMath.ml" 94 2648 2668
type(
  unit -> int * (unit -> unit) * bool
)
ident(
  def end_item_display "htmlMath.ml" 111 3460 3460 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 94 2648 2669 "htmlMath.ml" 94 2648 2671
type(
  unit
)
"htmlMath.ml" 95 2674 2680 "htmlMath.ml" 95 2674 2681
type(
  unit -> unit
)
ident(
  def f "htmlMath.ml" 96 2711 2713 "htmlMath.ml" 103 2971 2996
)
"htmlMath.ml" 95 2674 2682 "htmlMath.ml" 95 2674 2691
type(
  bool
)
ident(
  def is_freeze "htmlMath.ml" 96 2711 2713 "htmlMath.ml" 103 2971 2996
)
"htmlMath.ml" 95 2674 2680 "htmlMath.ml" 95 2674 2691
type(
  (unit -> unit) * bool
)
"htmlMath.ml" 95 2674 2694 "htmlMath.ml" 95 2674 2704
type(
  unit -> (unit -> unit) * bool
)
ident(
  ext_ref HtmlCommon.pop_freeze
)
"htmlMath.ml" 95 2674 2705 "htmlMath.ml" 95 2674 2707
type(
  unit
)
"htmlMath.ml" 95 2674 2694 "htmlMath.ml" 95 2674 2707
call(
  stack
)
type(
  (unit -> unit) * bool
)
"htmlMath.ml" 96 2711 2717 "htmlMath.ml" 96 2711 2718
type(
  bool
)
"htmlMath.ml" 96 2711 2721 "htmlMath.ml" 96 2711 2735
type(
  (unit -> bool) -> HtmlCommon.block -> bool
)
ident(
  ext_ref HtmlCommon.close_flow_loc
)
"htmlMath.ml" 96 2711 2736 "htmlMath.ml" 96 2711 2747
type(
  unit -> bool
)
ident(
  ext_ref HtmlCommon.check_empty
)
"htmlMath.ml" 96 2711 2748 "htmlMath.ml" 96 2711 2753
type(
  HtmlCommon.block
)
"htmlMath.ml" 96 2711 2721 "htmlMath.ml" 96 2711 2753
call(
  stack
)
type(
  bool
)
"htmlMath.ml" 97 2757 2762 "htmlMath.ml" 97 2757 2776
type(
  (unit -> bool) -> HtmlCommon.block -> bool
)
ident(
  ext_ref HtmlCommon.close_flow_loc
)
"htmlMath.ml" 97 2757 2777 "htmlMath.ml" 97 2757 2788
type(
  unit -> bool
)
ident(
  ext_ref HtmlCommon.check_empty
)
"htmlMath.ml" 97 2757 2789 "htmlMath.ml" 97 2757 2791
type(
  HtmlCommon.block
)
"htmlMath.ml" 97 2757 2762 "htmlMath.ml" 97 2757 2791
call(
  stack
)
type(
  bool
)
"htmlMath.ml" 98 2797 2801 "htmlMath.ml" 98 2797 2806
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 98 2797 2816 "htmlMath.ml" 98 2797 2821
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 98 2797 2816 "htmlMath.ml" 98 2797 2827
type(
  int
)
"htmlMath.ml" 98 2797 2828 "htmlMath.ml" 98 2797 2829
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"htmlMath.ml" 98 2797 2830 "htmlMath.ml" 98 2797 2831
type(
  int
)
"htmlMath.ml" 98 2797 2816 "htmlMath.ml" 98 2797 2831
type(
  int
)
"htmlMath.ml" 98 2797 2801 "htmlMath.ml" 98 2797 2831
type(
  unit
)
"htmlMath.ml" 97 2757 2759 "htmlMath.ml" 98 2797 2831
type(
  unit
)
"htmlMath.ml" 99 2833 2838 "htmlMath.ml" 99 2833 2839
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 99 2833 2839 "htmlMath.ml" 99 2833 2846
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 99 2833 2838 "htmlMath.ml" 99 2833 2846
type(
  int
)
"htmlMath.ml" 99 2833 2847 "htmlMath.ml" 99 2833 2848
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 99 2833 2849 "htmlMath.ml" 99 2833 2850
type(
  int
)
"htmlMath.ml" 99 2833 2838 "htmlMath.ml" 99 2833 2850
type(
  bool
)
"htmlMath.ml" 100 2862 2866 "htmlMath.ml" 100 2862 2880
type(
  out_channel -> (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.fprintf
)
"htmlMath.ml" 100 2862 2881 "htmlMath.ml" 100 2862 2887
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 100 2862 2888 "htmlMath.ml" 100 2862 2923
type(
  (int -> unit, out_channel, unit) format
)
"htmlMath.ml" 100 2862 2924 "htmlMath.ml" 100 2862 2929
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 100 2862 2924 "htmlMath.ml" 100 2862 2935
type(
  int
)
"htmlMath.ml" 100 2862 2866 "htmlMath.ml" 100 2862 2935
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 101 2937 2941 "htmlMath.ml" 101 2937 2953
type(
  HtmlCommon.stack_item MyStack.t -> unit
)
ident(
  ext_ref HtmlCommon.pretty_stack
)
"htmlMath.ml" 101 2937 2954 "htmlMath.ml" 101 2937 2963
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 101 2937 2941 "htmlMath.ml" 101 2937 2963
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 99 2833 2856 "htmlMath.ml" 102 2964 2969
type(
  unit
)
"htmlMath.ml" 99 2833 2835 "htmlMath.ml" 102 2964 2969
type(
  unit
)
"htmlMath.ml" 103 2971 2973 "htmlMath.ml" 103 2971 2978
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 103 2971 2973 "htmlMath.ml" 103 2971 2984
type(
  int
)
"htmlMath.ml" 103 2971 2985 "htmlMath.ml" 103 2971 2986
type(
  unit -> unit
)
ident(
  int_ref f "htmlMath.ml" 95 2674 2680 "htmlMath.ml" 95 2674 2681
)
"htmlMath.ml" 103 2971 2987 "htmlMath.ml" 103 2971 2996
type(
  bool
)
ident(
  int_ref is_freeze "htmlMath.ml" 95 2674 2682 "htmlMath.ml" 95 2674 2691
)
"htmlMath.ml" 103 2971 2973 "htmlMath.ml" 103 2971 2996
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 99 2833 2835 "htmlMath.ml" 103 2971 2996
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 97 2757 2759 "htmlMath.ml" 103 2971 2996
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 96 2711 2713 "htmlMath.ml" 103 2971 2996
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 95 2674 2676 "htmlMath.ml" 103 2971 2996
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 111 3460 3464 "htmlMath.ml" 111 3460 3481
type(
  bool -> string -> unit
)
ident(
  def open_display_varg "htmlMath.ml" 140 4109 4109 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 111 3460 3482 "htmlMath.ml" 111 3460 3491
type(
  bool
)
ident(
  def centering "htmlMath.ml" 111 3460 3492 "htmlMath.ml" 122 3768 3773
)
"htmlMath.ml" 111 3460 3492 "htmlMath.ml" 111 3460 3496
type(
  string
)
ident(
  def varg "htmlMath.ml" 112 3499 3501 "htmlMath.ml" 122 3768 3773
)
"htmlMath.ml" 112 3499 3504 "htmlMath.ml" 112 3499 3505
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 112 3499 3505 "htmlMath.ml" 112 3499 3512
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 112 3499 3504 "htmlMath.ml" 112 3499 3512
type(
  int
)
"htmlMath.ml" 112 3499 3513 "htmlMath.ml" 112 3499 3514
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 112 3499 3515 "htmlMath.ml" 112 3499 3516
type(
  int
)
"htmlMath.ml" 112 3499 3504 "htmlMath.ml" 112 3499 3516
type(
  bool
)
"htmlMath.ml" 113 3528 3532 "htmlMath.ml" 113 3528 3546
type(
  out_channel -> (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.fprintf
)
"htmlMath.ml" 113 3528 3547 "htmlMath.ml" 113 3528 3553
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 113 3528 3554 "htmlMath.ml" 113 3528 3570
type(
  (unit, out_channel, unit) format
)
"htmlMath.ml" 112 3499 3522 "htmlMath.ml" 114 3571 3576
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 112 3499 3501 "htmlMath.ml" 114 3571 3576
type(
  unit
)
"htmlMath.ml" 115 3579 3581 "htmlMath.ml" 115 3579 3597
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.try_open_display
)
"htmlMath.ml" 115 3579 3598 "htmlMath.ml" 115 3579 3600
type(
  unit
)
"htmlMath.ml" 115 3579 3581 "htmlMath.ml" 115 3579 3600
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 116 3603 3605 "htmlMath.ml" 116 3603 3615
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 116 3603 3625 "htmlMath.ml" 116 3603 3634
type(
  bool
)
ident(
  int_ref centering "htmlMath.ml" 111 3460 3482 "htmlMath.ml" 111 3460 3491
)
"htmlMath.ml" 116 3603 3616 "htmlMath.ml" 116 3603 3635
type(
  HtmlCommon.block
)
"htmlMath.ml" 116 3603 3636 "htmlMath.ml" 116 3603 3640
type(
  string
)
ident(
  int_ref varg "htmlMath.ml" 111 3460 3492 "htmlMath.ml" 111 3460 3496
)
"htmlMath.ml" 116 3603 3605 "htmlMath.ml" 116 3603 3640
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 117 3643 3645 "htmlMath.ml" 117 3643 3662
type(
  string -> unit
)
ident(
  int_ref open_display_cell "htmlMath.ml" 82 2303 2307 "htmlMath.ml" 82 2303 2324
)
"htmlMath.ml" 117 3643 3663 "htmlMath.ml" 117 3643 3665
type(
  string
)
"htmlMath.ml" 117 3643 3645 "htmlMath.ml" 117 3643 3665
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 118 3668 3670 "htmlMath.ml" 118 3668 3680
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 118 3668 3681 "htmlMath.ml" 118 3668 3686
type(
  HtmlCommon.block
)
"htmlMath.ml" 118 3668 3687 "htmlMath.ml" 118 3668 3689
type(
  string
)
"htmlMath.ml" 118 3668 3670 "htmlMath.ml" 118 3668 3689
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 119 3692 3697 "htmlMath.ml" 119 3692 3698
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 119 3692 3698 "htmlMath.ml" 119 3692 3705
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 119 3692 3697 "htmlMath.ml" 119 3692 3705
type(
  int
)
"htmlMath.ml" 119 3692 3706 "htmlMath.ml" 119 3692 3707
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 119 3692 3708 "htmlMath.ml" 119 3692 3709
type(
  int
)
"htmlMath.ml" 119 3692 3697 "htmlMath.ml" 119 3692 3709
type(
  bool
)
"htmlMath.ml" 120 3721 3725 "htmlMath.ml" 120 3721 3735
type(
  HtmlCommon.status -> unit
)
ident(
  ext_ref HtmlCommon.pretty_cur
)
"htmlMath.ml" 120 3721 3736 "htmlMath.ml" 120 3721 3737
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 120 3721 3737 "htmlMath.ml" 120 3721 3744
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 120 3721 3736 "htmlMath.ml" 120 3721 3744
type(
  HtmlCommon.status
)
"htmlMath.ml" 120 3721 3725 "htmlMath.ml" 120 3721 3744
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 121 3747 3751 "htmlMath.ml" 121 3747 3764
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 121 3747 3765 "htmlMath.ml" 121 3747 3767
type(
  string
)
"htmlMath.ml" 121 3747 3751 "htmlMath.ml" 121 3747 3767
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 119 3692 3715 "htmlMath.ml" 122 3768 3773
type(
  unit
)
"htmlMath.ml" 119 3692 3694 "htmlMath.ml" 122 3768 3773
type(
  unit
)
"htmlMath.ml" 118 3668 3670 "htmlMath.ml" 122 3768 3773
type(
  unit
)
"htmlMath.ml" 117 3643 3645 "htmlMath.ml" 122 3768 3773
type(
  unit
)
"htmlMath.ml" 116 3603 3605 "htmlMath.ml" 122 3768 3773
type(
  unit
)
"htmlMath.ml" 115 3579 3581 "htmlMath.ml" 122 3768 3773
type(
  unit
)
"htmlMath.ml" 112 3499 3501 "htmlMath.ml" 122 3768 3773
type(
  unit
)
"htmlMath.ml" 140 4109 4113 "htmlMath.ml" 140 4109 4125
type(
  bool -> unit
)
ident(
  def open_display "htmlMath.ml" 146 4388 4388 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 140 4109 4126 "htmlMath.ml" 140 4109 4135
type(
  bool
)
ident(
  def centering "htmlMath.ml" 140 4109 4138 "htmlMath.ml" 140 4109 4199
)
"htmlMath.ml" 140 4109 4138 "htmlMath.ml" 140 4109 4155
type(
  bool -> string -> unit
)
ident(
  int_ref open_display_varg "htmlMath.ml" 111 3460 3464 "htmlMath.ml" 111 3460 3481
)
"htmlMath.ml" 140 4109 4156 "htmlMath.ml" 140 4109 4165
type(
  bool
)
ident(
  int_ref centering "htmlMath.ml" 140 4109 4126 "htmlMath.ml" 140 4109 4135
)
"htmlMath.ml" 140 4109 4166 "htmlMath.ml" 140 4109 4199
type(
  string
)
"htmlMath.ml" 140 4109 4138 "htmlMath.ml" 140 4109 4199
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 146 4388 4392 "htmlMath.ml" 146 4388 4405
type(
  bool -> unit
)
ident(
  def close_display "htmlMath.ml" 223 6891 6891 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 146 4388 4406 "htmlMath.ml" 146 4388 4411
type(
  bool
)
ident(
  def force "htmlMath.ml" 147 4414 4416 "htmlMath.ml" 220 6852 6888
)
"htmlMath.ml" 147 4414 4419 "htmlMath.ml" 147 4414 4420
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 147 4414 4420 "htmlMath.ml" 147 4414 4427
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 147 4414 4419 "htmlMath.ml" 147 4414 4427
type(
  int
)
"htmlMath.ml" 147 4414 4428 "htmlMath.ml" 147 4414 4429
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 147 4414 4430 "htmlMath.ml" 147 4414 4431
type(
  int
)
"htmlMath.ml" 147 4414 4419 "htmlMath.ml" 147 4414 4431
type(
  bool
)
"htmlMath.ml" 148 4443 4447 "htmlMath.ml" 148 4443 4458
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.prerr_flags
)
"htmlMath.ml" 148 4443 4459 "htmlMath.ml" 148 4443 4478
type(
  string
)
"htmlMath.ml" 148 4443 4447 "htmlMath.ml" 148 4443 4478
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 148 4443 4481 "htmlMath.ml" 148 4443 4493
type(
  HtmlCommon.stack_item MyStack.t -> unit
)
ident(
  ext_ref HtmlCommon.pretty_stack
)
"htmlMath.ml" 148 4443 4494 "htmlMath.ml" 148 4443 4503
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 148 4443 4481 "htmlMath.ml" 148 4443 4503
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 149 4506 4510 "htmlMath.ml" 149 4506 4519
type(
  out_channel -> Out.t -> unit
)
ident(
  ext_ref Out.debug
)
"htmlMath.ml" 149 4506 4520 "htmlMath.ml" 149 4506 4526
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 149 4506 4527 "htmlMath.ml" 149 4506 4528
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 149 4506 4528 "htmlMath.ml" 149 4506 4535
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 149 4506 4527 "htmlMath.ml" 149 4506 4535
type(
  HtmlCommon.status
)
"htmlMath.ml" 149 4506 4527 "htmlMath.ml" 149 4506 4539
type(
  Out.t
)
"htmlMath.ml" 149 4506 4510 "htmlMath.ml" 149 4506 4539
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 148 4443 4481 "htmlMath.ml" 149 4506 4539
type(
  unit
)
"htmlMath.ml" 147 4414 4437 "htmlMath.ml" 150 4540 4545
type(
  unit
)
"htmlMath.ml" 147 4414 4416 "htmlMath.ml" 150 4540 4545
type(
  unit
)
"htmlMath.ml" 151 4548 4553 "htmlMath.ml" 151 4548 4556
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"htmlMath.ml" 151 4548 4558 "htmlMath.ml" 151 4548 4570
type(
  unit -> bool
)
ident(
  ext_ref HtmlCommon.flush_freeze
)
"htmlMath.ml" 151 4548 4571 "htmlMath.ml" 151 4548 4573
type(
  unit
)
"htmlMath.ml" 151 4548 4557 "htmlMath.ml" 151 4548 4574
call(
  stack
)
type(
  bool
)
"htmlMath.ml" 151 4548 4553 "htmlMath.ml" 151 4548 4574
type(
  bool
)
"htmlMath.ml" 152 4586 4590 "htmlMath.ml" 152 4586 4600
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_flow
)
"htmlMath.ml" 152 4586 4601 "htmlMath.ml" 152 4586 4606
type(
  HtmlCommon.block
)
"htmlMath.ml" 152 4586 4590 "htmlMath.ml" 152 4586 4606
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 153 4609 4616 "htmlMath.ml" 153 4609 4617
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 153 4609 4617 "htmlMath.ml" 153 4609 4624
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 153 4609 4616 "htmlMath.ml" 153 4609 4624
type(
  int
)
"htmlMath.ml" 153 4609 4625 "htmlMath.ml" 153 4609 4626
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 153 4609 4627 "htmlMath.ml" 153 4609 4628
type(
  int
)
"htmlMath.ml" 153 4609 4616 "htmlMath.ml" 153 4609 4628
type(
  bool
)
"htmlMath.ml" 154 4640 4646 "htmlMath.ml" 154 4640 4660
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.eprintf
)
"htmlMath.ml" 154 4640 4661 "htmlMath.ml" 154 4640 4681
type(
  (unit, out_channel, unit) format
)
"htmlMath.ml" 154 4640 4646 "htmlMath.ml" 154 4640 4681
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 154 4640 4685 "htmlMath.ml" 154 4640 4697
type(
  HtmlCommon.stack_item MyStack.t -> unit
)
ident(
  ext_ref HtmlCommon.pretty_stack
)
"htmlMath.ml" 154 4640 4698 "htmlMath.ml" 154 4640 4707
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 154 4640 4685 "htmlMath.ml" 154 4640 4707
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 155 4710 4716 "htmlMath.ml" 155 4710 4725
type(
  out_channel -> Out.t -> unit
)
ident(
  ext_ref Out.debug
)
"htmlMath.ml" 155 4710 4726 "htmlMath.ml" 155 4710 4732
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 155 4710 4733 "htmlMath.ml" 155 4710 4734
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 155 4710 4734 "htmlMath.ml" 155 4710 4741
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 155 4710 4733 "htmlMath.ml" 155 4710 4741
type(
  HtmlCommon.status
)
"htmlMath.ml" 155 4710 4733 "htmlMath.ml" 155 4710 4745
type(
  Out.t
)
"htmlMath.ml" 155 4710 4716 "htmlMath.ml" 155 4710 4745
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 154 4640 4685 "htmlMath.ml" 155 4710 4745
type(
  unit
)
"htmlMath.ml" 153 4609 4634 "htmlMath.ml" 156 4746 4753
type(
  unit
)
"htmlMath.ml" 153 4609 4613 "htmlMath.ml" 156 4746 4753
type(
  unit
)
"htmlMath.ml" 157 4756 4764 "htmlMath.ml" 157 4756 4765
type(
  int
)
ident(
  def n "htmlMath.ml" 158 4783 4787 "htmlMath.ml" 217 6796 6820
)
"htmlMath.ml" 157 4756 4768 "htmlMath.ml" 157 4756 4773
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 157 4756 4768 "htmlMath.ml" 157 4756 4779
type(
  int
)
"htmlMath.ml" 158 4783 4790 "htmlMath.ml" 158 4783 4791
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 158 4783 4791 "htmlMath.ml" 158 4783 4798
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 158 4783 4790 "htmlMath.ml" 158 4783 4798
type(
  int
)
"htmlMath.ml" 158 4783 4799 "htmlMath.ml" 158 4783 4800
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 158 4783 4801 "htmlMath.ml" 158 4783 4802
type(
  int
)
"htmlMath.ml" 158 4783 4790 "htmlMath.ml" 158 4783 4802
type(
  bool
)
"htmlMath.ml" 159 4808 4814 "htmlMath.ml" 159 4808 4828
type(
  out_channel -> (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.fprintf
)
"htmlMath.ml" 159 4808 4829 "htmlMath.ml" 159 4808 4835
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 159 4808 4836 "htmlMath.ml" 159 4808 4866
type(
  (int -> unit, out_channel, unit) format
)
"htmlMath.ml" 159 4808 4867 "htmlMath.ml" 159 4808 4868
type(
  int
)
ident(
  int_ref n "htmlMath.ml" 157 4756 4764 "htmlMath.ml" 157 4756 4765
)
"htmlMath.ml" 159 4808 4814 "htmlMath.ml" 159 4808 4868
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 158 4783 4787 "htmlMath.ml" 159 4808 4868
type(
  unit
)
"htmlMath.ml" 160 4871 4879 "htmlMath.ml" 160 4871 4880
type(
  int
)
ident(
  int_ref n "htmlMath.ml" 157 4756 4764 "htmlMath.ml" 157 4756 4765
)
"htmlMath.ml" 160 4871 4881 "htmlMath.ml" 160 4871 4882
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"htmlMath.ml" 160 4871 4883 "htmlMath.ml" 160 4871 4884
type(
  int
)
"htmlMath.ml" 160 4871 4879 "htmlMath.ml" 160 4871 4884
type(
  bool
)
"htmlMath.ml" 160 4871 4885 "htmlMath.ml" 160 4871 4887
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 160 4871 4888 "htmlMath.ml" 160 4871 4891
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"htmlMath.ml" 160 4871 4892 "htmlMath.ml" 160 4871 4897
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 160 4871 4892 "htmlMath.ml" 160 4871 4903
type(
  bool
)
"htmlMath.ml" 160 4871 4888 "htmlMath.ml" 160 4871 4903
type(
  bool
)
"htmlMath.ml" 160 4871 4904 "htmlMath.ml" 160 4871 4906
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 160 4871 4907 "htmlMath.ml" 160 4871 4910
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"htmlMath.ml" 160 4871 4911 "htmlMath.ml" 160 4871 4916
type(
  bool
)
ident(
  int_ref force "htmlMath.ml" 146 4388 4406 "htmlMath.ml" 146 4388 4411
)
"htmlMath.ml" 160 4871 4907 "htmlMath.ml" 160 4871 4916
type(
  bool
)
"htmlMath.ml" 160 4871 4888 "htmlMath.ml" 160 4871 4916
type(
  bool
)
"htmlMath.ml" 160 4871 4878 "htmlMath.ml" 160 4871 4917
type(
  bool
)
"htmlMath.ml" 161 4929 4938 "htmlMath.ml" 161 4929 4939
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 161 4929 4939 "htmlMath.ml" 161 4929 4946
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 161 4929 4938 "htmlMath.ml" 161 4929 4946
type(
  int
)
"htmlMath.ml" 161 4929 4947 "htmlMath.ml" 161 4929 4948
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 161 4929 4949 "htmlMath.ml" 161 4929 4950
type(
  int
)
"htmlMath.ml" 161 4929 4938 "htmlMath.ml" 161 4929 4950
type(
  bool
)
"htmlMath.ml" 162 4962 4970 "htmlMath.ml" 162 4962 4982
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_string
)
"htmlMath.ml" 162 4962 4983 "htmlMath.ml" 162 4962 4999
type(
  string
)
"htmlMath.ml" 162 4962 4970 "htmlMath.ml" 162 4962 4999
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 163 5002 5011 "htmlMath.ml" 163 5002 5020
type(
  out_channel -> Out.t -> unit
)
ident(
  ext_ref Out.debug
)
"htmlMath.ml" 163 5002 5021 "htmlMath.ml" 163 5002 5027
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 163 5002 5028 "htmlMath.ml" 163 5002 5029
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 163 5002 5029 "htmlMath.ml" 163 5002 5036
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 163 5002 5028 "htmlMath.ml" 163 5002 5036
type(
  HtmlCommon.status
)
"htmlMath.ml" 163 5002 5028 "htmlMath.ml" 163 5002 5040
type(
  Out.t
)
"htmlMath.ml" 163 5002 5010 "htmlMath.ml" 163 5002 5041
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 164 5043 5051 "htmlMath.ml" 164 5043 5064
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 164 5043 5065 "htmlMath.ml" 164 5043 5067
type(
  string
)
"htmlMath.ml" 164 5043 5051 "htmlMath.ml" 164 5043 5067
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 163 5002 5010 "htmlMath.ml" 164 5043 5067
type(
  unit
)
"htmlMath.ml" 161 4929 4956 "htmlMath.ml" 165 5068 5077
type(
  unit
)
"htmlMath.ml" 161 4929 4935 "htmlMath.ml" 165 5068 5077
type(
  unit
)
"htmlMath.ml" 166 5079 5089 "htmlMath.ml" 166 5079 5095
type(
  HtmlCommon.t_env list
)
ident(
  def active "htmlMath.ml" 167 5148 5154 "htmlMath.ml" 185 5716 5764
)
"htmlMath.ml" 166 5079 5098 "htmlMath.ml" 166 5079 5099
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 166 5079 5099 "htmlMath.ml" 166 5079 5106
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 166 5079 5098 "htmlMath.ml" 166 5079 5106
type(
  HtmlCommon.status
)
"htmlMath.ml" 166 5079 5098 "htmlMath.ml" 166 5079 5113
type(
  HtmlCommon.t_env list
)
"htmlMath.ml" 166 5079 5118 "htmlMath.ml" 166 5079 5125
type(
  Element.text list
)
ident(
  def pending "htmlMath.ml" 167 5148 5154 "htmlMath.ml" 185 5716 5764
)
"htmlMath.ml" 166 5079 5128 "htmlMath.ml" 166 5079 5129
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 166 5079 5129 "htmlMath.ml" 166 5079 5136
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 166 5079 5128 "htmlMath.ml" 166 5079 5136
type(
  HtmlCommon.status
)
"htmlMath.ml" 166 5079 5128 "htmlMath.ml" 166 5079 5144
type(
  Element.text list
)
"htmlMath.ml" 167 5148 5154 "htmlMath.ml" 167 5148 5167
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.do_close_mods
)
"htmlMath.ml" 167 5148 5168 "htmlMath.ml" 167 5148 5170
type(
  unit
)
"htmlMath.ml" 167 5148 5154 "htmlMath.ml" 167 5148 5170
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 168 5173 5183 "htmlMath.ml" 168 5173 5185
type(
  HtmlCommon.block
)
ident(
  def ps "htmlMath.ml" 169 5217 5223 "htmlMath.ml" 185 5716 5764
)
"htmlMath.ml" 168 5173 5186 "htmlMath.ml" 168 5173 5187
type(
  string
)
"htmlMath.ml" 168 5173 5188 "htmlMath.ml" 168 5173 5193
type(
  HtmlCommon.status
)
ident(
  def _pout "htmlMath.ml" 169 5217 5223 "htmlMath.ml" 185 5716 5764
)
"htmlMath.ml" 168 5173 5183 "htmlMath.ml" 168 5173 5193
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 168 5173 5196 "htmlMath.ml" 168 5173 5203
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status
)
ident(
  ext_ref HtmlCommon.pop_out
)
"htmlMath.ml" 168 5173 5204 "htmlMath.ml" 168 5173 5213
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 168 5173 5196 "htmlMath.ml" 168 5173 5213
call(
  stack
)
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 169 5217 5226 "htmlMath.ml" 169 5217 5228
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 168 5173 5183 "htmlMath.ml" 168 5173 5185
)
"htmlMath.ml" 169 5217 5229 "htmlMath.ml" 169 5217 5231
type(
  HtmlCommon.block -> HtmlCommon.block -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"htmlMath.ml" 169 5217 5232 "htmlMath.ml" 169 5217 5234
type(
  HtmlCommon.block
)
"htmlMath.ml" 169 5217 5226 "htmlMath.ml" 169 5217 5234
type(
  bool
)
"htmlMath.ml" 170 5240 5248 "htmlMath.ml" 170 5240 5257
type(
  string -> HtmlCommon.block -> HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.failclose
)
"htmlMath.ml" 170 5240 5258 "htmlMath.ml" 170 5240 5273
type(
  string
)
"htmlMath.ml" 170 5240 5274 "htmlMath.ml" 170 5240 5276
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 168 5173 5183 "htmlMath.ml" 168 5173 5185
)
"htmlMath.ml" 170 5240 5277 "htmlMath.ml" 170 5240 5279
type(
  HtmlCommon.block
)
"htmlMath.ml" 170 5240 5248 "htmlMath.ml" 170 5240 5279
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 169 5217 5223 "htmlMath.ml" 170 5240 5279
type(
  unit
)
"htmlMath.ml" 171 5282 5288 "htmlMath.ml" 171 5282 5301
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.do_close_mods
)
"htmlMath.ml" 171 5282 5302 "htmlMath.ml" 171 5282 5304
type(
  unit
)
"htmlMath.ml" 171 5282 5288 "htmlMath.ml" 171 5282 5304
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 172 5307 5313 "htmlMath.ml" 172 5307 5328
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.try_close_block
)
"htmlMath.ml" 172 5307 5329 "htmlMath.ml" 172 5307 5331
type(
  HtmlCommon.block
)
"htmlMath.ml" 172 5307 5313 "htmlMath.ml" 172 5307 5331
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 173 5334 5344 "htmlMath.ml" 173 5334 5346
type(
  HtmlCommon.block
)
ident(
  def ps "htmlMath.ml" 174 5378 5384 "htmlMath.ml" 185 5716 5764
)
"htmlMath.ml" 173 5334 5347 "htmlMath.ml" 173 5334 5348
type(
  string
)
"htmlMath.ml" 173 5334 5349 "htmlMath.ml" 173 5334 5354
type(
  HtmlCommon.status
)
ident(
  def ppout "htmlMath.ml" 174 5378 5384 "htmlMath.ml" 185 5716 5764
)
"htmlMath.ml" 173 5334 5344 "htmlMath.ml" 173 5334 5354
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 173 5334 5357 "htmlMath.ml" 173 5334 5364
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status
)
ident(
  ext_ref HtmlCommon.pop_out
)
"htmlMath.ml" 173 5334 5365 "htmlMath.ml" 173 5334 5374
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 173 5334 5357 "htmlMath.ml" 173 5334 5374
call(
  stack
)
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 174 5378 5396 "htmlMath.ml" 174 5378 5398
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 173 5334 5344 "htmlMath.ml" 173 5334 5346
)
"htmlMath.ml" 175 5404 5422 "htmlMath.ml" 175 5404 5423
type(
  bool
)
"htmlMath.ml" 175 5404 5414 "htmlMath.ml" 175 5404 5423
type(
  HtmlCommon.block
)
"htmlMath.ml" 175 5404 5427 "htmlMath.ml" 175 5404 5429
type(
  unit
)
"htmlMath.ml" 176 5430 5440 "htmlMath.ml" 176 5430 5441
type(
  HtmlCommon.block
)
"htmlMath.ml" 177 5445 5457 "htmlMath.ml" 177 5445 5466
type(
  string -> HtmlCommon.block -> HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.failclose
)
"htmlMath.ml" 177 5445 5467 "htmlMath.ml" 177 5445 5482
type(
  string
)
"htmlMath.ml" 177 5445 5483 "htmlMath.ml" 177 5445 5485
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 173 5334 5344 "htmlMath.ml" 173 5334 5346
)
"htmlMath.ml" 177 5445 5495 "htmlMath.ml" 177 5445 5500
type(
  bool
)
"htmlMath.ml" 177 5445 5486 "htmlMath.ml" 177 5445 5501
type(
  HtmlCommon.block
)
"htmlMath.ml" 177 5445 5457 "htmlMath.ml" 177 5445 5501
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 174 5378 5384 "htmlMath.ml" 178 5502 5511
type(
  unit
)
"htmlMath.ml" 179 5513 5519 "htmlMath.ml" 179 5513 5534
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.try_close_block
)
"htmlMath.ml" 179 5513 5535 "htmlMath.ml" 179 5513 5537
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 173 5334 5344 "htmlMath.ml" 173 5334 5346
)
"htmlMath.ml" 179 5513 5519 "htmlMath.ml" 179 5513 5537
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 180 5540 5550 "htmlMath.ml" 180 5540 5557
type(
  HtmlCommon.status
)
ident(
  def old_out "htmlMath.ml" 181 5572 5578 "htmlMath.ml" 185 5716 5764
)
"htmlMath.ml" 180 5540 5560 "htmlMath.ml" 180 5540 5561
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 180 5540 5561 "htmlMath.ml" 180 5540 5568
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 180 5540 5560 "htmlMath.ml" 180 5540 5568
type(
  HtmlCommon.status
)
"htmlMath.ml" 181 5572 5578 "htmlMath.ml" 181 5572 5585
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 181 5572 5586 "htmlMath.ml" 181 5572 5588
type(
  HtmlCommon.status ref -> HtmlCommon.status -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"htmlMath.ml" 181 5572 5589 "htmlMath.ml" 181 5572 5594
type(
  HtmlCommon.status
)
ident(
  int_ref ppout "htmlMath.ml" 173 5334 5349 "htmlMath.ml" 173 5334 5354
)
"htmlMath.ml" 181 5572 5578 "htmlMath.ml" 181 5572 5594
type(
  unit
)
"htmlMath.ml" 182 5597 5603 "htmlMath.ml" 182 5597 5616
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.do_close_mods
)
"htmlMath.ml" 182 5597 5617 "htmlMath.ml" 182 5597 5619
type(
  unit
)
"htmlMath.ml" 182 5597 5603 "htmlMath.ml" 182 5597 5619
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 183 5622 5628 "htmlMath.ml" 183 5622 5636
type(
  Out.t -> Out.t -> unit
)
ident(
  ext_ref Out.copy
)
"htmlMath.ml" 183 5622 5637 "htmlMath.ml" 183 5622 5644
type(
  HtmlCommon.status
)
ident(
  int_ref old_out "htmlMath.ml" 180 5540 5550 "htmlMath.ml" 180 5540 5557
)
"htmlMath.ml" 183 5622 5637 "htmlMath.ml" 183 5622 5648
type(
  Out.t
)
"htmlMath.ml" 183 5622 5649 "htmlMath.ml" 183 5622 5650
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 183 5622 5650 "htmlMath.ml" 183 5622 5657
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 183 5622 5649 "htmlMath.ml" 183 5622 5657
type(
  HtmlCommon.status
)
"htmlMath.ml" 183 5622 5649 "htmlMath.ml" 183 5622 5661
type(
  Out.t
)
"htmlMath.ml" 183 5622 5628 "htmlMath.ml" 183 5622 5661
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 184 5664 5670 "htmlMath.ml" 184 5664 5675
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 184 5664 5685 "htmlMath.ml" 184 5664 5690
type(
  bool
)
"htmlMath.ml" 184 5664 5670 "htmlMath.ml" 184 5664 5690
type(
  unit
)
"htmlMath.ml" 184 5664 5693 "htmlMath.ml" 184 5664 5698
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 184 5664 5708 "htmlMath.ml" 184 5664 5713
type(
  bool
)
"htmlMath.ml" 184 5664 5693 "htmlMath.ml" 184 5664 5713
type(
  unit
)
"htmlMath.ml" 185 5716 5722 "htmlMath.ml" 185 5716 5723
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 185 5716 5723 "htmlMath.ml" 185 5716 5730
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 185 5716 5722 "htmlMath.ml" 185 5716 5730
type(
  HtmlCommon.status
)
"htmlMath.ml" 185 5716 5742 "htmlMath.ml" 185 5716 5749
type(
  HtmlCommon.t_env list -> Element.text list -> Element.text list
)
ident(
  ext_ref HtmlCommon.as_envs
)
"htmlMath.ml" 185 5716 5750 "htmlMath.ml" 185 5716 5756
type(
  HtmlCommon.t_env list
)
ident(
  int_ref active "htmlMath.ml" 166 5079 5089 "htmlMath.ml" 166 5079 5095
)
"htmlMath.ml" 185 5716 5757 "htmlMath.ml" 185 5716 5764
type(
  Element.text list
)
ident(
  int_ref pending "htmlMath.ml" 166 5079 5118 "htmlMath.ml" 166 5079 5125
)
"htmlMath.ml" 185 5716 5742 "htmlMath.ml" 185 5716 5764
call(
  stack
)
type(
  Element.text list
)
"htmlMath.ml" 185 5716 5722 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 184 5664 5693 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 184 5664 5670 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 183 5622 5628 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 182 5597 5603 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 181 5572 5578 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 180 5540 5546 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 179 5513 5519 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 174 5378 5384 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 173 5334 5340 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 172 5307 5313 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 171 5282 5288 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 169 5217 5223 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 168 5173 5179 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 167 5148 5154 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 166 5079 5085 "htmlMath.ml" 185 5716 5764
type(
  unit
)
"htmlMath.ml" 160 4871 4923 "htmlMath.ml" 186 5765 5772
type(
  unit
)
"htmlMath.ml" 186 5765 5782 "htmlMath.ml" 186 5765 5783
type(
  int
)
ident(
  int_ref n "htmlMath.ml" 157 4756 4764 "htmlMath.ml" 157 4756 4765
)
"htmlMath.ml" 186 5765 5783 "htmlMath.ml" 186 5765 5784
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"htmlMath.ml" 186 5765 5784 "htmlMath.ml" 186 5765 5785
type(
  int
)
"htmlMath.ml" 186 5765 5782 "htmlMath.ml" 186 5765 5785
type(
  bool
)
"htmlMath.ml" 186 5765 5786 "htmlMath.ml" 186 5765 5788
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 186 5765 5789 "htmlMath.ml" 186 5765 5794
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 186 5765 5789 "htmlMath.ml" 186 5765 5800
type(
  bool
)
"htmlMath.ml" 186 5765 5801 "htmlMath.ml" 186 5765 5803
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 186 5765 5804 "htmlMath.ml" 186 5765 5807
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"htmlMath.ml" 186 5765 5808 "htmlMath.ml" 186 5765 5813
type(
  bool
)
ident(
  int_ref force "htmlMath.ml" 146 4388 4406 "htmlMath.ml" 146 4388 4411
)
"htmlMath.ml" 186 5765 5804 "htmlMath.ml" 186 5765 5813
type(
  bool
)
"htmlMath.ml" 186 5765 5789 "htmlMath.ml" 186 5765 5813
type(
  bool
)
"htmlMath.ml" 186 5765 5781 "htmlMath.ml" 186 5765 5814
type(
  bool
)
"htmlMath.ml" 187 5826 5835 "htmlMath.ml" 187 5826 5836
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 187 5826 5836 "htmlMath.ml" 187 5826 5843
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 187 5826 5835 "htmlMath.ml" 187 5826 5843
type(
  int
)
"htmlMath.ml" 187 5826 5844 "htmlMath.ml" 187 5826 5845
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 187 5826 5846 "htmlMath.ml" 187 5826 5847
type(
  int
)
"htmlMath.ml" 187 5826 5835 "htmlMath.ml" 187 5826 5847
type(
  bool
)
"htmlMath.ml" 188 5859 5867 "htmlMath.ml" 188 5859 5879
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_string
)
"htmlMath.ml" 188 5859 5880 "htmlMath.ml" 188 5859 5896
type(
  string
)
"htmlMath.ml" 188 5859 5867 "htmlMath.ml" 188 5859 5896
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 189 5898 5907 "htmlMath.ml" 189 5898 5916
type(
  out_channel -> Out.t -> unit
)
ident(
  ext_ref Out.debug
)
"htmlMath.ml" 189 5898 5917 "htmlMath.ml" 189 5898 5923
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 189 5898 5924 "htmlMath.ml" 189 5898 5925
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 189 5898 5925 "htmlMath.ml" 189 5898 5932
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 189 5898 5924 "htmlMath.ml" 189 5898 5932
type(
  HtmlCommon.status
)
"htmlMath.ml" 189 5898 5924 "htmlMath.ml" 189 5898 5936
type(
  Out.t
)
"htmlMath.ml" 189 5898 5906 "htmlMath.ml" 189 5898 5937
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 190 5939 5947 "htmlMath.ml" 190 5939 5960
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 190 5939 5961 "htmlMath.ml" 190 5939 5963
type(
  string
)
"htmlMath.ml" 190 5939 5947 "htmlMath.ml" 190 5939 5965
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 189 5898 5906 "htmlMath.ml" 190 5939 5965
type(
  unit
)
"htmlMath.ml" 187 5826 5853 "htmlMath.ml" 191 5966 5975
type(
  unit
)
"htmlMath.ml" 187 5826 5832 "htmlMath.ml" 191 5966 5975
type(
  unit
)
"htmlMath.ml" 192 5977 5983 "htmlMath.ml" 192 5977 5993
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_flow
)
"htmlMath.ml" 192 5977 5994 "htmlMath.ml" 192 5977 6000
type(
  HtmlCommon.block
)
"htmlMath.ml" 192 5977 5983 "htmlMath.ml" 192 5977 6000
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 193 6003 6013 "htmlMath.ml" 193 6003 6019
type(
  HtmlCommon.t_env list
)
ident(
  def active "htmlMath.ml" 194 6072 6078 "htmlMath.ml" 206 6460 6508
)
"htmlMath.ml" 193 6003 6022 "htmlMath.ml" 193 6003 6023
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 193 6003 6023 "htmlMath.ml" 193 6003 6030
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 193 6003 6022 "htmlMath.ml" 193 6003 6030
type(
  HtmlCommon.status
)
"htmlMath.ml" 193 6003 6022 "htmlMath.ml" 193 6003 6037
type(
  HtmlCommon.t_env list
)
"htmlMath.ml" 193 6003 6042 "htmlMath.ml" 193 6003 6049
type(
  Element.text list
)
ident(
  def pending "htmlMath.ml" 194 6072 6078 "htmlMath.ml" 206 6460 6508
)
"htmlMath.ml" 193 6003 6052 "htmlMath.ml" 193 6003 6053
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 193 6003 6053 "htmlMath.ml" 193 6003 6060
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 193 6003 6052 "htmlMath.ml" 193 6003 6060
type(
  HtmlCommon.status
)
"htmlMath.ml" 193 6003 6052 "htmlMath.ml" 193 6003 6068
type(
  Element.text list
)
"htmlMath.ml" 194 6072 6082 "htmlMath.ml" 194 6072 6084
type(
  HtmlCommon.block
)
ident(
  def ps "htmlMath.ml" 195 6115 6121 "htmlMath.ml" 206 6460 6508
)
"htmlMath.ml" 194 6072 6085 "htmlMath.ml" 194 6072 6086
type(
  string
)
"htmlMath.ml" 194 6072 6087 "htmlMath.ml" 194 6072 6091
type(
  HtmlCommon.status
)
ident(
  def pout "htmlMath.ml" 195 6115 6121 "htmlMath.ml" 206 6460 6508
)
"htmlMath.ml" 194 6072 6082 "htmlMath.ml" 194 6072 6091
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 194 6072 6094 "htmlMath.ml" 194 6072 6101
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status
)
ident(
  ext_ref HtmlCommon.pop_out
)
"htmlMath.ml" 194 6072 6102 "htmlMath.ml" 194 6072 6111
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 194 6072 6094 "htmlMath.ml" 194 6072 6111
call(
  stack
)
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 195 6115 6133 "htmlMath.ml" 195 6115 6135
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 194 6072 6082 "htmlMath.ml" 194 6072 6084
)
"htmlMath.ml" 196 6141 6159 "htmlMath.ml" 196 6141 6160
type(
  bool
)
"htmlMath.ml" 196 6141 6151 "htmlMath.ml" 196 6141 6160
type(
  HtmlCommon.block
)
"htmlMath.ml" 196 6141 6164 "htmlMath.ml" 196 6141 6166
type(
  unit
)
"htmlMath.ml" 197 6167 6177 "htmlMath.ml" 197 6167 6178
type(
  HtmlCommon.block
)
"htmlMath.ml" 198 6182 6194 "htmlMath.ml" 198 6182 6203
type(
  string -> HtmlCommon.block -> HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.failclose
)
"htmlMath.ml" 198 6182 6204 "htmlMath.ml" 198 6182 6219
type(
  string
)
"htmlMath.ml" 198 6182 6220 "htmlMath.ml" 198 6182 6222
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 194 6072 6082 "htmlMath.ml" 194 6072 6084
)
"htmlMath.ml" 198 6182 6232 "htmlMath.ml" 198 6182 6237
type(
  bool
)
"htmlMath.ml" 198 6182 6223 "htmlMath.ml" 198 6182 6238
type(
  HtmlCommon.block
)
"htmlMath.ml" 198 6182 6194 "htmlMath.ml" 198 6182 6238
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 195 6115 6121 "htmlMath.ml" 199 6239 6248
type(
  unit
)
"htmlMath.ml" 200 6251 6257 "htmlMath.ml" 200 6251 6272
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.try_close_block
)
"htmlMath.ml" 200 6251 6273 "htmlMath.ml" 200 6251 6275
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 194 6072 6082 "htmlMath.ml" 194 6072 6084
)
"htmlMath.ml" 200 6251 6257 "htmlMath.ml" 200 6251 6275
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 201 6278 6288 "htmlMath.ml" 201 6278 6295
type(
  HtmlCommon.status
)
ident(
  def old_out "htmlMath.ml" 202 6310 6316 "htmlMath.ml" 206 6460 6508
)
"htmlMath.ml" 201 6278 6298 "htmlMath.ml" 201 6278 6299
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 201 6278 6299 "htmlMath.ml" 201 6278 6306
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 201 6278 6298 "htmlMath.ml" 201 6278 6306
type(
  HtmlCommon.status
)
"htmlMath.ml" 202 6310 6316 "htmlMath.ml" 202 6310 6323
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 202 6310 6324 "htmlMath.ml" 202 6310 6326
type(
  HtmlCommon.status ref -> HtmlCommon.status -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"htmlMath.ml" 202 6310 6327 "htmlMath.ml" 202 6310 6331
type(
  HtmlCommon.status
)
ident(
  int_ref pout "htmlMath.ml" 194 6072 6087 "htmlMath.ml" 194 6072 6091
)
"htmlMath.ml" 202 6310 6316 "htmlMath.ml" 202 6310 6331
type(
  unit
)
"htmlMath.ml" 203 6334 6340 "htmlMath.ml" 203 6334 6353
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.do_close_mods
)
"htmlMath.ml" 203 6334 6354 "htmlMath.ml" 203 6334 6356
type(
  unit
)
"htmlMath.ml" 203 6334 6340 "htmlMath.ml" 203 6334 6356
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 204 6359 6365 "htmlMath.ml" 204 6359 6380
type(
  Out.t -> Out.t -> unit
)
ident(
  ext_ref Out.copy_no_tag
)
"htmlMath.ml" 204 6359 6381 "htmlMath.ml" 204 6359 6388
type(
  HtmlCommon.status
)
ident(
  int_ref old_out "htmlMath.ml" 201 6278 6288 "htmlMath.ml" 201 6278 6295
)
"htmlMath.ml" 204 6359 6381 "htmlMath.ml" 204 6359 6392
type(
  Out.t
)
"htmlMath.ml" 204 6359 6393 "htmlMath.ml" 204 6359 6394
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 204 6359 6394 "htmlMath.ml" 204 6359 6401
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 204 6359 6393 "htmlMath.ml" 204 6359 6401
type(
  HtmlCommon.status
)
"htmlMath.ml" 204 6359 6393 "htmlMath.ml" 204 6359 6405
type(
  Out.t
)
"htmlMath.ml" 204 6359 6365 "htmlMath.ml" 204 6359 6405
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 205 6408 6414 "htmlMath.ml" 205 6408 6419
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 205 6408 6429 "htmlMath.ml" 205 6408 6434
type(
  bool
)
"htmlMath.ml" 205 6408 6414 "htmlMath.ml" 205 6408 6434
type(
  unit
)
"htmlMath.ml" 205 6408 6437 "htmlMath.ml" 205 6408 6442
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 205 6408 6452 "htmlMath.ml" 205 6408 6457
type(
  bool
)
"htmlMath.ml" 205 6408 6437 "htmlMath.ml" 205 6408 6457
type(
  unit
)
"htmlMath.ml" 206 6460 6466 "htmlMath.ml" 206 6460 6467
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 206 6460 6467 "htmlMath.ml" 206 6460 6474
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 206 6460 6466 "htmlMath.ml" 206 6460 6474
type(
  HtmlCommon.status
)
"htmlMath.ml" 206 6460 6486 "htmlMath.ml" 206 6460 6493
type(
  HtmlCommon.t_env list -> Element.text list -> Element.text list
)
ident(
  ext_ref HtmlCommon.as_envs
)
"htmlMath.ml" 206 6460 6494 "htmlMath.ml" 206 6460 6500
type(
  HtmlCommon.t_env list
)
ident(
  int_ref active "htmlMath.ml" 193 6003 6013 "htmlMath.ml" 193 6003 6019
)
"htmlMath.ml" 206 6460 6501 "htmlMath.ml" 206 6460 6508
type(
  Element.text list
)
ident(
  int_ref pending "htmlMath.ml" 193 6003 6042 "htmlMath.ml" 193 6003 6049
)
"htmlMath.ml" 206 6460 6486 "htmlMath.ml" 206 6460 6508
call(
  stack
)
type(
  Element.text list
)
"htmlMath.ml" 206 6460 6466 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 205 6408 6437 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 205 6408 6414 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 204 6359 6365 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 203 6334 6340 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 202 6310 6316 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 201 6278 6284 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 200 6251 6257 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 195 6115 6121 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 194 6072 6078 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 193 6003 6009 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 192 5977 5983 "htmlMath.ml" 206 6460 6508
type(
  unit
)
"htmlMath.ml" 186 5765 5820 "htmlMath.ml" 207 6509 6516
type(
  unit
)
"htmlMath.ml" 208 6528 6537 "htmlMath.ml" 208 6528 6538
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 208 6528 6538 "htmlMath.ml" 208 6528 6545
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 208 6528 6537 "htmlMath.ml" 208 6528 6545
type(
  int
)
"htmlMath.ml" 208 6528 6546 "htmlMath.ml" 208 6528 6547
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 208 6528 6548 "htmlMath.ml" 208 6528 6549
type(
  int
)
"htmlMath.ml" 208 6528 6537 "htmlMath.ml" 208 6528 6549
type(
  bool
)
"htmlMath.ml" 209 6561 6569 "htmlMath.ml" 209 6561 6581
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_string
)
"htmlMath.ml" 209 6561 6583 "htmlMath.ml" 209 6561 6599
type(
  string
)
"htmlMath.ml" 209 6561 6599 "htmlMath.ml" 209 6561 6600
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 209 6561 6600 "htmlMath.ml" 209 6561 6613
type(
  int -> string
)
ident(
  ext_ref Pervasives.string_of_int
)
"htmlMath.ml" 209 6561 6614 "htmlMath.ml" 209 6561 6615
type(
  int
)
ident(
  int_ref n "htmlMath.ml" 157 4756 4764 "htmlMath.ml" 157 4756 4765
)
"htmlMath.ml" 209 6561 6600 "htmlMath.ml" 209 6561 6615
call(
  stack
)
type(
  string
)
"htmlMath.ml" 209 6561 6582 "htmlMath.ml" 209 6561 6616
call(
  stack
)
type(
  string
)
"htmlMath.ml" 209 6561 6569 "htmlMath.ml" 209 6561 6616
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 210 6619 6628 "htmlMath.ml" 210 6619 6637
type(
  out_channel -> Out.t -> unit
)
ident(
  ext_ref Out.debug
)
"htmlMath.ml" 210 6619 6638 "htmlMath.ml" 210 6619 6644
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 210 6619 6645 "htmlMath.ml" 210 6619 6646
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 210 6619 6646 "htmlMath.ml" 210 6619 6653
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 210 6619 6645 "htmlMath.ml" 210 6619 6653
type(
  HtmlCommon.status
)
"htmlMath.ml" 210 6619 6645 "htmlMath.ml" 210 6619 6657
type(
  Out.t
)
"htmlMath.ml" 210 6619 6627 "htmlMath.ml" 210 6619 6658
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 211 6660 6668 "htmlMath.ml" 211 6660 6681
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 211 6660 6682 "htmlMath.ml" 211 6660 6684
type(
  string
)
"htmlMath.ml" 211 6660 6668 "htmlMath.ml" 211 6660 6684
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 210 6619 6627 "htmlMath.ml" 211 6660 6684
type(
  unit
)
"htmlMath.ml" 208 6528 6555 "htmlMath.ml" 212 6685 6694
type(
  unit
)
"htmlMath.ml" 208 6528 6534 "htmlMath.ml" 212 6685 6694
type(
  unit
)
"htmlMath.ml" 213 6696 6702 "htmlMath.ml" 213 6696 6707
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 213 6696 6717 "htmlMath.ml" 213 6696 6722
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 213 6696 6717 "htmlMath.ml" 213 6696 6728
type(
  bool
)
"htmlMath.ml" 213 6696 6702 "htmlMath.ml" 213 6696 6728
type(
  unit
)
"htmlMath.ml" 214 6731 6737 "htmlMath.ml" 214 6731 6747
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_flow
)
"htmlMath.ml" 214 6731 6748 "htmlMath.ml" 214 6731 6750
type(
  HtmlCommon.block
)
"htmlMath.ml" 214 6731 6737 "htmlMath.ml" 214 6731 6750
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 215 6753 6759 "htmlMath.ml" 215 6753 6769
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_flow
)
"htmlMath.ml" 215 6753 6779 "htmlMath.ml" 215 6753 6784
type(
  bool
)
"htmlMath.ml" 215 6753 6770 "htmlMath.ml" 215 6753 6785
type(
  HtmlCommon.block
)
"htmlMath.ml" 215 6753 6759 "htmlMath.ml" 215 6753 6785
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 214 6731 6737 "htmlMath.ml" 215 6753 6785
type(
  unit
)
"htmlMath.ml" 213 6696 6702 "htmlMath.ml" 215 6753 6785
type(
  unit
)
"htmlMath.ml" 207 6509 6522 "htmlMath.ml" 216 6786 6793
type(
  unit
)
"htmlMath.ml" 186 5765 5778 "htmlMath.ml" 216 6786 6793
type(
  unit
)
"htmlMath.ml" 160 4871 4875 "htmlMath.ml" 216 6786 6793
type(
  unit
)
"htmlMath.ml" 217 6796 6800 "htmlMath.ml" 217 6796 6817
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.try_close_display
)
"htmlMath.ml" 217 6796 6818 "htmlMath.ml" 217 6796 6820
type(
  unit
)
"htmlMath.ml" 217 6796 6800 "htmlMath.ml" 217 6796 6820
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 160 4871 4875 "htmlMath.ml" 217 6796 6820
type(
  unit
)
"htmlMath.ml" 158 4783 4787 "htmlMath.ml" 217 6796 6820
type(
  unit
)
"htmlMath.ml" 157 4756 4760 "htmlMath.ml" 217 6796 6820
type(
  unit
)
"htmlMath.ml" 153 4609 4613 "htmlMath.ml" 217 6796 6820
type(
  unit
)
"htmlMath.ml" 151 4548 4580 "htmlMath.ml" 218 6821 6826
type(
  unit
)
"htmlMath.ml" 151 4548 4550 "htmlMath.ml" 218 6821 6826
type(
  unit
)
"htmlMath.ml" 219 6829 6834 "htmlMath.ml" 219 6829 6835
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 219 6829 6835 "htmlMath.ml" 219 6829 6842
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 219 6829 6834 "htmlMath.ml" 219 6829 6842
type(
  int
)
"htmlMath.ml" 219 6829 6843 "htmlMath.ml" 219 6829 6844
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 219 6829 6845 "htmlMath.ml" 219 6829 6846
type(
  int
)
"htmlMath.ml" 219 6829 6834 "htmlMath.ml" 219 6829 6846
type(
  bool
)
"htmlMath.ml" 220 6852 6856 "htmlMath.ml" 220 6852 6867
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.prerr_flags
)
"htmlMath.ml" 220 6852 6868 "htmlMath.ml" 220 6852 6888
type(
  string
)
"htmlMath.ml" 220 6852 6856 "htmlMath.ml" 220 6852 6888
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 219 6829 6831 "htmlMath.ml" 220 6852 6888
type(
  unit
)
"htmlMath.ml" 151 4548 4550 "htmlMath.ml" 220 6852 6888
type(
  unit
)
"htmlMath.ml" 147 4414 4416 "htmlMath.ml" 220 6852 6888
type(
  unit
)
"htmlMath.ml" 223 6891 6895 "htmlMath.ml" 223 6891 6910
type(
  bool -> unit
)
ident(
  def do_item_display "htmlMath.ml" 255 8016 8016 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 223 6891 6911 "htmlMath.ml" 223 6891 6916
type(
  bool
)
ident(
  def force "htmlMath.ml" 224 6919 6921 "htmlMath.ml" 253 8009 8014
)
"htmlMath.ml" 224 6919 6924 "htmlMath.ml" 224 6919 6925
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 224 6919 6925 "htmlMath.ml" 224 6919 6932
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 224 6919 6924 "htmlMath.ml" 224 6919 6932
type(
  int
)
"htmlMath.ml" 224 6919 6933 "htmlMath.ml" 224 6919 6934
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 224 6919 6935 "htmlMath.ml" 224 6919 6936
type(
  int
)
"htmlMath.ml" 224 6919 6924 "htmlMath.ml" 224 6919 6936
type(
  bool
)
"htmlMath.ml" 225 6948 6952 "htmlMath.ml" 225 6948 6965
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 225 6948 6967 "htmlMath.ml" 225 6948 6988
type(
  string
)
"htmlMath.ml" 225 6948 6988 "htmlMath.ml" 225 6948 6989
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 225 6948 6989 "htmlMath.ml" 225 6948 7002
type(
  int -> string
)
ident(
  ext_ref Pervasives.string_of_int
)
"htmlMath.ml" 225 6948 7003 "htmlMath.ml" 225 6948 7008
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 225 6948 7003 "htmlMath.ml" 225 6948 7014
type(
  int
)
"htmlMath.ml" 225 6948 6989 "htmlMath.ml" 225 6948 7014
call(
  stack
)
type(
  string
)
"htmlMath.ml" 225 6948 7014 "htmlMath.ml" 225 6948 7015
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 225 6948 7015 "htmlMath.ml" 225 6948 7031
type(
  string
)
"htmlMath.ml" 225 6948 7031 "htmlMath.ml" 225 6948 7032
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 225 6948 7032 "htmlMath.ml" 225 6948 7037
type(
  bool -> string
)
ident(
  ext_ref HtmlCommon.sbool
)
"htmlMath.ml" 225 6948 7038 "htmlMath.ml" 225 6948 7043
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 225 6948 7038 "htmlMath.ml" 225 6948 7056
type(
  bool
)
"htmlMath.ml" 225 6948 7032 "htmlMath.ml" 225 6948 7056
call(
  stack
)
type(
  string
)
"htmlMath.ml" 225 6948 7056 "htmlMath.ml" 225 6948 7057
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 225 6948 7057 "htmlMath.ml" 225 6948 7067
type(
  string
)
"htmlMath.ml" 225 6948 7067 "htmlMath.ml" 225 6948 7068
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 225 6948 7068 "htmlMath.ml" 225 6948 7073
type(
  bool -> string
)
ident(
  ext_ref HtmlCommon.sbool
)
"htmlMath.ml" 225 6948 7074 "htmlMath.ml" 225 6948 7079
type(
  bool
)
ident(
  int_ref force "htmlMath.ml" 223 6891 6911 "htmlMath.ml" 223 6891 6916
)
"htmlMath.ml" 225 6948 7068 "htmlMath.ml" 225 6948 7079
call(
  stack
)
type(
  string
)
"htmlMath.ml" 225 6948 7057 "htmlMath.ml" 225 6948 7079
call(
  stack
)
type(
  string
)
"htmlMath.ml" 225 6948 7032 "htmlMath.ml" 225 6948 7079
call(
  stack
)
type(
  string
)
"htmlMath.ml" 225 6948 7015 "htmlMath.ml" 225 6948 7079
call(
  stack
)
type(
  string
)
"htmlMath.ml" 225 6948 6989 "htmlMath.ml" 225 6948 7079
call(
  stack
)
type(
  string
)
"htmlMath.ml" 225 6948 6966 "htmlMath.ml" 225 6948 7080
call(
  stack
)
type(
  string
)
"htmlMath.ml" 225 6948 6952 "htmlMath.ml" 225 6948 7080
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 226 7083 7087 "htmlMath.ml" 226 7083 7099
type(
  HtmlCommon.stack_item MyStack.t -> unit
)
ident(
  ext_ref HtmlCommon.pretty_stack
)
"htmlMath.ml" 226 7083 7100 "htmlMath.ml" 226 7083 7109
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 226 7083 7087 "htmlMath.ml" 226 7083 7109
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 224 6919 6942 "htmlMath.ml" 227 7110 7115
type(
  unit
)
"htmlMath.ml" 224 6919 6921 "htmlMath.ml" 227 7110 7115
type(
  unit
)
"htmlMath.ml" 228 7118 7124 "htmlMath.ml" 228 7118 7129
type(
  bool
)
ident(
  int_ref force "htmlMath.ml" 223 6891 6911 "htmlMath.ml" 223 6891 6916
)
"htmlMath.ml" 228 7118 7130 "htmlMath.ml" 228 7118 7132
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 228 7118 7133 "htmlMath.ml" 228 7118 7136
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"htmlMath.ml" 228 7118 7137 "htmlMath.ml" 228 7118 7142
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 228 7118 7137 "htmlMath.ml" 228 7118 7148
type(
  bool
)
"htmlMath.ml" 228 7118 7133 "htmlMath.ml" 228 7118 7148
type(
  bool
)
"htmlMath.ml" 228 7118 7123 "htmlMath.ml" 228 7118 7149
type(
  bool
)
"htmlMath.ml" 228 7118 7150 "htmlMath.ml" 228 7118 7152
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"htmlMath.ml" 228 7118 7153 "htmlMath.ml" 228 7118 7158
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 228 7118 7153 "htmlMath.ml" 228 7118 7171
type(
  bool
)
"htmlMath.ml" 228 7118 7123 "htmlMath.ml" 228 7118 7171
type(
  bool
)
"htmlMath.ml" 229 7183 7191 "htmlMath.ml" 229 7183 7192
type(
  unit -> unit
)
ident(
  def f "htmlMath.ml" 230 7222 7226 "htmlMath.ml" 246 7751 7798
)
"htmlMath.ml" 229 7183 7193 "htmlMath.ml" 229 7183 7202
type(
  bool
)
ident(
  def is_freeze "htmlMath.ml" 230 7222 7226 "htmlMath.ml" 246 7751 7798
)
"htmlMath.ml" 229 7183 7191 "htmlMath.ml" 229 7183 7202
type(
  (unit -> unit) * bool
)
"htmlMath.ml" 229 7183 7205 "htmlMath.ml" 229 7183 7215
type(
  unit -> (unit -> unit) * bool
)
ident(
  ext_ref HtmlCommon.pop_freeze
)
"htmlMath.ml" 229 7183 7216 "htmlMath.ml" 229 7183 7218
type(
  unit
)
"htmlMath.ml" 229 7183 7205 "htmlMath.ml" 229 7183 7218
call(
  stack
)
type(
  (unit -> unit) * bool
)
"htmlMath.ml" 230 7222 7226 "htmlMath.ml" 230 7222 7230
type(
  bool MyStack.t -> bool -> unit
)
ident(
  ext_ref MyStack.push
)
"htmlMath.ml" 230 7222 7231 "htmlMath.ml" 230 7222 7237
type(
  HtmlCommon.stack_t
)
ident(
  ext_ref HtmlCommon.stacks
)
"htmlMath.ml" 230 7222 7231 "htmlMath.ml" 230 7222 7252
type(
  bool MyStack.t
)
"htmlMath.ml" 231 7253 7260 "htmlMath.ml" 231 7253 7263
type(
  bool MyStack.t -> bool
)
ident(
  ext_ref MyStack.pop
)
"htmlMath.ml" 231 7253 7264 "htmlMath.ml" 231 7253 7270
type(
  HtmlCommon.stack_t
)
ident(
  ext_ref HtmlCommon.stacks
)
"htmlMath.ml" 231 7253 7264 "htmlMath.ml" 231 7253 7285
type(
  bool MyStack.t
)
"htmlMath.ml" 231 7253 7260 "htmlMath.ml" 231 7253 7285
call(
  stack
)
type(
  bool
)
"htmlMath.ml" 231 7253 7286 "htmlMath.ml" 231 7253 7288
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"htmlMath.ml" 231 7253 7289 "htmlMath.ml" 231 7253 7294
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 231 7253 7289 "htmlMath.ml" 231 7253 7307
type(
  bool
)
"htmlMath.ml" 231 7253 7259 "htmlMath.ml" 231 7253 7308
type(
  bool
)
"htmlMath.ml" 230 7222 7226 "htmlMath.ml" 231 7253 7308
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 232 7311 7315 "htmlMath.ml" 232 7311 7320
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 232 7311 7337 "htmlMath.ml" 232 7311 7342
type(
  bool
)
"htmlMath.ml" 232 7311 7315 "htmlMath.ml" 232 7311 7342
type(
  unit
)
"htmlMath.ml" 233 7345 7353 "htmlMath.ml" 233 7345 7359
type(
  HtmlCommon.t_env list
)
ident(
  def active "htmlMath.ml" 235 7417 7421 "htmlMath.ml" 246 7751 7798
)
"htmlMath.ml" 233 7345 7363 "htmlMath.ml" 233 7345 7364
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 233 7345 7364 "htmlMath.ml" 233 7345 7371
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 233 7345 7363 "htmlMath.ml" 233 7345 7371
type(
  HtmlCommon.status
)
"htmlMath.ml" 233 7345 7363 "htmlMath.ml" 233 7345 7378
type(
  HtmlCommon.t_env list
)
"htmlMath.ml" 234 7379 7387 "htmlMath.ml" 234 7379 7394
type(
  Element.text list
)
ident(
  def pending "htmlMath.ml" 235 7417 7421 "htmlMath.ml" 246 7751 7798
)
"htmlMath.ml" 234 7379 7397 "htmlMath.ml" 234 7379 7398
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 234 7379 7398 "htmlMath.ml" 234 7379 7405
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 234 7379 7397 "htmlMath.ml" 234 7379 7405
type(
  HtmlCommon.status
)
"htmlMath.ml" 234 7379 7397 "htmlMath.ml" 234 7379 7413
type(
  Element.text list
)
"htmlMath.ml" 235 7417 7421 "htmlMath.ml" 235 7417 7426
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 235 7417 7436 "htmlMath.ml" 235 7417 7441
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 235 7417 7436 "htmlMath.ml" 235 7417 7447
type(
  int
)
"htmlMath.ml" 235 7417 7448 "htmlMath.ml" 235 7417 7449
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"htmlMath.ml" 235 7417 7450 "htmlMath.ml" 235 7417 7451
type(
  int
)
"htmlMath.ml" 235 7417 7436 "htmlMath.ml" 235 7417 7451
type(
  int
)
"htmlMath.ml" 235 7417 7421 "htmlMath.ml" 235 7417 7451
type(
  unit
)
"htmlMath.ml" 236 7454 7458 "htmlMath.ml" 236 7454 7468
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_flow
)
"htmlMath.ml" 236 7454 7469 "htmlMath.ml" 236 7454 7474
type(
  HtmlCommon.block
)
"htmlMath.ml" 236 7454 7458 "htmlMath.ml" 236 7454 7474
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 237 7477 7481 "htmlMath.ml" 237 7477 7491
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_flow
)
"htmlMath.ml" 237 7477 7492 "htmlMath.ml" 237 7477 7494
type(
  HtmlCommon.block
)
"htmlMath.ml" 237 7477 7481 "htmlMath.ml" 237 7477 7494
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 238 7497 7504 "htmlMath.ml" 238 7497 7505
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 238 7497 7505 "htmlMath.ml" 238 7497 7512
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 238 7497 7504 "htmlMath.ml" 238 7497 7512
type(
  int
)
"htmlMath.ml" 238 7497 7513 "htmlMath.ml" 238 7497 7514
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 238 7497 7515 "htmlMath.ml" 238 7497 7516
type(
  int
)
"htmlMath.ml" 238 7497 7504 "htmlMath.ml" 238 7497 7516
type(
  bool
)
"htmlMath.ml" 239 7528 7534 "htmlMath.ml" 239 7528 7547
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 239 7528 7548 "htmlMath.ml" 239 7528 7571
type(
  string
)
"htmlMath.ml" 239 7528 7534 "htmlMath.ml" 239 7528 7571
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 240 7574 7580 "htmlMath.ml" 240 7574 7589
type(
  out_channel -> Out.t -> unit
)
ident(
  ext_ref Out.debug
)
"htmlMath.ml" 240 7574 7590 "htmlMath.ml" 240 7574 7596
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 240 7574 7597 "htmlMath.ml" 240 7574 7598
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 240 7574 7598 "htmlMath.ml" 240 7574 7605
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 240 7574 7597 "htmlMath.ml" 240 7574 7605
type(
  HtmlCommon.status
)
"htmlMath.ml" 240 7574 7597 "htmlMath.ml" 240 7574 7609
type(
  Out.t
)
"htmlMath.ml" 240 7574 7580 "htmlMath.ml" 240 7574 7611
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 238 7497 7522 "htmlMath.ml" 241 7612 7619
type(
  unit
)
"htmlMath.ml" 238 7497 7501 "htmlMath.ml" 241 7612 7619
type(
  unit
)
"htmlMath.ml" 242 7621 7625 "htmlMath.ml" 242 7621 7642
type(
  string -> unit
)
ident(
  int_ref open_display_cell "htmlMath.ml" 82 2303 2307 "htmlMath.ml" 82 2303 2324
)
"htmlMath.ml" 242 7621 7643 "htmlMath.ml" 242 7621 7645
type(
  string
)
"htmlMath.ml" 242 7621 7625 "htmlMath.ml" 242 7621 7645
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 243 7648 7652 "htmlMath.ml" 243 7648 7662
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 243 7648 7663 "htmlMath.ml" 243 7648 7668
type(
  HtmlCommon.block
)
"htmlMath.ml" 243 7648 7669 "htmlMath.ml" 243 7648 7671
type(
  string
)
"htmlMath.ml" 243 7648 7652 "htmlMath.ml" 243 7648 7671
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 244 7674 7678 "htmlMath.ml" 244 7674 7679
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 244 7674 7679 "htmlMath.ml" 244 7674 7686
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 244 7674 7678 "htmlMath.ml" 244 7674 7686
type(
  HtmlCommon.status
)
"htmlMath.ml" 244 7674 7698 "htmlMath.ml" 244 7674 7705
type(
  HtmlCommon.t_env list -> Element.text list -> Element.text list
)
ident(
  ext_ref HtmlCommon.as_envs
)
"htmlMath.ml" 244 7674 7706 "htmlMath.ml" 244 7674 7712
type(
  HtmlCommon.t_env list
)
ident(
  int_ref active "htmlMath.ml" 233 7345 7353 "htmlMath.ml" 233 7345 7359
)
"htmlMath.ml" 244 7674 7713 "htmlMath.ml" 244 7674 7720
type(
  Element.text list
)
ident(
  int_ref pending "htmlMath.ml" 234 7379 7387 "htmlMath.ml" 234 7379 7394
)
"htmlMath.ml" 244 7674 7698 "htmlMath.ml" 244 7674 7720
call(
  stack
)
type(
  Element.text list
)
"htmlMath.ml" 244 7674 7678 "htmlMath.ml" 244 7674 7720
type(
  unit
)
"htmlMath.ml" 245 7723 7727 "htmlMath.ml" 245 7723 7728
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 245 7723 7728 "htmlMath.ml" 245 7723 7735
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 245 7723 7727 "htmlMath.ml" 245 7723 7735
type(
  HtmlCommon.status
)
"htmlMath.ml" 245 7723 7746 "htmlMath.ml" 245 7723 7748
type(
  HtmlCommon.t_env list
)
"htmlMath.ml" 245 7723 7727 "htmlMath.ml" 245 7723 7748
type(
  unit
)
"htmlMath.ml" 246 7751 7758 "htmlMath.ml" 246 7751 7767
type(
  bool
)
ident(
  int_ref is_freeze "htmlMath.ml" 229 7183 7193 "htmlMath.ml" 229 7183 7202
)
"htmlMath.ml" 246 7751 7773 "htmlMath.ml" 246 7751 7777
type(
  HtmlCommon.stack_item MyStack.t -> HtmlCommon.stack_item -> unit
)
ident(
  ext_ref MyStack.push
)
"htmlMath.ml" 246 7751 7778 "htmlMath.ml" 246 7751 7787
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 246 7751 7796 "htmlMath.ml" 246 7751 7797
type(
  unit -> unit
)
ident(
  int_ref f "htmlMath.ml" 229 7183 7191 "htmlMath.ml" 229 7183 7192
)
"htmlMath.ml" 246 7751 7788 "htmlMath.ml" 246 7751 7798
type(
  HtmlCommon.stack_item
)
"htmlMath.ml" 246 7751 7773 "htmlMath.ml" 246 7751 7798
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 246 7751 7755 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 245 7723 7727 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 244 7674 7678 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 243 7648 7652 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 242 7621 7625 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 238 7497 7501 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 237 7477 7481 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 236 7454 7458 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 235 7417 7421 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 233 7345 7349 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 232 7311 7315 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 230 7222 7226 "htmlMath.ml" 246 7751 7798
type(
  unit
)
"htmlMath.ml" 228 7118 7177 "htmlMath.ml" 247 7799 7804
type(
  unit
)
"htmlMath.ml" 248 7816 7823 "htmlMath.ml" 248 7816 7824
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 248 7816 7824 "htmlMath.ml" 248 7816 7831
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 248 7816 7823 "htmlMath.ml" 248 7816 7831
type(
  int
)
"htmlMath.ml" 248 7816 7832 "htmlMath.ml" 248 7816 7833
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 248 7816 7834 "htmlMath.ml" 248 7816 7835
type(
  int
)
"htmlMath.ml" 248 7816 7823 "htmlMath.ml" 248 7816 7835
type(
  bool
)
"htmlMath.ml" 249 7847 7853 "htmlMath.ml" 249 7847 7862
type(
  out_channel -> Out.t -> unit
)
ident(
  ext_ref Out.debug
)
"htmlMath.ml" 249 7847 7863 "htmlMath.ml" 249 7847 7869
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 249 7847 7870 "htmlMath.ml" 249 7847 7871
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 249 7847 7871 "htmlMath.ml" 249 7847 7878
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 249 7847 7870 "htmlMath.ml" 249 7847 7878
type(
  HtmlCommon.status
)
"htmlMath.ml" 249 7847 7870 "htmlMath.ml" 249 7847 7882
type(
  Out.t
)
"htmlMath.ml" 249 7847 7853 "htmlMath.ml" 249 7847 7882
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 250 7885 7891 "htmlMath.ml" 250 7885 7904
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 250 7885 7905 "htmlMath.ml" 250 7885 7914
type(
  string
)
"htmlMath.ml" 250 7885 7891 "htmlMath.ml" 250 7885 7914
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 251 7917 7923 "htmlMath.ml" 251 7917 7936
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 251 7917 7938 "htmlMath.ml" 251 7917 7953
type(
  string
)
"htmlMath.ml" 251 7917 7953 "htmlMath.ml" 251 7917 7954
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 251 7917 7954 "htmlMath.ml" 251 7917 7959
type(
  bool -> string
)
ident(
  ext_ref HtmlCommon.sbool
)
"htmlMath.ml" 251 7917 7960 "htmlMath.ml" 251 7917 7965
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 251 7917 7960 "htmlMath.ml" 251 7917 7971
type(
  bool
)
"htmlMath.ml" 251 7917 7954 "htmlMath.ml" 251 7917 7971
call(
  stack
)
type(
  string
)
"htmlMath.ml" 251 7917 7971 "htmlMath.ml" 251 7917 7972
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 251 7917 7972 "htmlMath.ml" 251 7917 7981
type(
  string
)
"htmlMath.ml" 251 7917 7981 "htmlMath.ml" 251 7917 7982
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"htmlMath.ml" 251 7917 7982 "htmlMath.ml" 251 7917 7987
type(
  bool -> string
)
ident(
  ext_ref HtmlCommon.sbool
)
"htmlMath.ml" 251 7917 7988 "htmlMath.ml" 251 7917 7993
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 251 7917 7988 "htmlMath.ml" 251 7917 7999
type(
  bool
)
"htmlMath.ml" 251 7917 7982 "htmlMath.ml" 251 7917 7999
call(
  stack
)
type(
  string
)
"htmlMath.ml" 251 7917 7972 "htmlMath.ml" 251 7917 7999
call(
  stack
)
type(
  string
)
"htmlMath.ml" 251 7917 7954 "htmlMath.ml" 251 7917 7999
call(
  stack
)
type(
  string
)
"htmlMath.ml" 251 7917 7937 "htmlMath.ml" 251 7917 8000
call(
  stack
)
type(
  string
)
"htmlMath.ml" 251 7917 7923 "htmlMath.ml" 251 7917 8000
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 250 7885 7891 "htmlMath.ml" 251 7917 8000
type(
  unit
)
"htmlMath.ml" 248 7816 7841 "htmlMath.ml" 252 8001 8008
type(
  unit
)
"htmlMath.ml" 247 7799 7810 "htmlMath.ml" 253 8009 8014
type(
  unit
)
"htmlMath.ml" 228 7118 7120 "htmlMath.ml" 253 8009 8014
type(
  unit
)
"htmlMath.ml" 224 6919 6921 "htmlMath.ml" 253 8009 8014
type(
  unit
)
"htmlMath.ml" 255 8016 8020 "htmlMath.ml" 255 8016 8032
type(
  unit -> unit
)
ident(
  def item_display "htmlMath.ml" 259 8111 8111 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 255 8016 8033 "htmlMath.ml" 255 8016 8035
type(
  unit
)
"htmlMath.ml" 255 8016 8038 "htmlMath.ml" 255 8016 8053
type(
  bool -> unit
)
ident(
  int_ref do_item_display "htmlMath.ml" 223 6891 6895 "htmlMath.ml" 223 6891 6910
)
"htmlMath.ml" 255 8016 8054 "htmlMath.ml" 255 8016 8059
type(
  bool
)
"htmlMath.ml" 255 8016 8038 "htmlMath.ml" 255 8016 8059
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 256 8060 8064 "htmlMath.ml" 256 8060 8082
type(
  unit -> unit
)
ident(
  def force_item_display "htmlMath.ml" 259 8111 8111 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 256 8060 8083 "htmlMath.ml" 256 8060 8085
type(
  unit
)
"htmlMath.ml" 256 8060 8088 "htmlMath.ml" 256 8060 8103
type(
  bool -> unit
)
ident(
  int_ref do_item_display "htmlMath.ml" 223 6891 6895 "htmlMath.ml" 223 6891 6910
)
"htmlMath.ml" 256 8060 8104 "htmlMath.ml" 256 8060 8108
type(
  bool
)
"htmlMath.ml" 256 8060 8088 "htmlMath.ml" 256 8060 8108
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 259 8111 8115 "htmlMath.ml" 259 8111 8128
type(
  unit -> unit
)
ident(
  def erase_display "htmlMath.ml" 266 8231 8231 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 259 8111 8129 "htmlMath.ml" 259 8111 8131
type(
  unit
)
"htmlMath.ml" 260 8134 8136 "htmlMath.ml" 260 8134 8147
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.erase_block
)
"htmlMath.ml" 260 8134 8148 "htmlMath.ml" 260 8134 8153
type(
  HtmlCommon.block
)
"htmlMath.ml" 260 8134 8136 "htmlMath.ml" 260 8134 8153
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 261 8156 8158 "htmlMath.ml" 261 8156 8169
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.erase_block
)
"htmlMath.ml" 261 8156 8170 "htmlMath.ml" 261 8156 8172
type(
  HtmlCommon.block
)
"htmlMath.ml" 261 8156 8158 "htmlMath.ml" 261 8156 8172
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 262 8175 8177 "htmlMath.ml" 262 8175 8188
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.erase_block
)
"htmlMath.ml" 262 8175 8198 "htmlMath.ml" 262 8175 8203
type(
  bool
)
"htmlMath.ml" 262 8175 8189 "htmlMath.ml" 262 8175 8204
type(
  HtmlCommon.block
)
"htmlMath.ml" 262 8175 8177 "htmlMath.ml" 262 8175 8204
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 263 8206 8208 "htmlMath.ml" 263 8206 8225
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.try_close_display
)
"htmlMath.ml" 263 8206 8226 "htmlMath.ml" 263 8206 8228
type(
  unit
)
"htmlMath.ml" 263 8206 8208 "htmlMath.ml" 263 8206 8228
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 262 8175 8177 "htmlMath.ml" 263 8206 8228
type(
  unit
)
"htmlMath.ml" 261 8156 8158 "htmlMath.ml" 263 8206 8228
type(
  unit
)
"htmlMath.ml" 260 8134 8136 "htmlMath.ml" 263 8206 8228
type(
  unit
)
"htmlMath.ml" 266 8231 8235 "htmlMath.ml" 266 8231 8245
type(
  bool -> unit
)
ident(
  def open_maths "htmlMath.ml" 272 8374 8374 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 266 8231 8246 "htmlMath.ml" 266 8231 8253
type(
  bool
)
ident(
  def display "htmlMath.ml" 267 8256 8258 "htmlMath.ml" 270 8337 8372
)
"htmlMath.ml" 267 8256 8258 "htmlMath.ml" 267 8256 8262
type(
  bool MyStack.t -> bool -> unit
)
ident(
  ext_ref MyStack.push
)
"htmlMath.ml" 267 8256 8263 "htmlMath.ml" 267 8256 8269
type(
  HtmlCommon.stack_t
)
ident(
  ext_ref HtmlCommon.stacks
)
"htmlMath.ml" 267 8256 8263 "htmlMath.ml" 267 8256 8279
type(
  bool MyStack.t
)
"htmlMath.ml" 267 8256 8280 "htmlMath.ml" 267 8256 8285
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 267 8256 8280 "htmlMath.ml" 267 8256 8293
type(
  bool
)
"htmlMath.ml" 267 8256 8258 "htmlMath.ml" 267 8256 8293
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 268 8295 8297 "htmlMath.ml" 268 8295 8302
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 268 8295 8314 "htmlMath.ml" 268 8295 8318
type(
  bool
)
"htmlMath.ml" 268 8295 8297 "htmlMath.ml" 268 8295 8318
type(
  unit
)
"htmlMath.ml" 269 8320 8322 "htmlMath.ml" 269 8320 8332
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.open_group
)
"htmlMath.ml" 269 8320 8333 "htmlMath.ml" 269 8320 8335
type(
  string
)
"htmlMath.ml" 269 8320 8322 "htmlMath.ml" 269 8320 8335
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 270 8337 8342 "htmlMath.ml" 270 8337 8349
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 266 8231 8246 "htmlMath.ml" 266 8231 8253
)
"htmlMath.ml" 270 8337 8355 "htmlMath.ml" 270 8337 8367
type(
  bool -> unit
)
ident(
  int_ref open_display "htmlMath.ml" 140 4109 4113 "htmlMath.ml" 140 4109 4125
)
"htmlMath.ml" 270 8337 8368 "htmlMath.ml" 270 8337 8372
type(
  bool
)
"htmlMath.ml" 270 8337 8355 "htmlMath.ml" 270 8337 8372
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 270 8337 8339 "htmlMath.ml" 270 8337 8372
type(
  unit
)
"htmlMath.ml" 269 8320 8322 "htmlMath.ml" 270 8337 8372
type(
  unit
)
"htmlMath.ml" 268 8295 8297 "htmlMath.ml" 270 8337 8372
type(
  unit
)
"htmlMath.ml" 267 8256 8258 "htmlMath.ml" 270 8337 8372
type(
  unit
)
"htmlMath.ml" 272 8374 8378 "htmlMath.ml" 272 8374 8389
type(
  bool -> unit
)
ident(
  def close_maths "htmlMath.ml" 280 8596 8596 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 272 8374 8390 "htmlMath.ml" 272 8374 8397
type(
  bool
)
ident(
  def display "htmlMath.ml" 274 8473 8475 "htmlMath.ml" 276 8531 8570
)
"htmlMath.ml" 274 8473 8478 "htmlMath.ml" 274 8473 8485
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 272 8374 8390 "htmlMath.ml" 272 8374 8397
)
"htmlMath.ml" 274 8473 8491 "htmlMath.ml" 274 8473 8504
type(
  bool -> unit
)
ident(
  int_ref close_display "htmlMath.ml" 146 4388 4392 "htmlMath.ml" 146 4388 4405
)
"htmlMath.ml" 274 8473 8505 "htmlMath.ml" 274 8473 8509
type(
  bool
)
"htmlMath.ml" 274 8473 8491 "htmlMath.ml" 274 8473 8509
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 274 8473 8475 "htmlMath.ml" 274 8473 8509
type(
  unit
)
"htmlMath.ml" 275 8512 8514 "htmlMath.ml" 275 8512 8525
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.close_group
)
"htmlMath.ml" 275 8512 8526 "htmlMath.ml" 275 8512 8528
type(
  unit
)
"htmlMath.ml" 275 8512 8514 "htmlMath.ml" 275 8512 8528
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 276 8531 8533 "htmlMath.ml" 276 8531 8538
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 276 8531 8550 "htmlMath.ml" 276 8531 8553
type(
  bool MyStack.t -> bool
)
ident(
  ext_ref MyStack.pop
)
"htmlMath.ml" 276 8531 8554 "htmlMath.ml" 276 8531 8560
type(
  HtmlCommon.stack_t
)
ident(
  ext_ref HtmlCommon.stacks
)
"htmlMath.ml" 276 8531 8554 "htmlMath.ml" 276 8531 8570
type(
  bool MyStack.t
)
"htmlMath.ml" 276 8531 8550 "htmlMath.ml" 276 8531 8570
call(
  stack
)
type(
  bool
)
"htmlMath.ml" 276 8531 8533 "htmlMath.ml" 276 8531 8570
type(
  unit
)
"htmlMath.ml" 275 8512 8514 "htmlMath.ml" 276 8531 8570
type(
  unit
)
"htmlMath.ml" 274 8473 8475 "htmlMath.ml" 276 8531 8570
type(
  unit
)
"htmlMath.ml" 280 8596 8600 "htmlMath.ml" 280 8596 8613
type(
  bool -> bool -> unit
)
ident(
  def open_vdisplay "htmlMath.ml" 309 9277 9277 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 280 8596 8614 "htmlMath.ml" 280 8596 8620
type(
  bool
)
ident(
  def center "htmlMath.ml" 280 8596 8621 "htmlMath.ml" 284 8765 8813
)
"htmlMath.ml" 280 8596 8621 "htmlMath.ml" 280 8596 8628
type(
  bool
)
ident(
  def display "htmlMath.ml" 281 8631 8633 "htmlMath.ml" 284 8765 8813
)
"htmlMath.ml" 281 8631 8636 "htmlMath.ml" 281 8631 8637
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 281 8631 8637 "htmlMath.ml" 281 8631 8644
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 281 8631 8636 "htmlMath.ml" 281 8631 8644
type(
  int
)
"htmlMath.ml" 281 8631 8645 "htmlMath.ml" 281 8631 8646
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 281 8631 8647 "htmlMath.ml" 281 8631 8648
type(
  int
)
"htmlMath.ml" 281 8631 8636 "htmlMath.ml" 281 8631 8648
type(
  bool
)
"htmlMath.ml" 282 8654 8658 "htmlMath.ml" 282 8654 8671
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 282 8654 8672 "htmlMath.ml" 282 8654 8687
type(
  string
)
"htmlMath.ml" 282 8654 8658 "htmlMath.ml" 282 8654 8687
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 281 8631 8633 "htmlMath.ml" 282 8654 8687
type(
  unit
)
"htmlMath.ml" 283 8689 8694 "htmlMath.ml" 283 8689 8697
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"htmlMath.ml" 283 8689 8698 "htmlMath.ml" 283 8689 8705
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 280 8596 8621 "htmlMath.ml" 280 8596 8628
)
"htmlMath.ml" 283 8689 8694 "htmlMath.ml" 283 8689 8705
type(
  bool
)
"htmlMath.ml" 283 8689 8712 "htmlMath.ml" 283 8689 8717
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"htmlMath.ml" 283 8689 8730 "htmlMath.ml" 283 8689 8762
type(
  string
)
"htmlMath.ml" 283 8689 8718 "htmlMath.ml" 283 8689 8763
type(
  exn
)
"htmlMath.ml" 283 8689 8712 "htmlMath.ml" 283 8689 8763
type(
  unit
)
"htmlMath.ml" 283 8689 8691 "htmlMath.ml" 283 8689 8763
type(
  unit
)
"htmlMath.ml" 284 8765 8767 "htmlMath.ml" 284 8765 8777
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 284 8765 8778 "htmlMath.ml" 284 8765 8783
type(
  HtmlCommon.block
)
"htmlMath.ml" 284 8765 8785 "htmlMath.ml" 284 8765 8796
type(
  bool -> int -> string
)
ident(
  ext_ref HtmlCommon.display_arg
)
"htmlMath.ml" 284 8765 8797 "htmlMath.ml" 284 8765 8803
type(
  bool
)
ident(
  int_ref center "htmlMath.ml" 280 8596 8614 "htmlMath.ml" 280 8596 8620
)
"htmlMath.ml" 284 8765 8804 "htmlMath.ml" 284 8765 8805
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 284 8765 8805 "htmlMath.ml" 284 8765 8812
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 284 8765 8804 "htmlMath.ml" 284 8765 8812
type(
  int
)
"htmlMath.ml" 284 8765 8784 "htmlMath.ml" 284 8765 8813
call(
  stack
)
type(
  string
)
"htmlMath.ml" 284 8765 8767 "htmlMath.ml" 284 8765 8813
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 283 8689 8691 "htmlMath.ml" 284 8765 8813
type(
  unit
)
"htmlMath.ml" 281 8631 8633 "htmlMath.ml" 284 8765 8813
type(
  unit
)
"htmlMath.ml" 286 8815 8819 "htmlMath.ml" 286 8815 8833
type(
  unit -> unit
)
ident(
  def close_vdisplay "htmlMath.ml" 309 9277 9277 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 286 8815 8834 "htmlMath.ml" 286 8815 8836
type(
  unit
)
"htmlMath.ml" 287 8839 8844 "htmlMath.ml" 287 8839 8845
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 287 8839 8845 "htmlMath.ml" 287 8839 8852
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 287 8839 8844 "htmlMath.ml" 287 8839 8852
type(
  int
)
"htmlMath.ml" 287 8839 8853 "htmlMath.ml" 287 8839 8854
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 287 8839 8855 "htmlMath.ml" 287 8839 8856
type(
  int
)
"htmlMath.ml" 287 8839 8844 "htmlMath.ml" 287 8839 8856
type(
  bool
)
"htmlMath.ml" 288 8862 8866 "htmlMath.ml" 288 8862 8879
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 288 8862 8880 "htmlMath.ml" 288 8862 8896
type(
  string
)
"htmlMath.ml" 288 8862 8866 "htmlMath.ml" 288 8862 8896
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 287 8839 8841 "htmlMath.ml" 288 8862 8896
type(
  unit
)
"htmlMath.ml" 289 8898 8900 "htmlMath.ml" 289 8898 8911
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_block
)
"htmlMath.ml" 289 8898 8912 "htmlMath.ml" 289 8898 8917
type(
  HtmlCommon.block
)
"htmlMath.ml" 289 8898 8900 "htmlMath.ml" 289 8898 8917
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 287 8839 8841 "htmlMath.ml" 289 8898 8917
type(
  unit
)
"htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
type(
  string -> string -> unit
)
ident(
  def open_vdisplay_row "htmlMath.ml" 309 9277 9277 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 291 8919 8941 "htmlMath.ml" 291 8919 8946
type(
  string
)
ident(
  def trarg "htmlMath.ml" 291 8919 8947 "htmlMath.ml" 296 9070 9090
)
"htmlMath.ml" 291 8919 8947 "htmlMath.ml" 291 8919 8952
type(
  string
)
ident(
  def tdarg "htmlMath.ml" 292 8956 8958 "htmlMath.ml" 296 9070 9090
)
"htmlMath.ml" 292 8956 8961 "htmlMath.ml" 292 8956 8962
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 292 8956 8962 "htmlMath.ml" 292 8956 8969
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 292 8956 8961 "htmlMath.ml" 292 8956 8969
type(
  int
)
"htmlMath.ml" 292 8956 8970 "htmlMath.ml" 292 8956 8971
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 292 8956 8972 "htmlMath.ml" 292 8956 8973
type(
  int
)
"htmlMath.ml" 292 8956 8961 "htmlMath.ml" 292 8956 8973
type(
  bool
)
"htmlMath.ml" 293 8979 8983 "htmlMath.ml" 293 8979 8996
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 293 8979 8997 "htmlMath.ml" 293 8979 9016
type(
  string
)
"htmlMath.ml" 293 8979 8983 "htmlMath.ml" 293 8979 9016
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 292 8956 8958 "htmlMath.ml" 293 8979 9016
type(
  unit
)
"htmlMath.ml" 294 9018 9020 "htmlMath.ml" 294 9018 9030
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 294 9018 9031 "htmlMath.ml" 294 9018 9033
type(
  HtmlCommon.block
)
"htmlMath.ml" 294 9018 9034 "htmlMath.ml" 294 9018 9039
type(
  string
)
ident(
  int_ref trarg "htmlMath.ml" 291 8919 8941 "htmlMath.ml" 291 8919 8946
)
"htmlMath.ml" 294 9018 9020 "htmlMath.ml" 294 9018 9039
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 295 9042 9044 "htmlMath.ml" 295 9042 9061
type(
  string -> unit
)
ident(
  int_ref open_display_cell "htmlMath.ml" 82 2303 2307 "htmlMath.ml" 82 2303 2324
)
"htmlMath.ml" 295 9042 9062 "htmlMath.ml" 295 9042 9067
type(
  string
)
ident(
  int_ref tdarg "htmlMath.ml" 291 8919 8947 "htmlMath.ml" 291 8919 8952
)
"htmlMath.ml" 295 9042 9044 "htmlMath.ml" 295 9042 9067
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 296 9070 9072 "htmlMath.ml" 296 9070 9084
type(
  bool -> unit
)
ident(
  int_ref open_display "htmlMath.ml" 140 4109 4113 "htmlMath.ml" 140 4109 4125
)
"htmlMath.ml" 296 9070 9085 "htmlMath.ml" 296 9070 9090
type(
  bool
)
"htmlMath.ml" 296 9070 9072 "htmlMath.ml" 296 9070 9090
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 295 9042 9044 "htmlMath.ml" 296 9070 9090
type(
  unit
)
"htmlMath.ml" 294 9018 9020 "htmlMath.ml" 296 9070 9090
type(
  unit
)
"htmlMath.ml" 292 8956 8958 "htmlMath.ml" 296 9070 9090
type(
  unit
)
"htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
type(
  unit -> unit
)
ident(
  def close_vdisplay_row "htmlMath.ml" 309 9277 9277 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 298 9092 9115 "htmlMath.ml" 298 9092 9117
type(
  unit
)
"htmlMath.ml" 299 9120 9125 "htmlMath.ml" 299 9120 9126
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 299 9120 9126 "htmlMath.ml" 299 9120 9133
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 299 9120 9125 "htmlMath.ml" 299 9120 9133
type(
  int
)
"htmlMath.ml" 299 9120 9134 "htmlMath.ml" 299 9120 9135
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 299 9120 9136 "htmlMath.ml" 299 9120 9137
type(
  int
)
"htmlMath.ml" 299 9120 9125 "htmlMath.ml" 299 9120 9137
type(
  bool
)
"htmlMath.ml" 300 9143 9147 "htmlMath.ml" 300 9143 9160
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"htmlMath.ml" 300 9143 9161 "htmlMath.ml" 300 9143 9181
type(
  string
)
"htmlMath.ml" 300 9143 9147 "htmlMath.ml" 300 9143 9181
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 299 9120 9122 "htmlMath.ml" 300 9143 9181
type(
  unit
)
"htmlMath.ml" 301 9183 9185 "htmlMath.ml" 301 9183 9198
type(
  bool -> unit
)
ident(
  int_ref close_display "htmlMath.ml" 146 4388 4392 "htmlMath.ml" 146 4388 4405
)
"htmlMath.ml" 301 9183 9199 "htmlMath.ml" 301 9183 9204
type(
  bool
)
"htmlMath.ml" 301 9183 9185 "htmlMath.ml" 301 9183 9204
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 302 9207 9209 "htmlMath.ml" 302 9207 9220
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.force_block
)
"htmlMath.ml" 302 9207 9221 "htmlMath.ml" 302 9207 9223
type(
  HtmlCommon.block
)
"htmlMath.ml" 302 9207 9224 "htmlMath.ml" 302 9207 9232
type(
  string
)
"htmlMath.ml" 302 9207 9209 "htmlMath.ml" 302 9207 9232
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 303 9236 9238 "htmlMath.ml" 303 9236 9249
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_block
)
"htmlMath.ml" 303 9236 9250 "htmlMath.ml" 303 9236 9252
type(
  HtmlCommon.block
)
"htmlMath.ml" 303 9236 9238 "htmlMath.ml" 303 9236 9252
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 302 9207 9209 "htmlMath.ml" 303 9236 9252
type(
  unit
)
"htmlMath.ml" 301 9183 9185 "htmlMath.ml" 303 9236 9252
type(
  unit
)
"htmlMath.ml" 299 9120 9122 "htmlMath.ml" 303 9236 9252
type(
  unit
)
"htmlMath.ml" 309 9277 9281 "htmlMath.ml" 309 9277 9292
type(
  bool -> (string Lexstate.arg -> 'a) -> string Lexstate.arg -> unit
)
ident(
  def put_sup_sub "htmlMath.ml" 314 9483 9483 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 309 9277 9293 "htmlMath.ml" 309 9277 9300
type(
  bool
)
ident(
  def display "htmlMath.ml" 309 9277 9301 "htmlMath.ml" 312 9420 9481
)
"htmlMath.ml" 309 9277 9301 "htmlMath.ml" 309 9277 9308
type(
  string Lexstate.arg -> 'a
)
ident(
  def scanner "htmlMath.ml" 309 9277 9309 "htmlMath.ml" 312 9420 9481
)
"htmlMath.ml" 309 9277 9310 "htmlMath.ml" 309 9277 9313
type(
  string Lexstate.arg
)
ident(
  def arg "htmlMath.ml" 310 9339 9341 "htmlMath.ml" 312 9420 9481
)
"htmlMath.ml" 310 9339 9344 "htmlMath.ml" 310 9339 9351
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 309 9277 9293 "htmlMath.ml" 309 9277 9300
)
"htmlMath.ml" 310 9339 9357 "htmlMath.ml" 310 9339 9369
type(
  bool -> unit
)
ident(
  int_ref open_display "htmlMath.ml" 140 4109 4113 "htmlMath.ml" 140 4109 4125
)
"htmlMath.ml" 310 9339 9370 "htmlMath.ml" 310 9339 9375
type(
  bool
)
"htmlMath.ml" 310 9339 9357 "htmlMath.ml" 310 9339 9375
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 310 9339 9381 "htmlMath.ml" 310 9339 9391
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 310 9339 9392 "htmlMath.ml" 310 9339 9398
type(
  HtmlCommon.block
)
"htmlMath.ml" 310 9339 9399 "htmlMath.ml" 310 9339 9401
type(
  string
)
"htmlMath.ml" 310 9339 9381 "htmlMath.ml" 310 9339 9401
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 310 9339 9341 "htmlMath.ml" 310 9339 9401
type(
  unit
)
"htmlMath.ml" 311 9404 9406 "htmlMath.ml" 311 9404 9413
type(
  string Lexstate.arg -> 'a
)
ident(
  int_ref scanner "htmlMath.ml" 309 9277 9301 "htmlMath.ml" 309 9277 9308
)
"htmlMath.ml" 311 9404 9414 "htmlMath.ml" 311 9404 9417
type(
  string Lexstate.arg
)
ident(
  int_ref arg "htmlMath.ml" 309 9277 9310 "htmlMath.ml" 309 9277 9313
)
"htmlMath.ml" 311 9404 9406 "htmlMath.ml" 311 9404 9417
call(
  stack
)
type(
  'a
)
"htmlMath.ml" 312 9420 9425 "htmlMath.ml" 312 9420 9432
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 309 9277 9293 "htmlMath.ml" 309 9277 9300
)
"htmlMath.ml" 312 9420 9438 "htmlMath.ml" 312 9420 9451
type(
  bool -> unit
)
ident(
  int_ref close_display "htmlMath.ml" 146 4388 4392 "htmlMath.ml" 146 4388 4405
)
"htmlMath.ml" 312 9420 9452 "htmlMath.ml" 312 9420 9457
type(
  bool
)
"htmlMath.ml" 312 9420 9438 "htmlMath.ml" 312 9420 9457
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 312 9420 9463 "htmlMath.ml" 312 9420 9474
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_block
)
"htmlMath.ml" 312 9420 9475 "htmlMath.ml" 312 9420 9481
type(
  HtmlCommon.block
)
"htmlMath.ml" 312 9420 9463 "htmlMath.ml" 312 9420 9481
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 312 9420 9422 "htmlMath.ml" 312 9420 9481
type(
  unit
)
"htmlMath.ml" 311 9404 9406 "htmlMath.ml" 312 9420 9481
type(
  unit
)
"htmlMath.ml" 310 9339 9341 "htmlMath.ml" 312 9420 9481
type(
  unit
)
"htmlMath.ml" 314 9483 9487 "htmlMath.ml" 314 9483 9500
type(
  string -> string -> unit
)
ident(
  def reput_sup_sub "htmlMath.ml" 333 9881 9881 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 314 9483 9501 "htmlMath.ml" 314 9483 9504
type(
  string
)
ident(
  def tag "htmlMath.ml" 314 9483 9507 "htmlMath.ml" 330 9854 9878
)
"htmlMath.ml" 315 9516 9520 "htmlMath.ml" 315 9516 9522
type(
  string
)
"htmlMath.ml" 315 9516 9526 "htmlMath.ml" 315 9516 9528
type(
  unit
)
"htmlMath.ml" 316 9529 9533 "htmlMath.ml" 316 9529 9534
type(
  string
)
ident(
  def s "htmlMath.ml" 317 9539 9545 "htmlMath.ml" 330 9854 9878
)
"htmlMath.ml" 317 9539 9545 "htmlMath.ml" 317 9539 9555
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 317 9539 9556 "htmlMath.ml" 317 9539 9562
type(
  HtmlCommon.block
)
"htmlMath.ml" 317 9539 9563 "htmlMath.ml" 317 9539 9565
type(
  string
)
"htmlMath.ml" 317 9539 9545 "htmlMath.ml" 317 9539 9565
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 318 9568 9574 "htmlMath.ml" 318 9568 9584
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.clearstyle
)
"htmlMath.ml" 318 9568 9585 "htmlMath.ml" 318 9568 9587
type(
  unit
)
"htmlMath.ml" 318 9568 9574 "htmlMath.ml" 318 9568 9587
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 319 9590 9599 "htmlMath.ml" 319 9590 9602
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"htmlMath.ml" 319 9590 9605 "htmlMath.ml" 319 9590 9610
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 319 9590 9605 "htmlMath.ml" 319 9590 9617
type(
  bool
)
"htmlMath.ml" 319 9590 9618 "htmlMath.ml" 319 9590 9620
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 319 9590 9621 "htmlMath.ml" 319 9590 9622
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 319 9590 9622 "htmlMath.ml" 319 9590 9630
type(
  bool ref
)
ident(
  ext_ref Parse_opts.pedantic
)
"htmlMath.ml" 319 9590 9621 "htmlMath.ml" 319 9590 9630
type(
  bool
)
"htmlMath.ml" 319 9590 9604 "htmlMath.ml" 319 9590 9631
type(
  bool
)
"htmlMath.ml" 319 9590 9599 "htmlMath.ml" 319 9590 9631
type(
  bool
)
"htmlMath.ml" 320 9643 9651 "htmlMath.ml" 320 9643 9659
type(
  char -> unit
)
ident(
  int_ref put_char "htmlMath.ml" 56 1852 1856 "htmlMath.ml" 56 1852 1864
)
"htmlMath.ml" 320 9643 9660 "htmlMath.ml" 320 9643 9663
type(
  char
)
"htmlMath.ml" 320 9643 9651 "htmlMath.ml" 320 9643 9663
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 321 9666 9674 "htmlMath.ml" 321 9666 9677
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 321 9666 9678 "htmlMath.ml" 321 9666 9681
type(
  string
)
ident(
  int_ref tag "htmlMath.ml" 314 9483 9501 "htmlMath.ml" 314 9483 9504
)
"htmlMath.ml" 321 9666 9674 "htmlMath.ml" 321 9666 9681
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 322 9684 9692 "htmlMath.ml" 322 9684 9700
type(
  char -> unit
)
ident(
  int_ref put_char "htmlMath.ml" 56 1852 1856 "htmlMath.ml" 56 1852 1864
)
"htmlMath.ml" 322 9684 9701 "htmlMath.ml" 322 9684 9704
type(
  char
)
"htmlMath.ml" 322 9684 9692 "htmlMath.ml" 322 9684 9704
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 321 9666 9674 "htmlMath.ml" 322 9684 9704
type(
  unit
)
"htmlMath.ml" 319 9590 9637 "htmlMath.ml" 323 9705 9714
type(
  unit
)
"htmlMath.ml" 319 9590 9596 "htmlMath.ml" 323 9705 9714
type(
  unit
)
"htmlMath.ml" 324 9717 9723 "htmlMath.ml" 324 9717 9726
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 324 9717 9727 "htmlMath.ml" 324 9717 9728
type(
  string
)
ident(
  int_ref s "htmlMath.ml" 316 9529 9533 "htmlMath.ml" 316 9529 9534
)
"htmlMath.ml" 324 9717 9723 "htmlMath.ml" 324 9717 9728
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 325 9731 9740 "htmlMath.ml" 325 9731 9743
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"htmlMath.ml" 325 9731 9746 "htmlMath.ml" 325 9731 9751
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 325 9731 9746 "htmlMath.ml" 325 9731 9758
type(
  bool
)
"htmlMath.ml" 325 9731 9759 "htmlMath.ml" 325 9731 9761
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 325 9731 9762 "htmlMath.ml" 325 9731 9763
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 325 9731 9763 "htmlMath.ml" 325 9731 9771
type(
  bool ref
)
ident(
  ext_ref Parse_opts.pedantic
)
"htmlMath.ml" 325 9731 9762 "htmlMath.ml" 325 9731 9771
type(
  bool
)
"htmlMath.ml" 325 9731 9745 "htmlMath.ml" 325 9731 9772
type(
  bool
)
"htmlMath.ml" 325 9731 9740 "htmlMath.ml" 325 9731 9772
type(
  bool
)
"htmlMath.ml" 326 9784 9792 "htmlMath.ml" 326 9784 9795
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 326 9784 9796 "htmlMath.ml" 326 9784 9800
type(
  string
)
"htmlMath.ml" 326 9784 9792 "htmlMath.ml" 326 9784 9800
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 327 9803 9811 "htmlMath.ml" 327 9803 9814
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 327 9803 9815 "htmlMath.ml" 327 9803 9818
type(
  string
)
ident(
  int_ref tag "htmlMath.ml" 314 9483 9501 "htmlMath.ml" 314 9483 9504
)
"htmlMath.ml" 327 9803 9811 "htmlMath.ml" 327 9803 9818
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 328 9821 9829 "htmlMath.ml" 328 9821 9837
type(
  char -> unit
)
ident(
  int_ref put_char "htmlMath.ml" 56 1852 1856 "htmlMath.ml" 56 1852 1864
)
"htmlMath.ml" 328 9821 9838 "htmlMath.ml" 328 9821 9841
type(
  char
)
"htmlMath.ml" 328 9821 9829 "htmlMath.ml" 328 9821 9841
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 327 9803 9811 "htmlMath.ml" 328 9821 9841
type(
  unit
)
"htmlMath.ml" 325 9731 9778 "htmlMath.ml" 329 9842 9851
type(
  unit
)
"htmlMath.ml" 325 9731 9737 "htmlMath.ml" 329 9842 9851
type(
  unit
)
"htmlMath.ml" 330 9854 9860 "htmlMath.ml" 330 9854 9871
type(
  HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.close_block
)
"htmlMath.ml" 330 9854 9872 "htmlMath.ml" 330 9854 9878
type(
  HtmlCommon.block
)
"htmlMath.ml" 330 9854 9860 "htmlMath.ml" 330 9854 9878
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 325 9731 9737 "htmlMath.ml" 330 9854 9878
type(
  unit
)
"htmlMath.ml" 324 9717 9723 "htmlMath.ml" 330 9854 9878
type(
  unit
)
"htmlMath.ml" 319 9590 9596 "htmlMath.ml" 330 9854 9878
type(
  unit
)
"htmlMath.ml" 318 9568 9574 "htmlMath.ml" 330 9854 9878
type(
  unit
)
"htmlMath.ml" 317 9539 9545 "htmlMath.ml" 330 9854 9878
type(
  unit
)
"htmlMath.ml" 314 9483 9507 "htmlMath.ml" 330 9854 9878
type(
  string -> unit
)
"htmlMath.ml" 333 9881 9885 "htmlMath.ml" 333 9881 9901
type(
  (string Lexstate.arg -> 'a) ->
  (unit -> 'b) -> string Lexstate.arg -> string Lexstate.arg -> bool -> unit
)
ident(
  def standard_sup_sub "htmlMath.ml" 367 10725 10725 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 333 9881 9902 "htmlMath.ml" 333 9881 9909
type(
  string Lexstate.arg -> 'a
)
ident(
  def scanner "htmlMath.ml" 333 9881 9910 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 333 9881 9910 "htmlMath.ml" 333 9881 9914
type(
  unit -> 'b
)
ident(
  def what "htmlMath.ml" 333 9881 9915 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 333 9881 9915 "htmlMath.ml" 333 9881 9918
type(
  string Lexstate.arg
)
ident(
  def sup "htmlMath.ml" 333 9881 9919 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 333 9881 9919 "htmlMath.ml" 333 9881 9922
type(
  string Lexstate.arg
)
ident(
  def sub "htmlMath.ml" 333 9881 9923 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 333 9881 9923 "htmlMath.ml" 333 9881 9930
type(
  bool
)
ident(
  def display "htmlMath.ml" 334 9933 9935 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 334 9933 9939 "htmlMath.ml" 334 9933 9942
type(
  string
)
ident(
  def sup "htmlMath.ml" 337 10020 10022 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 334 9933 9943 "htmlMath.ml" 334 9933 9947
type(
  HtmlCommon.flags_t
)
ident(
  def fsup "htmlMath.ml" 337 10020 10022 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 334 9933 9939 "htmlMath.ml" 334 9933 9947
type(
  string * HtmlCommon.flags_t
)
"htmlMath.ml" 335 9950 9954 "htmlMath.ml" 335 9950 9970
type(
  (unit -> unit) -> string * HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.hidden_to_string
)
"htmlMath.ml" 335 9950 9976 "htmlMath.ml" 335 9950 9978
type(
  unit
)
"htmlMath.ml" 335 9950 9982 "htmlMath.ml" 335 9950 9993
type(
  bool -> (string Lexstate.arg -> 'a) -> string Lexstate.arg -> unit
)
ident(
  int_ref put_sup_sub "htmlMath.ml" 309 9277 9281 "htmlMath.ml" 309 9277 9292
)
"htmlMath.ml" 335 9950 9994 "htmlMath.ml" 335 9950 10001
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 333 9881 9923 "htmlMath.ml" 333 9881 9930
)
"htmlMath.ml" 335 9950 10002 "htmlMath.ml" 335 9950 10009
type(
  string Lexstate.arg -> 'a
)
ident(
  int_ref scanner "htmlMath.ml" 333 9881 9902 "htmlMath.ml" 333 9881 9909
)
"htmlMath.ml" 335 9950 10010 "htmlMath.ml" 335 9950 10013
type(
  string Lexstate.arg
)
ident(
  int_ref sup "htmlMath.ml" 333 9881 9915 "htmlMath.ml" 333 9881 9918
)
"htmlMath.ml" 335 9950 9982 "htmlMath.ml" 335 9950 10013
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 335 9950 9971 "htmlMath.ml" 335 9950 10014
type(
  unit -> unit
)
"htmlMath.ml" 335 9950 9954 "htmlMath.ml" 335 9950 10014
call(
  stack
)
type(
  string * HtmlCommon.flags_t
)
"htmlMath.ml" 337 10020 10026 "htmlMath.ml" 337 10020 10029
type(
  string
)
ident(
  def sub "htmlMath.ml" 340 10106 10108 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 337 10020 10030 "htmlMath.ml" 337 10020 10034
type(
  HtmlCommon.flags_t
)
ident(
  def fsub "htmlMath.ml" 340 10106 10108 "htmlMath.ml" 364 10717 10722
)
"htmlMath.ml" 337 10020 10026 "htmlMath.ml" 337 10020 10034
type(
  string * HtmlCommon.flags_t
)
"htmlMath.ml" 338 10037 10041 "htmlMath.ml" 338 10037 10057
type(
  (unit -> unit) -> string * HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.hidden_to_string
)
"htmlMath.ml" 338 10037 10063 "htmlMath.ml" 338 10037 10065
type(
  unit
)
"htmlMath.ml" 338 10037 10069 "htmlMath.ml" 338 10037 10080
type(
  bool -> (string Lexstate.arg -> 'a) -> string Lexstate.arg -> unit
)
ident(
  int_ref put_sup_sub "htmlMath.ml" 309 9277 9281 "htmlMath.ml" 309 9277 9292
)
"htmlMath.ml" 338 10037 10081 "htmlMath.ml" 338 10037 10088
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 333 9881 9923 "htmlMath.ml" 333 9881 9930
)
"htmlMath.ml" 338 10037 10089 "htmlMath.ml" 338 10037 10096
type(
  string Lexstate.arg -> 'a
)
ident(
  int_ref scanner "htmlMath.ml" 333 9881 9902 "htmlMath.ml" 333 9881 9909
)
"htmlMath.ml" 338 10037 10097 "htmlMath.ml" 338 10037 10100
type(
  string Lexstate.arg
)
ident(
  int_ref sub "htmlMath.ml" 333 9881 9919 "htmlMath.ml" 333 9881 9922
)
"htmlMath.ml" 338 10037 10069 "htmlMath.ml" 338 10037 10100
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 338 10037 10058 "htmlMath.ml" 338 10037 10101
type(
  unit -> unit
)
"htmlMath.ml" 338 10037 10041 "htmlMath.ml" 338 10037 10101
call(
  stack
)
type(
  string * HtmlCommon.flags_t
)
"htmlMath.ml" 340 10106 10111 "htmlMath.ml" 340 10106 10118
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 333 9881 9923 "htmlMath.ml" 333 9881 9930
)
"htmlMath.ml" 340 10106 10119 "htmlMath.ml" 340 10106 10121
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 340 10106 10123 "htmlMath.ml" 340 10106 10127
type(
  HtmlCommon.flags_t
)
ident(
  int_ref fsub "htmlMath.ml" 337 10020 10030 "htmlMath.ml" 337 10020 10034
)
"htmlMath.ml" 340 10106 10123 "htmlMath.ml" 340 10106 10140
type(
  bool
)
"htmlMath.ml" 340 10106 10141 "htmlMath.ml" 340 10106 10143
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"htmlMath.ml" 340 10106 10144 "htmlMath.ml" 340 10106 10148
type(
  HtmlCommon.flags_t
)
ident(
  int_ref fsup "htmlMath.ml" 334 9933 9943 "htmlMath.ml" 334 9933 9947
)
"htmlMath.ml" 340 10106 10144 "htmlMath.ml" 340 10106 10161
type(
  bool
)
"htmlMath.ml" 340 10106 10122 "htmlMath.ml" 340 10106 10162
type(
  bool
)
"htmlMath.ml" 340 10106 10111 "htmlMath.ml" 340 10106 10162
type(
  bool
)
"htmlMath.ml" 341 10174 10178 "htmlMath.ml" 341 10174 10196
type(
  unit -> unit
)
ident(
  int_ref force_item_display "htmlMath.ml" 256 8060 8064 "htmlMath.ml" 256 8060 8082
)
"htmlMath.ml" 341 10174 10197 "htmlMath.ml" 341 10174 10199
type(
  unit
)
"htmlMath.ml" 341 10174 10178 "htmlMath.ml" 341 10174 10199
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 342 10202 10206 "htmlMath.ml" 342 10202 10219
type(
  bool -> bool -> unit
)
ident(
  int_ref open_vdisplay "htmlMath.ml" 280 8596 8600 "htmlMath.ml" 280 8596 8613
)
"htmlMath.ml" 342 10202 10220 "htmlMath.ml" 342 10202 10225
type(
  bool
)
"htmlMath.ml" 342 10202 10226 "htmlMath.ml" 342 10202 10233
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 333 9881 9923 "htmlMath.ml" 333 9881 9930
)
"htmlMath.ml" 342 10202 10206 "htmlMath.ml" 342 10202 10233
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 343 10236 10243 "htmlMath.ml" 343 10236 10246
type(
  string
)
ident(
  int_ref sup "htmlMath.ml" 334 9933 9939 "htmlMath.ml" 334 9933 9942
)
"htmlMath.ml" 343 10236 10247 "htmlMath.ml" 343 10236 10249
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"htmlMath.ml" 343 10236 10250 "htmlMath.ml" 343 10236 10252
type(
  string
)
"htmlMath.ml" 343 10236 10243 "htmlMath.ml" 343 10236 10252
type(
  bool
)
"htmlMath.ml" 344 10264 10270 "htmlMath.ml" 344 10264 10287
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 344 10264 10288 "htmlMath.ml" 344 10264 10290
type(
  string
)
"htmlMath.ml" 344 10264 10291 "htmlMath.ml" 344 10264 10293
type(
  string
)
"htmlMath.ml" 344 10264 10270 "htmlMath.ml" 344 10264 10293
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 345 10296 10302 "htmlMath.ml" 345 10296 10312
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.clearstyle
)
"htmlMath.ml" 345 10296 10313 "htmlMath.ml" 345 10296 10315
type(
  unit
)
"htmlMath.ml" 345 10296 10302 "htmlMath.ml" 345 10296 10315
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 346 10318 10324 "htmlMath.ml" 346 10318 10327
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 346 10318 10328 "htmlMath.ml" 346 10318 10331
type(
  string
)
ident(
  int_ref sup "htmlMath.ml" 334 9933 9939 "htmlMath.ml" 334 9933 9942
)
"htmlMath.ml" 346 10318 10324 "htmlMath.ml" 346 10318 10331
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 347 10334 10340 "htmlMath.ml" 347 10334 10358
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 347 10334 10359 "htmlMath.ml" 347 10334 10361
type(
  unit
)
"htmlMath.ml" 347 10334 10340 "htmlMath.ml" 347 10334 10361
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 346 10318 10324 "htmlMath.ml" 347 10334 10361
type(
  unit
)
"htmlMath.ml" 345 10296 10302 "htmlMath.ml" 347 10334 10361
type(
  unit
)
"htmlMath.ml" 343 10236 10258 "htmlMath.ml" 348 10362 10369
type(
  unit
)
"htmlMath.ml" 343 10236 10240 "htmlMath.ml" 348 10362 10369
type(
  unit
)
"htmlMath.ml" 349 10372 10376 "htmlMath.ml" 349 10372 10393
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 349 10372 10394 "htmlMath.ml" 349 10372 10396
type(
  string
)
"htmlMath.ml" 349 10372 10397 "htmlMath.ml" 349 10372 10399
type(
  string
)
"htmlMath.ml" 349 10372 10376 "htmlMath.ml" 349 10372 10399
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 350 10402 10406 "htmlMath.ml" 350 10402 10410
type(
  unit -> 'b
)
ident(
  int_ref what "htmlMath.ml" 333 9881 9910 "htmlMath.ml" 333 9881 9914
)
"htmlMath.ml" 350 10402 10411 "htmlMath.ml" 350 10402 10413
type(
  unit
)
"htmlMath.ml" 350 10402 10406 "htmlMath.ml" 350 10402 10413
call(
  stack
)
type(
  'b
)
"htmlMath.ml" 351 10415 10419 "htmlMath.ml" 351 10415 10437
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 351 10415 10438 "htmlMath.ml" 351 10415 10440
type(
  unit
)
"htmlMath.ml" 351 10415 10419 "htmlMath.ml" 351 10415 10440
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 352 10443 10450 "htmlMath.ml" 352 10443 10453
type(
  string
)
ident(
  int_ref sub "htmlMath.ml" 337 10020 10026 "htmlMath.ml" 337 10020 10029
)
"htmlMath.ml" 352 10443 10454 "htmlMath.ml" 352 10443 10456
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"htmlMath.ml" 352 10443 10457 "htmlMath.ml" 352 10443 10459
type(
  string
)
"htmlMath.ml" 352 10443 10450 "htmlMath.ml" 352 10443 10459
type(
  bool
)
"htmlMath.ml" 353 10471 10477 "htmlMath.ml" 353 10471 10494
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 353 10471 10495 "htmlMath.ml" 353 10471 10497
type(
  string
)
"htmlMath.ml" 353 10471 10498 "htmlMath.ml" 353 10471 10500
type(
  string
)
"htmlMath.ml" 353 10471 10477 "htmlMath.ml" 353 10471 10500
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 354 10503 10509 "htmlMath.ml" 354 10503 10519
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.clearstyle
)
"htmlMath.ml" 354 10503 10520 "htmlMath.ml" 354 10503 10522
type(
  unit
)
"htmlMath.ml" 354 10503 10509 "htmlMath.ml" 354 10503 10522
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 355 10525 10531 "htmlMath.ml" 355 10525 10534
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 355 10525 10535 "htmlMath.ml" 355 10525 10538
type(
  string
)
ident(
  int_ref sub "htmlMath.ml" 337 10020 10026 "htmlMath.ml" 337 10020 10029
)
"htmlMath.ml" 355 10525 10531 "htmlMath.ml" 355 10525 10538
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 356 10541 10547 "htmlMath.ml" 356 10541 10565
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 356 10541 10566 "htmlMath.ml" 356 10541 10568
type(
  unit
)
"htmlMath.ml" 356 10541 10547 "htmlMath.ml" 356 10541 10568
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 355 10525 10531 "htmlMath.ml" 356 10541 10568
type(
  unit
)
"htmlMath.ml" 354 10503 10509 "htmlMath.ml" 356 10541 10568
type(
  unit
)
"htmlMath.ml" 352 10443 10465 "htmlMath.ml" 357 10569 10576
type(
  unit
)
"htmlMath.ml" 352 10443 10447 "htmlMath.ml" 357 10569 10576
type(
  unit
)
"htmlMath.ml" 358 10579 10583 "htmlMath.ml" 358 10579 10597
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay "htmlMath.ml" 286 8815 8819 "htmlMath.ml" 286 8815 8833
)
"htmlMath.ml" 358 10579 10598 "htmlMath.ml" 358 10579 10600
type(
  unit
)
"htmlMath.ml" 358 10579 10583 "htmlMath.ml" 358 10579 10600
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 359 10603 10607 "htmlMath.ml" 359 10603 10625
type(
  unit -> unit
)
ident(
  int_ref force_item_display "htmlMath.ml" 256 8060 8064 "htmlMath.ml" 256 8060 8082
)
"htmlMath.ml" 359 10603 10626 "htmlMath.ml" 359 10603 10628
type(
  unit
)
"htmlMath.ml" 359 10603 10607 "htmlMath.ml" 359 10603 10628
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 358 10579 10583 "htmlMath.ml" 359 10603 10628
type(
  unit
)
"htmlMath.ml" 352 10443 10447 "htmlMath.ml" 359 10603 10628
type(
  unit
)
"htmlMath.ml" 351 10415 10419 "htmlMath.ml" 359 10603 10628
type(
  unit
)
"htmlMath.ml" 350 10402 10406 "htmlMath.ml" 359 10603 10628
type(
  unit
)
"htmlMath.ml" 349 10372 10376 "htmlMath.ml" 359 10603 10628
type(
  unit
)
"htmlMath.ml" 343 10236 10240 "htmlMath.ml" 359 10603 10628
type(
  unit
)
"htmlMath.ml" 342 10202 10206 "htmlMath.ml" 359 10603 10628
type(
  unit
)
"htmlMath.ml" 340 10106 10168 "htmlMath.ml" 360 10629 10634
type(
  unit
)
"htmlMath.ml" 361 10646 10650 "htmlMath.ml" 361 10646 10654
type(
  unit -> 'b
)
ident(
  int_ref what "htmlMath.ml" 333 9881 9910 "htmlMath.ml" 333 9881 9914
)
"htmlMath.ml" 361 10646 10655 "htmlMath.ml" 361 10646 10657
type(
  unit
)
"htmlMath.ml" 361 10646 10650 "htmlMath.ml" 361 10646 10657
call(
  stack
)
type(
  'b
)
"htmlMath.ml" 362 10659 10663 "htmlMath.ml" 362 10659 10676
type(
  string -> string -> unit
)
ident(
  int_ref reput_sup_sub "htmlMath.ml" 314 9483 9487 "htmlMath.ml" 314 9483 9500
)
"htmlMath.ml" 362 10659 10677 "htmlMath.ml" 362 10659 10682
type(
  string
)
"htmlMath.ml" 362 10659 10683 "htmlMath.ml" 362 10659 10686
type(
  string
)
ident(
  int_ref sub "htmlMath.ml" 337 10020 10026 "htmlMath.ml" 337 10020 10029
)
"htmlMath.ml" 362 10659 10663 "htmlMath.ml" 362 10659 10686
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 363 10689 10693 "htmlMath.ml" 363 10689 10706
type(
  string -> string -> unit
)
ident(
  int_ref reput_sup_sub "htmlMath.ml" 314 9483 9487 "htmlMath.ml" 314 9483 9500
)
"htmlMath.ml" 363 10689 10707 "htmlMath.ml" 363 10689 10712
type(
  string
)
"htmlMath.ml" 363 10689 10713 "htmlMath.ml" 363 10689 10716
type(
  string
)
ident(
  int_ref sup "htmlMath.ml" 334 9933 9939 "htmlMath.ml" 334 9933 9942
)
"htmlMath.ml" 363 10689 10693 "htmlMath.ml" 363 10689 10716
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 362 10659 10663 "htmlMath.ml" 363 10689 10716
type(
  unit
)
"htmlMath.ml" 360 10629 10640 "htmlMath.ml" 364 10717 10722
type(
  unit
)
"htmlMath.ml" 340 10106 10108 "htmlMath.ml" 364 10717 10722
type(
  unit
)
"htmlMath.ml" 337 10020 10022 "htmlMath.ml" 364 10717 10722
type(
  unit
)
"htmlMath.ml" 334 9933 9935 "htmlMath.ml" 364 10717 10722
type(
  unit
)
"htmlMath.ml" 367 10725 10729 "htmlMath.ml" 367 10725 10742
type(
  (string Lexstate.arg -> 'a) ->
  (unit -> unit) ->
  string Lexstate.arg -> string Lexstate.arg -> bool -> unit
)
ident(
  def limit_sup_sub "htmlMath.ml" 388 11381 11381 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 367 10725 10743 "htmlMath.ml" 367 10725 10750
type(
  string Lexstate.arg -> 'a
)
ident(
  def scanner "htmlMath.ml" 367 10725 10751 "htmlMath.ml" 386 11374 11379
)
"htmlMath.ml" 367 10725 10751 "htmlMath.ml" 367 10725 10755
type(
  unit -> unit
)
ident(
  def what "htmlMath.ml" 367 10725 10756 "htmlMath.ml" 386 11374 11379
)
"htmlMath.ml" 367 10725 10756 "htmlMath.ml" 367 10725 10759
type(
  string Lexstate.arg
)
ident(
  def sup "htmlMath.ml" 367 10725 10760 "htmlMath.ml" 386 11374 11379
)
"htmlMath.ml" 367 10725 10760 "htmlMath.ml" 367 10725 10763
type(
  string Lexstate.arg
)
ident(
  def sub "htmlMath.ml" 367 10725 10764 "htmlMath.ml" 386 11374 11379
)
"htmlMath.ml" 367 10725 10764 "htmlMath.ml" 367 10725 10771
type(
  bool
)
ident(
  def display "htmlMath.ml" 368 10774 10776 "htmlMath.ml" 386 11374 11379
)
"htmlMath.ml" 368 10774 10780 "htmlMath.ml" 368 10774 10783
type(
  string
)
ident(
  def sup "htmlMath.ml" 370 10909 10911 "htmlMath.ml" 386 11374 11379
)
"htmlMath.ml" 368 10774 10786 "htmlMath.ml" 368 10774 10795
type(
  (unit -> unit) -> string
)
ident(
  ext_ref HtmlCommon.to_string
)
"htmlMath.ml" 368 10774 10801 "htmlMath.ml" 368 10774 10803
type(
  unit
)
"htmlMath.ml" 368 10774 10807 "htmlMath.ml" 368 10774 10818
type(
  bool -> (string Lexstate.arg -> 'a) -> string Lexstate.arg -> unit
)
ident(
  int_ref put_sup_sub "htmlMath.ml" 309 9277 9281 "htmlMath.ml" 309 9277 9292
)
"htmlMath.ml" 368 10774 10819 "htmlMath.ml" 368 10774 10826
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 367 10725 10764 "htmlMath.ml" 367 10725 10771
)
"htmlMath.ml" 368 10774 10827 "htmlMath.ml" 368 10774 10834
type(
  string Lexstate.arg -> 'a
)
ident(
  int_ref scanner "htmlMath.ml" 367 10725 10743 "htmlMath.ml" 367 10725 10750
)
"htmlMath.ml" 368 10774 10835 "htmlMath.ml" 368 10774 10838
type(
  string Lexstate.arg
)
ident(
  int_ref sup "htmlMath.ml" 367 10725 10756 "htmlMath.ml" 367 10725 10759
)
"htmlMath.ml" 368 10774 10807 "htmlMath.ml" 368 10774 10838
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 368 10774 10796 "htmlMath.ml" 368 10774 10839
type(
  unit -> unit
)
"htmlMath.ml" 368 10774 10786 "htmlMath.ml" 368 10774 10839
call(
  stack
)
type(
  string
)
"htmlMath.ml" 369 10840 10846 "htmlMath.ml" 369 10840 10849
type(
  string
)
ident(
  def sub "htmlMath.ml" 370 10909 10911 "htmlMath.ml" 386 11374 11379
)
"htmlMath.ml" 369 10840 10852 "htmlMath.ml" 369 10840 10861
type(
  (unit -> unit) -> string
)
ident(
  ext_ref HtmlCommon.to_string
)
"htmlMath.ml" 369 10840 10867 "htmlMath.ml" 369 10840 10869
type(
  unit
)
"htmlMath.ml" 369 10840 10873 "htmlMath.ml" 369 10840 10884
type(
  bool -> (string Lexstate.arg -> 'a) -> string Lexstate.arg -> unit
)
ident(
  int_ref put_sup_sub "htmlMath.ml" 309 9277 9281 "htmlMath.ml" 309 9277 9292
)
"htmlMath.ml" 369 10840 10885 "htmlMath.ml" 369 10840 10892
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 367 10725 10764 "htmlMath.ml" 367 10725 10771
)
"htmlMath.ml" 369 10840 10893 "htmlMath.ml" 369 10840 10900
type(
  string Lexstate.arg -> 'a
)
ident(
  int_ref scanner "htmlMath.ml" 367 10725 10743 "htmlMath.ml" 367 10725 10750
)
"htmlMath.ml" 369 10840 10901 "htmlMath.ml" 369 10840 10904
type(
  string Lexstate.arg
)
ident(
  int_ref sub "htmlMath.ml" 367 10725 10760 "htmlMath.ml" 367 10725 10763
)
"htmlMath.ml" 369 10840 10873 "htmlMath.ml" 369 10840 10904
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 369 10840 10862 "htmlMath.ml" 369 10840 10905
type(
  unit -> unit
)
"htmlMath.ml" 369 10840 10852 "htmlMath.ml" 369 10840 10905
call(
  stack
)
type(
  string
)
"htmlMath.ml" 370 10909 10914 "htmlMath.ml" 370 10909 10917
type(
  string
)
ident(
  int_ref sup "htmlMath.ml" 368 10774 10780 "htmlMath.ml" 368 10774 10783
)
"htmlMath.ml" 370 10909 10918 "htmlMath.ml" 370 10909 10919
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"htmlMath.ml" 370 10909 10920 "htmlMath.ml" 370 10909 10922
type(
  string
)
"htmlMath.ml" 370 10909 10914 "htmlMath.ml" 370 10909 10922
type(
  bool
)
"htmlMath.ml" 370 10909 10923 "htmlMath.ml" 370 10909 10925
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"htmlMath.ml" 370 10909 10926 "htmlMath.ml" 370 10909 10929
type(
  string
)
ident(
  int_ref sub "htmlMath.ml" 369 10840 10846 "htmlMath.ml" 369 10840 10849
)
"htmlMath.ml" 370 10909 10930 "htmlMath.ml" 370 10909 10931
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"htmlMath.ml" 370 10909 10932 "htmlMath.ml" 370 10909 10934
type(
  string
)
"htmlMath.ml" 370 10909 10926 "htmlMath.ml" 370 10909 10934
type(
  bool
)
"htmlMath.ml" 370 10909 10914 "htmlMath.ml" 370 10909 10934
type(
  bool
)
"htmlMath.ml" 371 10940 10944 "htmlMath.ml" 371 10940 10948
type(
  unit -> unit
)
ident(
  int_ref what "htmlMath.ml" 367 10725 10751 "htmlMath.ml" 367 10725 10755
)
"htmlMath.ml" 371 10940 10949 "htmlMath.ml" 371 10940 10951
type(
  unit
)
"htmlMath.ml" 371 10940 10944 "htmlMath.ml" 371 10940 10951
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 373 10965 10969 "htmlMath.ml" 373 10965 10987
type(
  unit -> unit
)
ident(
  int_ref force_item_display "htmlMath.ml" 256 8060 8064 "htmlMath.ml" 256 8060 8082
)
"htmlMath.ml" 373 10965 10988 "htmlMath.ml" 373 10965 10990
type(
  unit
)
"htmlMath.ml" 373 10965 10969 "htmlMath.ml" 373 10965 10990
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 374 10993 10997 "htmlMath.ml" 374 10993 11010
type(
  bool -> bool -> unit
)
ident(
  int_ref open_vdisplay "htmlMath.ml" 280 8596 8600 "htmlMath.ml" 280 8596 8613
)
"htmlMath.ml" 374 10993 11011 "htmlMath.ml" 374 10993 11016
type(
  bool
)
"htmlMath.ml" 374 10993 11017 "htmlMath.ml" 374 10993 11024
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 367 10725 10764 "htmlMath.ml" 367 10725 10771
)
"htmlMath.ml" 374 10993 10997 "htmlMath.ml" 374 10993 11024
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 375 11027 11031 "htmlMath.ml" 375 11027 11048
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 375 11027 11049 "htmlMath.ml" 375 11027 11051
type(
  string
)
"htmlMath.ml" 375 11027 11052 "htmlMath.ml" 375 11027 11081
type(
  string
)
"htmlMath.ml" 375 11027 11031 "htmlMath.ml" 375 11027 11081
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 376 11084 11088 "htmlMath.ml" 376 11084 11091
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 376 11084 11092 "htmlMath.ml" 376 11084 11095
type(
  string
)
ident(
  int_ref sup "htmlMath.ml" 368 10774 10780 "htmlMath.ml" 368 10774 10783
)
"htmlMath.ml" 376 11084 11088 "htmlMath.ml" 376 11084 11095
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 377 11098 11102 "htmlMath.ml" 377 11098 11120
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 377 11098 11121 "htmlMath.ml" 377 11098 11123
type(
  unit
)
"htmlMath.ml" 377 11098 11102 "htmlMath.ml" 377 11098 11123
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 378 11126 11130 "htmlMath.ml" 378 11126 11147
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 378 11126 11148 "htmlMath.ml" 378 11126 11150
type(
  string
)
"htmlMath.ml" 378 11126 11151 "htmlMath.ml" 378 11126 11180
type(
  string
)
"htmlMath.ml" 378 11126 11130 "htmlMath.ml" 378 11126 11180
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 379 11183 11187 "htmlMath.ml" 379 11183 11191
type(
  unit -> unit
)
ident(
  int_ref what "htmlMath.ml" 367 10725 10751 "htmlMath.ml" 367 10725 10755
)
"htmlMath.ml" 379 11183 11192 "htmlMath.ml" 379 11183 11194
type(
  unit
)
"htmlMath.ml" 379 11183 11187 "htmlMath.ml" 379 11183 11194
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 380 11197 11201 "htmlMath.ml" 380 11197 11219
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 380 11197 11220 "htmlMath.ml" 380 11197 11222
type(
  unit
)
"htmlMath.ml" 380 11197 11201 "htmlMath.ml" 380 11197 11222
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 381 11225 11229 "htmlMath.ml" 381 11225 11246
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 381 11225 11247 "htmlMath.ml" 381 11225 11249
type(
  string
)
"htmlMath.ml" 381 11225 11250 "htmlMath.ml" 381 11225 11279
type(
  string
)
"htmlMath.ml" 381 11225 11229 "htmlMath.ml" 381 11225 11279
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 382 11282 11286 "htmlMath.ml" 382 11282 11289
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 382 11282 11290 "htmlMath.ml" 382 11282 11293
type(
  string
)
ident(
  int_ref sub "htmlMath.ml" 369 10840 10846 "htmlMath.ml" 369 10840 10849
)
"htmlMath.ml" 382 11282 11286 "htmlMath.ml" 382 11282 11293
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 383 11296 11300 "htmlMath.ml" 383 11296 11318
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 383 11296 11319 "htmlMath.ml" 383 11296 11321
type(
  unit
)
"htmlMath.ml" 383 11296 11300 "htmlMath.ml" 383 11296 11321
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 384 11324 11328 "htmlMath.ml" 384 11324 11342
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay "htmlMath.ml" 286 8815 8819 "htmlMath.ml" 286 8815 8833
)
"htmlMath.ml" 384 11324 11343 "htmlMath.ml" 384 11324 11345
type(
  unit
)
"htmlMath.ml" 384 11324 11328 "htmlMath.ml" 384 11324 11345
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 385 11348 11352 "htmlMath.ml" 385 11348 11370
type(
  unit -> unit
)
ident(
  int_ref force_item_display "htmlMath.ml" 256 8060 8064 "htmlMath.ml" 256 8060 8082
)
"htmlMath.ml" 385 11348 11371 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 385 11348 11352 "htmlMath.ml" 385 11348 11373
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 384 11324 11328 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 383 11296 11300 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 382 11282 11286 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 381 11225 11229 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 380 11197 11201 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 379 11183 11187 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 378 11126 11130 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 377 11098 11102 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 376 11084 11088 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 375 11027 11031 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 374 10993 10997 "htmlMath.ml" 385 11348 11373
type(
  unit
)
"htmlMath.ml" 372 10952 10959 "htmlMath.ml" 386 11374 11379
type(
  unit
)
"htmlMath.ml" 370 10909 10911 "htmlMath.ml" 386 11374 11379
type(
  unit
)
"htmlMath.ml" 368 10774 10776 "htmlMath.ml" 386 11374 11379
type(
  unit
)
"htmlMath.ml" 388 11381 11385 "htmlMath.ml" 388 11381 11396
type(
  bool ->
  int ->
  (string Lexstate.arg -> 'a) ->
  (unit -> 'b) -> string Lexstate.arg -> string Lexstate.arg -> bool -> unit
)
ident(
  def int_sup_sub "htmlMath.ml" 414 12146 12146 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 388 11381 11397 "htmlMath.ml" 388 11381 11406
type(
  bool
)
ident(
  def something "htmlMath.ml" 388 11381 11407 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 388 11381 11407 "htmlMath.ml" 388 11381 11412
type(
  int
)
ident(
  def vsize "htmlMath.ml" 388 11381 11413 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 388 11381 11413 "htmlMath.ml" 388 11381 11420
type(
  string Lexstate.arg -> 'a
)
ident(
  def scanner "htmlMath.ml" 388 11381 11421 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 388 11381 11421 "htmlMath.ml" 388 11381 11425
type(
  unit -> 'b
)
ident(
  def what "htmlMath.ml" 388 11381 11426 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 388 11381 11426 "htmlMath.ml" 388 11381 11429
type(
  string Lexstate.arg
)
ident(
  def sup "htmlMath.ml" 388 11381 11430 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 388 11381 11430 "htmlMath.ml" 388 11381 11433
type(
  string Lexstate.arg
)
ident(
  def sub "htmlMath.ml" 388 11381 11434 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 388 11381 11434 "htmlMath.ml" 388 11381 11441
type(
  bool
)
ident(
  def display "htmlMath.ml" 389 11444 11446 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 389 11444 11450 "htmlMath.ml" 389 11444 11453
type(
  string
)
ident(
  def sup "htmlMath.ml" 391 11579 11581 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 389 11444 11456 "htmlMath.ml" 389 11444 11465
type(
  (unit -> unit) -> string
)
ident(
  ext_ref HtmlCommon.to_string
)
"htmlMath.ml" 389 11444 11471 "htmlMath.ml" 389 11444 11473
type(
  unit
)
"htmlMath.ml" 389 11444 11477 "htmlMath.ml" 389 11444 11488
type(
  bool -> (string Lexstate.arg -> 'a) -> string Lexstate.arg -> unit
)
ident(
  int_ref put_sup_sub "htmlMath.ml" 309 9277 9281 "htmlMath.ml" 309 9277 9292
)
"htmlMath.ml" 389 11444 11489 "htmlMath.ml" 389 11444 11496
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 388 11381 11434 "htmlMath.ml" 388 11381 11441
)
"htmlMath.ml" 389 11444 11497 "htmlMath.ml" 389 11444 11504
type(
  string Lexstate.arg -> 'a
)
ident(
  int_ref scanner "htmlMath.ml" 388 11381 11413 "htmlMath.ml" 388 11381 11420
)
"htmlMath.ml" 389 11444 11505 "htmlMath.ml" 389 11444 11508
type(
  string Lexstate.arg
)
ident(
  int_ref sup "htmlMath.ml" 388 11381 11426 "htmlMath.ml" 388 11381 11429
)
"htmlMath.ml" 389 11444 11477 "htmlMath.ml" 389 11444 11508
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 389 11444 11466 "htmlMath.ml" 389 11444 11509
type(
  unit -> unit
)
"htmlMath.ml" 389 11444 11456 "htmlMath.ml" 389 11444 11509
call(
  stack
)
type(
  string
)
"htmlMath.ml" 390 11510 11516 "htmlMath.ml" 390 11510 11519
type(
  string
)
ident(
  def sub "htmlMath.ml" 391 11579 11581 "htmlMath.ml" 411 12138 12143
)
"htmlMath.ml" 390 11510 11522 "htmlMath.ml" 390 11510 11531
type(
  (unit -> unit) -> string
)
ident(
  ext_ref HtmlCommon.to_string
)
"htmlMath.ml" 390 11510 11537 "htmlMath.ml" 390 11510 11539
type(
  unit
)
"htmlMath.ml" 390 11510 11543 "htmlMath.ml" 390 11510 11554
type(
  bool -> (string Lexstate.arg -> 'a) -> string Lexstate.arg -> unit
)
ident(
  int_ref put_sup_sub "htmlMath.ml" 309 9277 9281 "htmlMath.ml" 309 9277 9292
)
"htmlMath.ml" 390 11510 11555 "htmlMath.ml" 390 11510 11562
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 388 11381 11434 "htmlMath.ml" 388 11381 11441
)
"htmlMath.ml" 390 11510 11563 "htmlMath.ml" 390 11510 11570
type(
  string Lexstate.arg -> 'a
)
ident(
  int_ref scanner "htmlMath.ml" 388 11381 11413 "htmlMath.ml" 388 11381 11420
)
"htmlMath.ml" 390 11510 11571 "htmlMath.ml" 390 11510 11574
type(
  string Lexstate.arg
)
ident(
  int_ref sub "htmlMath.ml" 388 11381 11430 "htmlMath.ml" 388 11381 11433
)
"htmlMath.ml" 390 11510 11543 "htmlMath.ml" 390 11510 11574
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 390 11510 11532 "htmlMath.ml" 390 11510 11575
type(
  unit -> unit
)
"htmlMath.ml" 390 11510 11522 "htmlMath.ml" 390 11510 11575
call(
  stack
)
type(
  string
)
"htmlMath.ml" 391 11579 11584 "htmlMath.ml" 391 11579 11593
type(
  bool
)
ident(
  int_ref something "htmlMath.ml" 388 11381 11397 "htmlMath.ml" 388 11381 11406
)
"htmlMath.ml" 392 11605 11609 "htmlMath.ml" 392 11605 11627
type(
  unit -> unit
)
ident(
  int_ref force_item_display "htmlMath.ml" 256 8060 8064 "htmlMath.ml" 256 8060 8082
)
"htmlMath.ml" 392 11605 11628 "htmlMath.ml" 392 11605 11630
type(
  unit
)
"htmlMath.ml" 392 11605 11609 "htmlMath.ml" 392 11605 11630
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 393 11633 11637 "htmlMath.ml" 393 11633 11641
type(
  unit -> 'b
)
ident(
  int_ref what "htmlMath.ml" 388 11381 11421 "htmlMath.ml" 388 11381 11425
)
"htmlMath.ml" 393 11633 11642 "htmlMath.ml" 393 11633 11644
type(
  unit
)
"htmlMath.ml" 393 11633 11637 "htmlMath.ml" 393 11633 11644
call(
  stack
)
type(
  'b
)
"htmlMath.ml" 394 11647 11651 "htmlMath.ml" 394 11647 11669
type(
  unit -> unit
)
ident(
  int_ref force_item_display "htmlMath.ml" 256 8060 8064 "htmlMath.ml" 256 8060 8082
)
"htmlMath.ml" 394 11647 11670 "htmlMath.ml" 394 11647 11672
type(
  unit
)
"htmlMath.ml" 394 11647 11651 "htmlMath.ml" 394 11647 11672
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 393 11633 11637 "htmlMath.ml" 394 11647 11672
type(
  unit
)
"htmlMath.ml" 391 11579 11599 "htmlMath.ml" 395 11673 11678
type(
  unit
)
"htmlMath.ml" 391 11579 11581 "htmlMath.ml" 395 11673 11678
type(
  unit
)
"htmlMath.ml" 396 11681 11686 "htmlMath.ml" 396 11681 11689
type(
  string
)
ident(
  int_ref sup "htmlMath.ml" 389 11444 11450 "htmlMath.ml" 389 11444 11453
)
"htmlMath.ml" 396 11681 11690 "htmlMath.ml" 396 11681 11692
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"htmlMath.ml" 396 11681 11693 "htmlMath.ml" 396 11681 11695
type(
  string
)
"htmlMath.ml" 396 11681 11686 "htmlMath.ml" 396 11681 11695
type(
  bool
)
"htmlMath.ml" 396 11681 11696 "htmlMath.ml" 396 11681 11698
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"htmlMath.ml" 396 11681 11699 "htmlMath.ml" 396 11681 11702
type(
  string
)
ident(
  int_ref sub "htmlMath.ml" 390 11510 11516 "htmlMath.ml" 390 11510 11519
)
"htmlMath.ml" 396 11681 11703 "htmlMath.ml" 396 11681 11705
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"htmlMath.ml" 396 11681 11706 "htmlMath.ml" 396 11681 11708
type(
  string
)
"htmlMath.ml" 396 11681 11699 "htmlMath.ml" 396 11681 11708
type(
  bool
)
"htmlMath.ml" 396 11681 11686 "htmlMath.ml" 396 11681 11708
type(
  bool
)
"htmlMath.ml" 397 11720 11724 "htmlMath.ml" 397 11720 11737
type(
  bool -> bool -> unit
)
ident(
  int_ref open_vdisplay "htmlMath.ml" 280 8596 8600 "htmlMath.ml" 280 8596 8613
)
"htmlMath.ml" 397 11720 11738 "htmlMath.ml" 397 11720 11743
type(
  bool
)
"htmlMath.ml" 397 11720 11744 "htmlMath.ml" 397 11720 11751
type(
  bool
)
ident(
  int_ref display "htmlMath.ml" 388 11381 11434 "htmlMath.ml" 388 11381 11441
)
"htmlMath.ml" 397 11720 11724 "htmlMath.ml" 397 11720 11751
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 398 11754 11758 "htmlMath.ml" 398 11754 11775
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 398 11754 11776 "htmlMath.ml" 398 11754 11778
type(
  string
)
"htmlMath.ml" 398 11754 11779 "htmlMath.ml" 398 11754 11806
type(
  string
)
"htmlMath.ml" 398 11754 11758 "htmlMath.ml" 398 11754 11806
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 399 11809 11813 "htmlMath.ml" 399 11809 11816
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 399 11809 11817 "htmlMath.ml" 399 11809 11820
type(
  string
)
ident(
  int_ref sup "htmlMath.ml" 389 11444 11450 "htmlMath.ml" 389 11444 11453
)
"htmlMath.ml" 399 11809 11813 "htmlMath.ml" 399 11809 11820
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 400 11823 11827 "htmlMath.ml" 400 11823 11845
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 400 11823 11846 "htmlMath.ml" 400 11823 11848
type(
  unit
)
"htmlMath.ml" 400 11823 11827 "htmlMath.ml" 400 11823 11848
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 401 11851 11855 "htmlMath.ml" 401 11851 11872
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 401 11851 11873 "htmlMath.ml" 401 11851 11875
type(
  string
)
"htmlMath.ml" 401 11851 11876 "htmlMath.ml" 401 11851 11903
type(
  string
)
"htmlMath.ml" 401 11851 11855 "htmlMath.ml" 401 11851 11903
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 402 11906 11919 "htmlMath.ml" 402 11906 11920
type(
  int
)
"htmlMath.ml" 402 11906 11924 "htmlMath.ml" 402 11906 11929
type(
  int
)
ident(
  int_ref vsize "htmlMath.ml" 388 11381 11407 "htmlMath.ml" 388 11381 11412
)
"htmlMath.ml" 403 11933 11939 "htmlMath.ml" 403 11933 11948
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.skip_line
)
"htmlMath.ml" 403 11933 11949 "htmlMath.ml" 403 11933 11951
type(
  unit
)
"htmlMath.ml" 403 11933 11939 "htmlMath.ml" 403 11933 11951
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 402 11906 11910 "htmlMath.ml" 404 11952 11960
type(
  unit
)
"htmlMath.ml" 405 11963 11967 "htmlMath.ml" 405 11963 11985
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 405 11963 11986 "htmlMath.ml" 405 11963 11988
type(
  unit
)
"htmlMath.ml" 405 11963 11967 "htmlMath.ml" 405 11963 11988
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 406 11991 11995 "htmlMath.ml" 406 11991 12012
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 406 11991 12013 "htmlMath.ml" 406 11991 12015
type(
  string
)
"htmlMath.ml" 406 11991 12016 "htmlMath.ml" 406 11991 12043
type(
  string
)
"htmlMath.ml" 406 11991 11995 "htmlMath.ml" 406 11991 12043
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 407 12046 12050 "htmlMath.ml" 407 12046 12053
type(
  string -> unit
)
ident(
  int_ref put "htmlMath.ml" 55 1826 1830 "htmlMath.ml" 55 1826 1833
)
"htmlMath.ml" 407 12046 12054 "htmlMath.ml" 407 12046 12057
type(
  string
)
ident(
  int_ref sub "htmlMath.ml" 390 11510 11516 "htmlMath.ml" 390 11510 11519
)
"htmlMath.ml" 407 12046 12050 "htmlMath.ml" 407 12046 12057
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 408 12060 12064 "htmlMath.ml" 408 12060 12082
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 408 12060 12083 "htmlMath.ml" 408 12060 12085
type(
  unit
)
"htmlMath.ml" 408 12060 12064 "htmlMath.ml" 408 12060 12085
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 409 12088 12092 "htmlMath.ml" 409 12088 12106
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay "htmlMath.ml" 286 8815 8819 "htmlMath.ml" 286 8815 8833
)
"htmlMath.ml" 409 12088 12107 "htmlMath.ml" 409 12088 12109
type(
  unit
)
"htmlMath.ml" 409 12088 12092 "htmlMath.ml" 409 12088 12109
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 410 12112 12116 "htmlMath.ml" 410 12112 12134
type(
  unit -> unit
)
ident(
  int_ref force_item_display "htmlMath.ml" 256 8060 8064 "htmlMath.ml" 256 8060 8082
)
"htmlMath.ml" 410 12112 12135 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 410 12112 12116 "htmlMath.ml" 410 12112 12137
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 409 12088 12092 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 408 12060 12064 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 407 12046 12050 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 406 11991 11995 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 405 11963 11967 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 402 11906 11910 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 401 11851 11855 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 400 11823 11827 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 399 11809 11813 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 398 11754 11758 "htmlMath.ml" 410 12112 12137
type(
  unit
)
"htmlMath.ml" 396 11681 11714 "htmlMath.ml" 411 12138 12143
type(
  unit
)
"htmlMath.ml" 396 11681 11683 "htmlMath.ml" 411 12138 12143
type(
  unit
)
"htmlMath.ml" 391 11579 11581 "htmlMath.ml" 411 12138 12143
type(
  unit
)
"htmlMath.ml" 389 11444 11446 "htmlMath.ml" 411 12138 12143
type(
  unit
)
"htmlMath.ml" 414 12146 12150 "htmlMath.ml" 414 12146 12165
type(
  (bool -> unit) -> Element.text list
)
ident(
  def insert_vdisplay "htmlMath.ml" 452 13420 13420 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 414 12146 12166 "htmlMath.ml" 414 12146 12174
type(
  bool -> unit
)
ident(
  def open_fun "htmlMath.ml" 415 12177 12179 "htmlMath.ml" 449 13354 13417
)
"htmlMath.ml" 415 12177 12182 "htmlMath.ml" 415 12177 12183
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 415 12177 12183 "htmlMath.ml" 415 12177 12190
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 415 12177 12182 "htmlMath.ml" 415 12177 12190
type(
  int
)
"htmlMath.ml" 415 12177 12191 "htmlMath.ml" 415 12177 12192
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 415 12177 12193 "htmlMath.ml" 415 12177 12194
type(
  int
)
"htmlMath.ml" 415 12177 12182 "htmlMath.ml" 415 12177 12194
type(
  bool
)
"htmlMath.ml" 416 12206 12210 "htmlMath.ml" 416 12206 12221
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.prerr_flags
)
"htmlMath.ml" 416 12206 12222 "htmlMath.ml" 416 12206 12242
type(
  string
)
"htmlMath.ml" 415 12177 12200 "htmlMath.ml" 417 12245 12250
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 415 12177 12179 "htmlMath.ml" 417 12245 12250
type(
  unit
)
"htmlMath.ml" 419 12259 12267 "htmlMath.ml" 419 12259 12271
type(
  Element.text list
)
ident(
  def mods "htmlMath.ml" 420 12321 12325 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 419 12259 12274 "htmlMath.ml" 419 12259 12284
type(
  Element.text list -> HtmlCommon.t_env list -> Element.text list
)
ident(
  ext_ref HtmlCommon.to_pending
)
"htmlMath.ml" 419 12259 12285 "htmlMath.ml" 419 12259 12286
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 419 12259 12286 "htmlMath.ml" 419 12259 12293
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 419 12259 12285 "htmlMath.ml" 419 12259 12293
type(
  HtmlCommon.status
)
"htmlMath.ml" 419 12259 12285 "htmlMath.ml" 419 12259 12301
type(
  Element.text list
)
"htmlMath.ml" 419 12259 12302 "htmlMath.ml" 419 12259 12303
type(
  HtmlCommon.status ref -> HtmlCommon.status
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 419 12259 12303 "htmlMath.ml" 419 12259 12310
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 419 12259 12302 "htmlMath.ml" 419 12259 12310
type(
  HtmlCommon.status
)
"htmlMath.ml" 419 12259 12302 "htmlMath.ml" 419 12259 12317
type(
  HtmlCommon.t_env list
)
"htmlMath.ml" 419 12259 12274 "htmlMath.ml" 419 12259 12317
call(
  stack
)
type(
  Element.text list
)
"htmlMath.ml" 420 12321 12329 "htmlMath.ml" 420 12321 12331
type(
  HtmlCommon.block
)
ident(
  def bs "htmlMath.ml" 421 12366 12370 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 420 12321 12332 "htmlMath.ml" 420 12321 12337
type(
  string
)
ident(
  def bargs "htmlMath.ml" 421 12366 12370 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 420 12321 12338 "htmlMath.ml" 420 12321 12342
type(
  HtmlCommon.status
)
ident(
  def bout "htmlMath.ml" 421 12366 12370 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 420 12321 12329 "htmlMath.ml" 420 12321 12342
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 420 12321 12345 "htmlMath.ml" 420 12321 12352
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status
)
ident(
  ext_ref HtmlCommon.pop_out
)
"htmlMath.ml" 420 12321 12353 "htmlMath.ml" 420 12321 12362
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 420 12321 12345 "htmlMath.ml" 420 12321 12362
call(
  stack
)
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 421 12366 12373 "htmlMath.ml" 421 12366 12375
type(
  HtmlCommon.block
)
ident(
  int_ref bs "htmlMath.ml" 420 12321 12329 "htmlMath.ml" 420 12321 12331
)
"htmlMath.ml" 421 12366 12376 "htmlMath.ml" 421 12366 12378
type(
  HtmlCommon.block -> HtmlCommon.block -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"htmlMath.ml" 421 12366 12379 "htmlMath.ml" 421 12366 12384
type(
  HtmlCommon.block
)
"htmlMath.ml" 421 12366 12373 "htmlMath.ml" 421 12366 12384
type(
  bool
)
"htmlMath.ml" 422 12390 12396 "htmlMath.ml" 422 12390 12405
type(
  string -> HtmlCommon.block -> HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.failclose
)
"htmlMath.ml" 422 12390 12406 "htmlMath.ml" 422 12390 12423
type(
  string
)
"htmlMath.ml" 422 12390 12424 "htmlMath.ml" 422 12390 12426
type(
  HtmlCommon.block
)
ident(
  int_ref bs "htmlMath.ml" 420 12321 12329 "htmlMath.ml" 420 12321 12331
)
"htmlMath.ml" 422 12390 12427 "htmlMath.ml" 422 12390 12432
type(
  HtmlCommon.block
)
"htmlMath.ml" 422 12390 12396 "htmlMath.ml" 422 12390 12432
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 421 12366 12370 "htmlMath.ml" 422 12390 12432
type(
  unit
)
"htmlMath.ml" 423 12435 12443 "htmlMath.ml" 423 12435 12445
type(
  HtmlCommon.block
)
ident(
  def ps "htmlMath.ml" 424 12480 12484 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 423 12435 12446 "htmlMath.ml" 423 12435 12451
type(
  string
)
ident(
  def pargs "htmlMath.ml" 424 12480 12484 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 423 12435 12452 "htmlMath.ml" 423 12435 12456
type(
  HtmlCommon.status
)
ident(
  def pout "htmlMath.ml" 424 12480 12484 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 423 12435 12443 "htmlMath.ml" 423 12435 12456
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 423 12435 12459 "htmlMath.ml" 423 12435 12466
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status
)
ident(
  ext_ref HtmlCommon.pop_out
)
"htmlMath.ml" 423 12435 12467 "htmlMath.ml" 423 12435 12476
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 423 12435 12459 "htmlMath.ml" 423 12435 12476
call(
  stack
)
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 424 12480 12487 "htmlMath.ml" 424 12480 12489
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 423 12435 12443 "htmlMath.ml" 423 12435 12445
)
"htmlMath.ml" 424 12480 12490 "htmlMath.ml" 424 12480 12492
type(
  HtmlCommon.block -> HtmlCommon.block -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"htmlMath.ml" 424 12480 12493 "htmlMath.ml" 424 12480 12495
type(
  HtmlCommon.block
)
"htmlMath.ml" 424 12480 12487 "htmlMath.ml" 424 12480 12495
type(
  bool
)
"htmlMath.ml" 425 12501 12507 "htmlMath.ml" 425 12501 12516
type(
  string -> HtmlCommon.block -> HtmlCommon.block -> unit
)
ident(
  ext_ref HtmlCommon.failclose
)
"htmlMath.ml" 425 12501 12517 "htmlMath.ml" 425 12501 12534
type(
  string
)
"htmlMath.ml" 425 12501 12535 "htmlMath.ml" 425 12501 12537
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 423 12435 12443 "htmlMath.ml" 423 12435 12445
)
"htmlMath.ml" 425 12501 12538 "htmlMath.ml" 425 12501 12540
type(
  HtmlCommon.block
)
"htmlMath.ml" 425 12501 12507 "htmlMath.ml" 425 12501 12540
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 424 12480 12484 "htmlMath.ml" 425 12501 12540
type(
  unit
)
"htmlMath.ml" 426 12543 12551 "htmlMath.ml" 426 12543 12554
type(
  HtmlCommon.block
)
ident(
  def pps "htmlMath.ml" 427 12592 12596 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 426 12543 12555 "htmlMath.ml" 426 12543 12561
type(
  string
)
ident(
  def ppargs "htmlMath.ml" 427 12592 12596 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 426 12543 12562 "htmlMath.ml" 426 12543 12567
type(
  HtmlCommon.status
)
ident(
  def ppout "htmlMath.ml" 427 12592 12596 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 426 12543 12551 "htmlMath.ml" 426 12543 12567
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 426 12543 12570 "htmlMath.ml" 426 12543 12577
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status
)
ident(
  ext_ref HtmlCommon.pop_out
)
"htmlMath.ml" 426 12543 12578 "htmlMath.ml" 426 12543 12587
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 426 12543 12570 "htmlMath.ml" 426 12543 12587
call(
  stack
)
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 427 12592 12600 "htmlMath.ml" 427 12592 12606
type(
  bool
)
ident(
  def center "htmlMath.ml" 431 12721 12725 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 428 12609 12621 "htmlMath.ml" 428 12609 12624
type(
  HtmlCommon.block
)
ident(
  int_ref pps "htmlMath.ml" 426 12543 12551 "htmlMath.ml" 426 12543 12554
)
"htmlMath.ml" 429 12630 12648 "htmlMath.ml" 429 12630 12649
type(
  bool
)
ident(
  def b "htmlMath.ml" 429 12630 12653 "htmlMath.ml" 429 12630 12654
)
"htmlMath.ml" 429 12630 12640 "htmlMath.ml" 429 12630 12649
type(
  HtmlCommon.block
)
"htmlMath.ml" 429 12630 12653 "htmlMath.ml" 429 12630 12654
type(
  bool
)
ident(
  int_ref b "htmlMath.ml" 429 12630 12648 "htmlMath.ml" 429 12630 12649
)
"htmlMath.ml" 430 12655 12665 "htmlMath.ml" 430 12655 12666
type(
  HtmlCommon.block
)
"htmlMath.ml" 430 12655 12670 "htmlMath.ml" 430 12655 12679
type(
  string -> HtmlCommon.block -> HtmlCommon.block -> bool
)
ident(
  ext_ref HtmlCommon.failclose
)
"htmlMath.ml" 430 12655 12680 "htmlMath.ml" 430 12655 12697
type(
  string
)
"htmlMath.ml" 430 12655 12698 "htmlMath.ml" 430 12655 12701
type(
  HtmlCommon.block
)
ident(
  int_ref pps "htmlMath.ml" 426 12543 12551 "htmlMath.ml" 426 12543 12554
)
"htmlMath.ml" 430 12655 12711 "htmlMath.ml" 430 12655 12716
type(
  bool
)
"htmlMath.ml" 430 12655 12702 "htmlMath.ml" 430 12655 12717
type(
  HtmlCommon.block
)
"htmlMath.ml" 430 12655 12670 "htmlMath.ml" 430 12655 12717
call(
  stack
)
type(
  bool
)
"htmlMath.ml" 428 12609 12615 "htmlMath.ml" 430 12655 12717
type(
  bool
)
"htmlMath.ml" 431 12721 12729 "htmlMath.ml" 431 12721 12736
type(
  HtmlCommon.status
)
ident(
  def new_out "htmlMath.ml" 432 12778 12782 "htmlMath.ml" 447 13325 13333
)
"htmlMath.ml" 431 12721 12739 "htmlMath.ml" 431 12721 12765
type(
  bool -> Element.text list -> HtmlCommon.status
)
ident(
  ext_ref HtmlCommon.create_status_from_scratch
)
"htmlMath.ml" 431 12721 12766 "htmlMath.ml" 431 12721 12771
type(
  bool
)
"htmlMath.ml" 431 12721 12772 "htmlMath.ml" 431 12721 12774
type(
  Element.text list
)
"htmlMath.ml" 431 12721 12739 "htmlMath.ml" 431 12721 12774
call(
  stack
)
type(
  HtmlCommon.status
)
"htmlMath.ml" 432 12778 12782 "htmlMath.ml" 432 12778 12790
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status -> unit
)
ident(
  ext_ref HtmlCommon.push_out
)
"htmlMath.ml" 432 12778 12791 "htmlMath.ml" 432 12778 12800
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 432 12778 12810 "htmlMath.ml" 432 12778 12815
type(
  bool
)
"htmlMath.ml" 432 12778 12802 "htmlMath.ml" 432 12778 12815
type(
  HtmlCommon.block
)
"htmlMath.ml" 432 12778 12816 "htmlMath.ml" 432 12778 12822
type(
  string
)
ident(
  int_ref ppargs "htmlMath.ml" 426 12543 12555 "htmlMath.ml" 426 12543 12561
)
"htmlMath.ml" 432 12778 12823 "htmlMath.ml" 432 12778 12830
type(
  HtmlCommon.status
)
ident(
  int_ref new_out "htmlMath.ml" 431 12721 12729 "htmlMath.ml" 431 12721 12736
)
"htmlMath.ml" 432 12778 12801 "htmlMath.ml" 432 12778 12831
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 432 12778 12782 "htmlMath.ml" 432 12778 12831
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 433 12834 12838 "htmlMath.ml" 433 12834 12846
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status -> unit
)
ident(
  ext_ref HtmlCommon.push_out
)
"htmlMath.ml" 433 12834 12847 "htmlMath.ml" 433 12834 12856
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 433 12834 12858 "htmlMath.ml" 433 12834 12860
type(
  HtmlCommon.block
)
ident(
  int_ref ps "htmlMath.ml" 423 12435 12443 "htmlMath.ml" 423 12435 12445
)
"htmlMath.ml" 433 12834 12861 "htmlMath.ml" 433 12834 12866
type(
  string
)
ident(
  int_ref pargs "htmlMath.ml" 423 12435 12446 "htmlMath.ml" 423 12435 12451
)
"htmlMath.ml" 433 12834 12867 "htmlMath.ml" 433 12834 12871
type(
  HtmlCommon.status
)
ident(
  int_ref pout "htmlMath.ml" 423 12435 12452 "htmlMath.ml" 423 12435 12456
)
"htmlMath.ml" 433 12834 12857 "htmlMath.ml" 433 12834 12872
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 433 12834 12838 "htmlMath.ml" 433 12834 12872
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 434 12875 12879 "htmlMath.ml" 434 12875 12887
type(
  HtmlCommon.stack_item MyStack.t ->
  HtmlCommon.block * string * HtmlCommon.status -> unit
)
ident(
  ext_ref HtmlCommon.push_out
)
"htmlMath.ml" 434 12875 12888 "htmlMath.ml" 434 12875 12897
type(
  HtmlCommon.stack_item MyStack.t
)
ident(
  ext_ref HtmlCommon.out_stack
)
"htmlMath.ml" 434 12875 12899 "htmlMath.ml" 434 12875 12901
type(
  HtmlCommon.block
)
ident(
  int_ref bs "htmlMath.ml" 420 12321 12329 "htmlMath.ml" 420 12321 12331
)
"htmlMath.ml" 434 12875 12902 "htmlMath.ml" 434 12875 12907
type(
  string
)
ident(
  int_ref bargs "htmlMath.ml" 420 12321 12332 "htmlMath.ml" 420 12321 12337
)
"htmlMath.ml" 434 12875 12908 "htmlMath.ml" 434 12875 12912
type(
  HtmlCommon.status
)
ident(
  int_ref bout "htmlMath.ml" 420 12321 12338 "htmlMath.ml" 420 12321 12342
)
"htmlMath.ml" 434 12875 12898 "htmlMath.ml" 434 12875 12913
type(
  HtmlCommon.block * string * HtmlCommon.status
)
"htmlMath.ml" 434 12875 12879 "htmlMath.ml" 434 12875 12913
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 435 12916 12920 "htmlMath.ml" 435 12916 12933
type(
  bool -> unit
)
ident(
  int_ref close_display "htmlMath.ml" 146 4388 4392 "htmlMath.ml" 146 4388 4405
)
"htmlMath.ml" 435 12916 12934 "htmlMath.ml" 435 12916 12939
type(
  bool
)
"htmlMath.ml" 435 12916 12920 "htmlMath.ml" 435 12916 12939
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 436 12942 12946 "htmlMath.ml" 436 12942 12953
type(
  HtmlCommon.status ref
)
ident(
  ext_ref HtmlCommon.cur_out
)
"htmlMath.ml" 436 12942 12954 "htmlMath.ml" 436 12942 12956
type(
  HtmlCommon.status ref -> HtmlCommon.status -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"htmlMath.ml" 436 12942 12957 "htmlMath.ml" 436 12942 12962
type(
  HtmlCommon.status
)
ident(
  int_ref ppout "htmlMath.ml" 426 12543 12562 "htmlMath.ml" 426 12543 12567
)
"htmlMath.ml" 436 12942 12946 "htmlMath.ml" 436 12942 12962
type(
  unit
)
"htmlMath.ml" 437 12965 12973 "htmlMath.ml" 437 12965 12975
type(
  unit
)
"htmlMath.ml" 437 12965 12978 "htmlMath.ml" 437 12965 12986
type(
  bool -> unit
)
ident(
  int_ref open_fun "htmlMath.ml" 414 12146 12166 "htmlMath.ml" 414 12146 12174
)
"htmlMath.ml" 437 12965 12987 "htmlMath.ml" 437 12965 12993
type(
  bool
)
ident(
  int_ref center "htmlMath.ml" 427 12592 12600 "htmlMath.ml" 427 12592 12606
)
"htmlMath.ml" 437 12965 12978 "htmlMath.ml" 437 12965 12993
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 438 13029 13033 "htmlMath.ml" 438 13029 13039
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.do_put
)
"htmlMath.ml" 438 13029 13041 "htmlMath.ml" 438 13029 13054
type(
  Out.t -> string
)
ident(
  ext_ref Out.to_string
)
"htmlMath.ml" 438 13029 13055 "htmlMath.ml" 438 13029 13062
type(
  HtmlCommon.status
)
ident(
  int_ref new_out "htmlMath.ml" 431 12721 12729 "htmlMath.ml" 431 12721 12736
)
"htmlMath.ml" 438 13029 13055 "htmlMath.ml" 438 13029 13066
type(
  Out.t
)
"htmlMath.ml" 438 13029 13040 "htmlMath.ml" 438 13029 13067
call(
  stack
)
type(
  string
)
"htmlMath.ml" 438 13029 13033 "htmlMath.ml" 438 13029 13067
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 439 13070 13074 "htmlMath.ml" 439 13070 13079
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 439 13070 13089 "htmlMath.ml" 439 13070 13094
type(
  bool
)
"htmlMath.ml" 439 13070 13074 "htmlMath.ml" 439 13070 13094
type(
  unit
)
"htmlMath.ml" 439 13070 13097 "htmlMath.ml" 439 13070 13102
type(
  HtmlCommon.flags_t
)
ident(
  ext_ref HtmlCommon.flags
)
"htmlMath.ml" 439 13070 13112 "htmlMath.ml" 439 13070 13117
type(
  bool
)
"htmlMath.ml" 439 13070 13097 "htmlMath.ml" 439 13070 13117
type(
  unit
)
"htmlMath.ml" 440 13120 13127 "htmlMath.ml" 440 13120 13128
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 440 13120 13128 "htmlMath.ml" 440 13120 13135
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 440 13120 13127 "htmlMath.ml" 440 13120 13135
type(
  int
)
"htmlMath.ml" 440 13120 13136 "htmlMath.ml" 440 13120 13137
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 440 13120 13138 "htmlMath.ml" 440 13120 13139
type(
  int
)
"htmlMath.ml" 440 13120 13127 "htmlMath.ml" 440 13120 13139
type(
  bool
)
"htmlMath.ml" 441 13151 13157 "htmlMath.ml" 441 13151 13169
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_string
)
"htmlMath.ml" 441 13151 13170 "htmlMath.ml" 441 13151 13191
type(
  string
)
"htmlMath.ml" 441 13151 13157 "htmlMath.ml" 441 13151 13191
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 442 13194 13200 "htmlMath.ml" 442 13194 13211
type(
  out_channel -> Element.text list -> unit
)
ident(
  ext_ref HtmlCommon.pretty_mods
)
"htmlMath.ml" 442 13194 13212 "htmlMath.ml" 442 13194 13218
type(
  out_channel
)
ident(
  ext_ref Pervasives.stderr
)
"htmlMath.ml" 442 13194 13219 "htmlMath.ml" 442 13194 13223
type(
  Element.text list
)
ident(
  int_ref mods "htmlMath.ml" 419 12259 12267 "htmlMath.ml" 419 12259 12271
)
"htmlMath.ml" 442 13194 13200 "htmlMath.ml" 442 13194 13223
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 443 13226 13232 "htmlMath.ml" 443 13226 13245
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.prerr_newline
)
"htmlMath.ml" 443 13226 13246 "htmlMath.ml" 443 13226 13248
type(
  unit
)
"htmlMath.ml" 443 13226 13232 "htmlMath.ml" 443 13226 13248
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 442 13194 13200 "htmlMath.ml" 443 13226 13248
type(
  unit
)
"htmlMath.ml" 440 13120 13145 "htmlMath.ml" 444 13249 13256
type(
  unit
)
"htmlMath.ml" 440 13120 13124 "htmlMath.ml" 444 13249 13256
type(
  unit
)
"htmlMath.ml" 445 13259 13266 "htmlMath.ml" 445 13259 13267
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"htmlMath.ml" 445 13259 13267 "htmlMath.ml" 445 13259 13274
type(
  int ref
)
ident(
  ext_ref Misc.verbose
)
"htmlMath.ml" 445 13259 13266 "htmlMath.ml" 445 13259 13274
type(
  int
)
"htmlMath.ml" 445 13259 13275 "htmlMath.ml" 445 13259 13276
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"htmlMath.ml" 445 13259 13277 "htmlMath.ml" 445 13259 13278
type(
  int
)
"htmlMath.ml" 445 13259 13266 "htmlMath.ml" 445 13259 13278
type(
  bool
)
"htmlMath.ml" 446 13284 13290 "htmlMath.ml" 446 13284 13301
type(
  string -> unit
)
ident(
  ext_ref HtmlCommon.prerr_flags
)
"htmlMath.ml" 446 13284 13302 "htmlMath.ml" 446 13284 13322
type(
  string
)
"htmlMath.ml" 446 13284 13290 "htmlMath.ml" 446 13284 13322
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 445 13259 13263 "htmlMath.ml" 446 13284 13322
type(
  unit
)
"htmlMath.ml" 447 13325 13329 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
ident(
  int_ref mods "htmlMath.ml" 419 12259 12267 "htmlMath.ml" 419 12259 12271
)
"htmlMath.ml" 445 13259 13263 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 440 13120 13124 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 439 13070 13097 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 439 13070 13074 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 438 13029 13033 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 437 12965 12969 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 436 12942 12946 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 435 12916 12920 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 434 12875 12879 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 433 12834 12838 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 432 12778 12782 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 431 12721 12725 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 427 12592 12596 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 426 12543 12547 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 424 12480 12484 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 423 12435 12439 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 421 12366 12370 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 420 12321 12325 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 419 12259 12263 "htmlMath.ml" 447 13325 13333
type(
  Element.text list
)
"htmlMath.ml" 448 13334 13341 "htmlMath.ml" 448 13334 13350
type(
  exn
)
"htmlMath.ml" 449 13354 13358 "htmlMath.ml" 449 13354 13363
type(
  exn -> Element.text list
)
ident(
  ext_ref Pervasives.raise
)
"htmlMath.ml" 449 13354 13375 "htmlMath.ml" 449 13354 13416
type(
  string
)
"htmlMath.ml" 449 13354 13364 "htmlMath.ml" 449 13354 13417
type(
  exn
)
"htmlMath.ml" 449 13354 13358 "htmlMath.ml" 449 13354 13417
type(
  Element.text list
)
"htmlMath.ml" 418 12253 12255 "htmlMath.ml" 449 13354 13417
type(
  Element.text list
)
"htmlMath.ml" 415 12177 12179 "htmlMath.ml" 449 13354 13417
type(
  Element.text list
)
"htmlMath.ml" 452 13420 13424 "htmlMath.ml" 452 13420 13444
type(
  unit -> unit
)
ident(
  def line_in_vdisplay_row "htmlMath.ml" 462 13602 13602 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 452 13420 13445 "htmlMath.ml" 452 13420 13447
type(
  unit
)
"htmlMath.ml" 453 13450 13452 "htmlMath.ml" 453 13450 13462
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 453 13450 13463 "htmlMath.ml" 453 13450 13465
type(
  HtmlCommon.block
)
"htmlMath.ml" 453 13450 13466 "htmlMath.ml" 453 13450 13468
type(
  string
)
"htmlMath.ml" 453 13450 13452 "htmlMath.ml" 453 13450 13468
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 454 13471 13473 "htmlMath.ml" 454 13471 13483
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.open_block
)
"htmlMath.ml" 454 13471 13484 "htmlMath.ml" 454 13471 13486
type(
  HtmlCommon.block
)
"htmlMath.ml" 454 13471 13487 "htmlMath.ml" 454 13471 13503
type(
  string
)
"htmlMath.ml" 454 13471 13473 "htmlMath.ml" 454 13471 13503
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 459 13559 13561 "htmlMath.ml" 459 13559 13572
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.force_block
)
"htmlMath.ml" 459 13559 13573 "htmlMath.ml" 459 13559 13575
type(
  HtmlCommon.block
)
"htmlMath.ml" 459 13559 13576 "htmlMath.ml" 459 13559 13578
type(
  string
)
"htmlMath.ml" 459 13559 13561 "htmlMath.ml" 459 13559 13578
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 460 13581 13583 "htmlMath.ml" 460 13581 13594
type(
  HtmlCommon.block -> string -> unit
)
ident(
  ext_ref HtmlCommon.force_block
)
"htmlMath.ml" 460 13581 13595 "htmlMath.ml" 460 13581 13597
type(
  HtmlCommon.block
)
"htmlMath.ml" 460 13581 13598 "htmlMath.ml" 460 13581 13600
type(
  string
)
"htmlMath.ml" 460 13581 13583 "htmlMath.ml" 460 13581 13600
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 459 13559 13561 "htmlMath.ml" 460 13581 13600
type(
  unit
)
"htmlMath.ml" 454 13471 13473 "htmlMath.ml" 460 13581 13600
type(
  unit
)
"htmlMath.ml" 453 13450 13452 "htmlMath.ml" 460 13581 13600
type(
  unit
)
"htmlMath.ml" 462 13602 13606 "htmlMath.ml" 462 13602 13610
type(
  'a -> unit
)
ident(
  def over "htmlMath.ml" 479 14034 14034 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 462 13602 13611 "htmlMath.ml" 462 13602 13618
type(
  'a
)
ident(
  def _lexbuf "htmlMath.ml" 463 13621 13623 "htmlMath.ml" 475 13964 13988
)
"htmlMath.ml" 463 13621 13627 "htmlMath.ml" 463 13621 13631
type(
  Element.text list
)
ident(
  def mods "htmlMath.ml" 467 13764 13766 "htmlMath.ml" 475 13964 13988
)
"htmlMath.ml" 463 13621 13634 "htmlMath.ml" 463 13621 13649
type(
  (bool -> unit) -> Element.text list
)
ident(
  int_ref insert_vdisplay "htmlMath.ml" 414 12146 12150 "htmlMath.ml" 414 12146 12165
)
"htmlMath.ml" 464 13650 13659 "htmlMath.ml" 464 13650 13665
type(
  bool
)
ident(
  def center "htmlMath.ml" 465 13669 13675 "htmlMath.ml" 466 13703 13759
)
"htmlMath.ml" 465 13669 13675 "htmlMath.ml" 465 13669 13688
type(
  bool -> bool -> unit
)
ident(
  int_ref open_vdisplay "htmlMath.ml" 280 8596 8600 "htmlMath.ml" 280 8596 8613
)
"htmlMath.ml" 465 13669 13689 "htmlMath.ml" 465 13669 13695
type(
  bool
)
ident(
  int_ref center "htmlMath.ml" 464 13650 13659 "htmlMath.ml" 464 13650 13665
)
"htmlMath.ml" 465 13669 13696 "htmlMath.ml" 465 13669 13700
type(
  bool
)
"htmlMath.ml" 465 13669 13675 "htmlMath.ml" 465 13669 13700
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 466 13703 13709 "htmlMath.ml" 466 13703 13726
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 466 13703 13727 "htmlMath.ml" 466 13703 13729
type(
  string
)
"htmlMath.ml" 466 13703 13730 "htmlMath.ml" 466 13703 13759
type(
  string
)
"htmlMath.ml" 466 13703 13709 "htmlMath.ml" 466 13703 13759
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 465 13669 13675 "htmlMath.ml" 466 13703 13759
type(
  unit
)
"htmlMath.ml" 464 13650 13654 "htmlMath.ml" 466 13703 13760
type(
  bool -> unit
)
"htmlMath.ml" 463 13621 13634 "htmlMath.ml" 466 13703 13760
call(
  stack
)
type(
  Element.text list
)
"htmlMath.ml" 467 13764 13766 "htmlMath.ml" 467 13764 13784
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 467 13764 13785 "htmlMath.ml" 467 13764 13787
type(
  unit
)
"htmlMath.ml" 467 13764 13766 "htmlMath.ml" 467 13764 13787
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 468 13790 13792 "htmlMath.ml" 468 13790 13812
type(
  unit -> unit
)
ident(
  int_ref line_in_vdisplay_row "htmlMath.ml" 452 13420 13424 "htmlMath.ml" 452 13420 13444
)
"htmlMath.ml" 468 13790 13813 "htmlMath.ml" 468 13790 13815
type(
  unit
)
"htmlMath.ml" 468 13790 13792 "htmlMath.ml" 468 13790 13815
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 469 13818 13820 "htmlMath.ml" 469 13818 13837
type(
  string -> string -> unit
)
ident(
  int_ref open_vdisplay_row "htmlMath.ml" 291 8919 8923 "htmlMath.ml" 291 8919 8940
)
"htmlMath.ml" 469 13818 13838 "htmlMath.ml" 469 13818 13840
type(
  string
)
"htmlMath.ml" 469 13818 13841 "htmlMath.ml" 469 13818 13870
type(
  string
)
"htmlMath.ml" 469 13818 13820 "htmlMath.ml" 469 13818 13870
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 470 13873 13875 "htmlMath.ml" 470 13873 13885
type(
  unit -> unit
)
ident(
  ext_ref HtmlCommon.close_mods
)
"htmlMath.ml" 470 13873 13886 "htmlMath.ml" 470 13873 13888
type(
  unit
)
"htmlMath.ml" 470 13873 13875 "htmlMath.ml" 470 13873 13888
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 471 13891 13893 "htmlMath.ml" 471 13891 13902
type(
  Element.text list -> unit
)
ident(
  ext_ref HtmlCommon.open_mods
)
"htmlMath.ml" 471 13891 13903 "htmlMath.ml" 471 13891 13907
type(
  Element.text list
)
ident(
  int_ref mods "htmlMath.ml" 463 13621 13627 "htmlMath.ml" 463 13621 13631
)
"htmlMath.ml" 471 13891 13893 "htmlMath.ml" 471 13891 13907
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 472 13910 13912 "htmlMath.ml" 472 13910 13918
type(
  (unit -> unit) -> unit
)
ident(
  ext_ref HtmlCommon.freeze
)
"htmlMath.ml" 473 13919 13928 "htmlMath.ml" 473 13919 13930
type(
  unit
)
"htmlMath.ml" 474 13934 13940 "htmlMath.ml" 474 13934 13958
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay_row "htmlMath.ml" 298 9092 9096 "htmlMath.ml" 298 9092 9114
)
"htmlMath.ml" 474 13934 13959 "htmlMath.ml" 474 13934 13961
type(
  unit
)
"htmlMath.ml" 474 13934 13940 "htmlMath.ml" 474 13934 13961
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 475 13964 13970 "htmlMath.ml" 475 13964 13984
type(
  unit -> unit
)
ident(
  int_ref close_vdisplay "htmlMath.ml" 286 8815 8819 "htmlMath.ml" 286 8815 8833
)
"htmlMath.ml" 475 13964 13985 "htmlMath.ml" 475 13964 13987
type(
  unit
)
"htmlMath.ml" 475 13964 13970 "htmlMath.ml" 475 13964 13987
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 474 13934 13940 "htmlMath.ml" 475 13964 13987
type(
  unit
)
"htmlMath.ml" 473 13919 13923 "htmlMath.ml" 475 13964 13988
type(
  unit -> unit
)
"htmlMath.ml" 472 13910 13912 "htmlMath.ml" 475 13964 13988
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 471 13891 13893 "htmlMath.ml" 475 13964 13988
type(
  unit
)
"htmlMath.ml" 470 13873 13875 "htmlMath.ml" 475 13964 13988
type(
  unit
)
"htmlMath.ml" 469 13818 13820 "htmlMath.ml" 475 13964 13988
type(
  unit
)
"htmlMath.ml" 468 13790 13792 "htmlMath.ml" 475 13964 13988
type(
  unit
)
"htmlMath.ml" 467 13764 13766 "htmlMath.ml" 475 13964 13988
type(
  unit
)
"htmlMath.ml" 463 13621 13623 "htmlMath.ml" 475 13964 13988
type(
  unit
)
"htmlMath.ml" 479 14034 14038 "htmlMath.ml" 479 14034 14042
type(
  'a -> (int -> 'b) -> (int -> 'c) -> unit
)
ident(
  def left "htmlMath.ml" 492 14382 14382 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 479 14034 14043 "htmlMath.ml" 479 14034 14044
type(
  'a
)
"htmlMath.ml" 479 14034 14045 "htmlMath.ml" 479 14034 14052
type(
  int -> 'b
)
ident(
  def k_delim "htmlMath.ml" 479 14034 14053 "htmlMath.ml" 490 14348 14380
)
"htmlMath.ml" 479 14034 14053 "htmlMath.ml" 479 14034 14054
type(
  int -> 'c
)
ident(
  def k "htmlMath.ml" 480 14057 14059 "htmlMath.ml" 490 14348 14380
)
"htmlMath.ml" 480 14057 14063 "htmlMath.ml" 480 14057 14064
type(
  int
)
"htmlMath.ml" 480 14057 14065 "htmlMath.ml" 480 14057 14066
type(
  unit -> unit
)
ident(
  def f "htmlMath.ml" 481 14102 14104 "htmlMath.ml" 490 14348 14380
)
"htmlMath.ml" 480 14057 14067 "htmlMath.ml" 480 14057 14076
type(
  bool
)
ident(
  def is_freeze "htmlMath.ml" 481 14102 14104 "htmlMath.ml" 490 14348 14380
)
"htmlMath.ml" 480 14057 14063 "htmlMath.ml" 480 14057 14076
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 480 14057 14079 "htmlMath.ml" 480 14057 14095
type(
  unit -> int * (unit -> unit) * bool
)
ident(
  int_ref end_item_display "htmlMath.ml" 94 2648 2652 "htmlMath.ml" 94 2648 2668
)
"htmlMath.ml" 480 14057 14096 "htmlMath.ml" 480 14057 14098
type(
  unit
)
"htmlMath.ml" 480 14057 14079 "htmlMath.ml" 480 14057 14098
call(
  stack
)
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 481 14102 14104 "htmlMath.ml" 481 14102 14109
type(
  (int -> unit) -> unit
)
ident(
  int_ref delay "htmlMath.ml" 25 950 954 "htmlMath.ml" 25 950 959
)
"htmlMath.ml" 482 14110 14119 "htmlMath.ml" 482 14110 14124
type(
  int
)
ident(
  def vsize "htmlMath.ml" 483 14128 14134 "htmlMath.ml" 489 14336 14344
)
"htmlMath.ml" 483 14128 14134 "htmlMath.ml" 483 14128 14152
type(
  (unit -> unit) -> bool -> unit
)
ident(
  int_ref begin_item_display "htmlMath.ml" 84 2373 2377 "htmlMath.ml" 84 2373 2395
)
"htmlMath.ml" 483 14128 14158 "htmlMath.ml" 483 14128 14160
type(
  unit
)
"htmlMath.ml" 483 14128 14164 "htmlMath.ml" 483 14128 14166
type(
  unit
)
"htmlMath.ml" 483 14128 14153 "htmlMath.ml" 483 14128 14167
type(
  unit -> unit
)
"htmlMath.ml" 483 14128 14168 "htmlMath.ml" 483 14128 14173
type(
  bool
)
"htmlMath.ml" 483 14128 14134 "htmlMath.ml" 483 14128 14173
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 484 14176 14182 "htmlMath.ml" 484 14176 14189
type(
  int -> 'b
)
ident(
  int_ref k_delim "htmlMath.ml" 479 14034 14045 "htmlMath.ml" 479 14034 14052
)
"htmlMath.ml" 484 14176 14190 "htmlMath.ml" 484 14176 14195
type(
  int
)
ident(
  int_ref vsize "htmlMath.ml" 482 14110 14119 "htmlMath.ml" 482 14110 14124
)
"htmlMath.ml" 484 14176 14182 "htmlMath.ml" 484 14176 14195
call(
  stack
)
type(
  'b
)
"htmlMath.ml" 485 14198 14204 "htmlMath.ml" 485 14198 14210
type(
  int * (unit -> unit) * bool -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"htmlMath.ml" 485 14198 14212 "htmlMath.ml" 485 14198 14228
type(
  unit -> int * (unit -> unit) * bool
)
ident(
  int_ref end_item_display "htmlMath.ml" 94 2648 2652 "htmlMath.ml" 94 2648 2668
)
"htmlMath.ml" 485 14198 14229 "htmlMath.ml" 485 14198 14231
type(
  unit
)
"htmlMath.ml" 485 14198 14211 "htmlMath.ml" 485 14198 14232
call(
  stack
)
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 485 14198 14204 "htmlMath.ml" 485 14198 14232
type(
  unit
)
"htmlMath.ml" 486 14235 14241 "htmlMath.ml" 486 14235 14259
type(
  (unit -> unit) -> bool -> unit
)
ident(
  int_ref begin_item_display "htmlMath.ml" 84 2373 2377 "htmlMath.ml" 84 2373 2395
)
"htmlMath.ml" 486 14235 14265 "htmlMath.ml" 486 14235 14267
type(
  unit
)
"htmlMath.ml" 486 14235 14271 "htmlMath.ml" 486 14235 14273
type(
  unit
)
"htmlMath.ml" 486 14235 14260 "htmlMath.ml" 486 14235 14274
type(
  unit -> unit
)
"htmlMath.ml" 486 14235 14275 "htmlMath.ml" 486 14235 14280
type(
  bool
)
"htmlMath.ml" 486 14235 14241 "htmlMath.ml" 486 14235 14280
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 487 14283 14289 "htmlMath.ml" 487 14283 14290
type(
  int -> 'c
)
ident(
  int_ref k "htmlMath.ml" 479 14034 14053 "htmlMath.ml" 479 14034 14054
)
"htmlMath.ml" 487 14283 14291 "htmlMath.ml" 487 14283 14296
type(
  int
)
ident(
  int_ref vsize "htmlMath.ml" 482 14110 14119 "htmlMath.ml" 482 14110 14124
)
"htmlMath.ml" 487 14283 14289 "htmlMath.ml" 487 14283 14296
call(
  stack
)
type(
  'c
)
"htmlMath.ml" 488 14299 14309 "htmlMath.ml" 488 14299 14310
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 488 14299 14313 "htmlMath.ml" 488 14299 14329
type(
  unit -> int * (unit -> unit) * bool
)
ident(
  int_ref end_item_display "htmlMath.ml" 94 2648 2652 "htmlMath.ml" 94 2648 2668
)
"htmlMath.ml" 488 14299 14330 "htmlMath.ml" 488 14299 14332
type(
  unit
)
"htmlMath.ml" 488 14299 14313 "htmlMath.ml" 488 14299 14332
call(
  stack
)
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 489 14336 14342 "htmlMath.ml" 489 14336 14344
type(
  unit
)
"htmlMath.ml" 488 14299 14305 "htmlMath.ml" 489 14336 14344
type(
  unit
)
"htmlMath.ml" 487 14283 14289 "htmlMath.ml" 489 14336 14344
type(
  unit
)
"htmlMath.ml" 486 14235 14241 "htmlMath.ml" 489 14336 14344
type(
  unit
)
"htmlMath.ml" 485 14198 14204 "htmlMath.ml" 489 14336 14344
type(
  unit
)
"htmlMath.ml" 484 14176 14182 "htmlMath.ml" 489 14336 14344
type(
  unit
)
"htmlMath.ml" 483 14128 14134 "htmlMath.ml" 489 14336 14344
type(
  unit
)
"htmlMath.ml" 482 14110 14114 "htmlMath.ml" 489 14336 14345
type(
  int -> unit
)
"htmlMath.ml" 481 14102 14104 "htmlMath.ml" 489 14336 14345
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 490 14348 14350 "htmlMath.ml" 490 14348 14368
type(
  (unit -> unit) -> bool -> unit
)
ident(
  int_ref begin_item_display "htmlMath.ml" 84 2373 2377 "htmlMath.ml" 84 2373 2395
)
"htmlMath.ml" 490 14348 14369 "htmlMath.ml" 490 14348 14370
type(
  unit -> unit
)
ident(
  int_ref f "htmlMath.ml" 480 14057 14065 "htmlMath.ml" 480 14057 14066
)
"htmlMath.ml" 490 14348 14371 "htmlMath.ml" 490 14348 14380
type(
  bool
)
ident(
  int_ref is_freeze "htmlMath.ml" 480 14057 14067 "htmlMath.ml" 480 14057 14076
)
"htmlMath.ml" 490 14348 14350 "htmlMath.ml" 490 14348 14380
call(
  tail
)
type(
  unit
)
"htmlMath.ml" 481 14102 14104 "htmlMath.ml" 490 14348 14380
type(
  unit
)
"htmlMath.ml" 480 14057 14059 "htmlMath.ml" 490 14348 14380
type(
  unit
)
"htmlMath.ml" 492 14382 14386 "htmlMath.ml" 492 14382 14391
type(
  'a -> (int -> 'b) -> int
)
ident(
  def right "htmlMath.ml" 499 14598 14605 "htmlMath.ml" 1 0 -1
)
"htmlMath.ml" 492 14382 14392 "htmlMath.ml" 492 14382 14393
type(
  'a
)
"htmlMath.ml" 492 14382 14394 "htmlMath.ml" 492 14382 14401
type(
  int -> 'b
)
ident(
  def k_delim "htmlMath.ml" 493 14404 14406 "htmlMath.ml" 499 14598 14605
)
"htmlMath.ml" 493 14404 14410 "htmlMath.ml" 493 14404 14415
type(
  int
)
ident(
  def vsize "htmlMath.ml" 494 14453 14455 "htmlMath.ml" 499 14598 14605
)
"htmlMath.ml" 493 14404 14416 "htmlMath.ml" 493 14404 14417
type(
  unit -> unit
)
ident(
  def f "htmlMath.ml" 494 14453 14455 "htmlMath.ml" 499 14598 14605
)
"htmlMath.ml" 493 14404 14418 "htmlMath.ml" 493 14404 14427
type(
  bool
)
ident(
  def is_freeze "htmlMath.ml" 494 14453 14455 "htmlMath.ml" 499 14598 14605
)
"htmlMath.ml" 493 14404 14410 "htmlMath.ml" 493 14404 14427
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 493 14404 14430 "htmlMath.ml" 493 14404 14446
type(
  unit -> int * (unit -> unit) * bool
)
ident(
  int_ref end_item_display "htmlMath.ml" 94 2648 2652 "htmlMath.ml" 94 2648 2668
)
"htmlMath.ml" 493 14404 14447 "htmlMath.ml" 493 14404 14449
type(
  unit
)
"htmlMath.ml" 493 14404 14430 "htmlMath.ml" 493 14404 14449
call(
  stack
)
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 494 14453 14455 "htmlMath.ml" 494 14453 14473
type(
  (unit -> unit) -> bool -> unit
)
ident(
  int_ref begin_item_display "htmlMath.ml" 84 2373 2377 "htmlMath.ml" 84 2373 2395
)
"htmlMath.ml" 494 14453 14479 "htmlMath.ml" 494 14453 14481
type(
  unit
)
"htmlMath.ml" 494 14453 14485 "htmlMath.ml" 494 14453 14487
type(
  unit
)
"htmlMath.ml" 494 14453 14474 "htmlMath.ml" 494 14453 14488
type(
  unit -> unit
)
"htmlMath.ml" 494 14453 14489 "htmlMath.ml" 494 14453 14494
type(
  bool
)
"htmlMath.ml" 494 14453 14455 "htmlMath.ml" 494 14453 14494
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 495 14497 14499 "htmlMath.ml" 495 14497 14506
type(
  int -> 'b
)
ident(
  int_ref k_delim "htmlMath.ml" 492 14382 14394 "htmlMath.ml" 492 14382 14401
)
"htmlMath.ml" 495 14497 14507 "htmlMath.ml" 495 14497 14512
type(
  int
)
ident(
  int_ref vsize "htmlMath.ml" 493 14404 14410 "htmlMath.ml" 493 14404 14415
)
"htmlMath.ml" 495 14497 14499 "htmlMath.ml" 495 14497 14512
call(
  stack
)
type(
  'b
)
"htmlMath.ml" 496 14514 14516 "htmlMath.ml" 496 14514 14522
type(
  int * (unit -> unit) * bool -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"htmlMath.ml" 496 14514 14524 "htmlMath.ml" 496 14514 14540
type(
  unit -> int * (unit -> unit) * bool
)
ident(
  int_ref end_item_display "htmlMath.ml" 94 2648 2652 "htmlMath.ml" 94 2648 2668
)
"htmlMath.ml" 496 14514 14541 "htmlMath.ml" 496 14514 14543
type(
  unit
)
"htmlMath.ml" 496 14514 14523 "htmlMath.ml" 496 14514 14544
call(
  stack
)
type(
  int * (unit -> unit) * bool
)
"htmlMath.ml" 496 14514 14516 "htmlMath.ml" 496 14514 14544
type(
  unit
)
"htmlMath.ml" 497 14547 14549 "htmlMath.ml" 497 14547 14554
type(
  int -> unit
)
ident(
  int_ref flush "htmlMath.ml" 33 1162 1166 "htmlMath.ml" 33 1162 1171
)
"htmlMath.ml" 497 14547 14555 "htmlMath.ml" 497 14547 14560
type(
  int
)
ident(
  int_ref vsize "htmlMath.ml" 493 14404 14410 "htmlMath.ml" 493 14404 14415
)
"htmlMath.ml" 497 14547 14549 "htmlMath.ml" 497 14547 14560
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 498 14563 14565 "htmlMath.ml" 498 14563 14583
type(
  (unit -> unit) -> bool -> unit
)
ident(
  int_ref begin_item_display "htmlMath.ml" 84 2373 2377 "htmlMath.ml" 84 2373 2395
)
"htmlMath.ml" 498 14563 14584 "htmlMath.ml" 498 14563 14585
type(
  unit -> unit
)
ident(
  int_ref f "htmlMath.ml" 493 14404 14416 "htmlMath.ml" 493 14404 14417
)
"htmlMath.ml" 498 14563 14586 "htmlMath.ml" 498 14563 14595
type(
  bool
)
ident(
  int_ref is_freeze "htmlMath.ml" 493 14404 14418 "htmlMath.ml" 493 14404 14427
)
"htmlMath.ml" 498 14563 14565 "htmlMath.ml" 498 14563 14595
call(
  stack
)
type(
  unit
)
"htmlMath.ml" 499 14598 14600 "htmlMath.ml" 499 14598 14605
type(
  int
)
ident(
  int_ref vsize "htmlMath.ml" 493 14404 14410 "htmlMath.ml" 493 14404 14415
)
"htmlMath.ml" 498 14563 14565 "htmlMath.ml" 499 14598 14605
type(
  int
)
"htmlMath.ml" 497 14547 14549 "htmlMath.ml" 499 14598 14605
type(
  int
)
"htmlMath.ml" 496 14514 14516 "htmlMath.ml" 499 14598 14605
type(
  int
)
"htmlMath.ml" 495 14497 14499 "htmlMath.ml" 499 14598 14605
type(
  int
)
"htmlMath.ml" 494 14453 14455 "htmlMath.ml" 499 14598 14605
type(
  int
)
"htmlMath.ml" 493 14404 14406 "htmlMath.ml" 499 14598 14605
type(
  int
)
